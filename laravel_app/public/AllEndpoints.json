{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Communication/GetPortalReleaseNotes": {
      "get": {
        "tags": [
          "CommunicationApi"
        ],
        "summary": "Get Portal Release Notes",
        "operationId": "Communication/GetPortalReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[PortalReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Consumable/List": {
      "post": {
        "tags": [
          "ConsumableApi"
        ],
        "summary": "List all devices consumables",
        "operationId": "Consumable/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConsumablesDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/List": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the offices.",
        "operationId": "CostCenter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCostCentersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Get": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the office.",
        "operationId": "CostCenter/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Creates the office.",
        "operationId": "CostCenter/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Update": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Updates the office.",
        "operationId": "CostCenter/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Delete": {
      "delete": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Delete  office.",
        "operationId": "CostCenter/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns counters",
        "operationId": "Counter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListDetailed": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/ListDetailed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersDetailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDetailedDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListBlended": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns blended counters",
        "operationId": "Counter/ListBlended",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersBlendDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Export": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Export",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CounterCatalogItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Update": {
      "put": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Suggestions": {
      "get": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Suggestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CounterCatalogSuggestionsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/List": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/Device/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Gets or sets the from date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Gets or sets the to date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CounterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/Export": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Export detailed counters",
        "operationId": "Counter/Device/Export",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportToCsv",
            "in": "query",
            "description": "Gets or sets a value indicating whether [export to CSV] or [export to XSLSX].",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Gets or sets the from date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Gets or sets the to date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/Update": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Insert Update device counters",
        "operationId": "Counter/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDeviceCounterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CounterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/UpdateCounterDetailTag": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Insert Update device counters",
        "operationId": "Counter/Device/UpdateCounterDetailTag",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCounterDetailedTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/Delete": {
      "delete": {
        "tags": [
          "Counter"
        ],
        "summary": "delete device counters",
        "operationId": "Counter/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "counterId",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[BaseResponse]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListMaintenanceKitCounters": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns maintenance kit counters",
        "operationId": "Counter/ListMaintenanceKitCounters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[MaintenanceKitCounterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/UploadOfflineDeviceCounters": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Upload offline device counters",
        "operationId": "Counter/UploadOfflineDeviceCounters",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadOfflineDeviceCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/SendEXplorerInvitation": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Sends the e xplorer invitation.",
        "operationId": "Customer/SendEXplorerInvitation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendEXplorerInvitationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/GetCustomers": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the customers.",
        "operationId": "Customer/GetCustomers",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/GetCustomer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the customer.",
        "operationId": "Customer/GetCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/GetCustomerByCode": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the customer.",
        "operationId": "Customer/GetCustomerByCode",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/CreateCustomer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Creates the customer.",
        "operationId": "Customer/CreateCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CreateCustomerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateCustomerResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/GetEmailExplorerInstallationToCustomer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Returns the mail parts (subjet and body) of the email to be sent to the customer for eXplorer installation.",
        "operationId": "Customer/GetEmailExplorerInstallationToCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CreateCustomerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CodeDesc]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/UpdateCustomer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Update the customer.",
        "operationId": "Customer/UpdateCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateCustomerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/DeleteCustomer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete customer",
        "operationId": "Customer/DeleteCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/AlertSettings/Get": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the dealer alert settings",
        "operationId": "Customer/AlertSettings/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerAlertSettingsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/AlertSettings/Update": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "set the dealer alert settings",
        "operationId": "Customer/AlertSettings/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CustomerAlertSettingsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/Accessories/Get": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the dealer alert settings",
        "operationId": "Customer/Accessories/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerAccessoriesDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/AdvancedOptions/Get": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the customer advanced options",
        "operationId": "Customer/AdvancedOptions/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerAdvancedOptionsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/AdvancedOptions/Update": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Set the customer advanced options",
        "operationId": "Customer/AdvancedOptions/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerAdvancedOptionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/CustomerServicesStatus/Get": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the customer services status.",
        "operationId": "Customer/CustomerServicesStatus/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerServicesStatusDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/eXplorerSettings/Get": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the customer eXplorer settings",
        "operationId": "Customer/eXplorerSettings/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerExplorerSettingsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/eXplorerSettings/Update": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "set the customer eXplorer settings",
        "operationId": "Customer/eXplorerSettings/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CustomerExplorerSettingsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/EpsonSettings/Get": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Gets the epson ERS and USB settings",
        "operationId": "Customer/EpsonSettings/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerEpsonSettingsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/EpsonSettings/Update": {
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "set the customer epsons settings",
        "operationId": "Customer/EpsonSettings/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CustomerEpsonSettingsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Customer/EpsonUSBCustomerId/Get": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get a new Epson USB customer ID for the email subject",
        "operationId": "Customer/EpsonUSBCustomerId/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[String]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerCredentials/Delete": {
      "delete": {
        "tags": [
          "CustomerCredentialsApi"
        ],
        "summary": "Delete credentials set",
        "operationId": "CustomerCredentials/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerDashboard": {
      "get": {
        "tags": [
          "CustomerDashboard"
        ],
        "summary": "Gets the customer's dashboard.",
        "operationId": "CustomerDashboard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerDashboardDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerDashboard/Get": {
      "post": {
        "tags": [
          "CustomerDashboard"
        ],
        "summary": "Gets the customer's dashboard.",
        "operationId": "CustomerDashboard/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[MpsDashboardCustomerDto]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/CustomerDashboard/Devices": {
      "post": {
        "tags": [
          "CustomerDashboard"
        ],
        "summary": "",
        "operationId": "CustomerDashboard/Devices",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDashboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerDashboardDevicesDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerDashboard/Pages": {
      "get": {
        "tags": [
          "CustomerDashboard"
        ],
        "operationId": "CustomerDashboard/Pages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerDashboardPagesDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerDashboard/Connectors": {
      "post": {
        "tags": [
          "CustomerDashboard"
        ],
        "summary": "",
        "operationId": "CustomerDashboard/Connectors",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerDashboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerDashboardConnectorsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerNotification/List": {
      "get": {
        "tags": [
          "CustomerNotificationApi"
        ],
        "summary": "GetNotificationList",
        "operationId": "CustomerNotification/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "notificationType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "HpSdsServiceRequest",
              "DealerDashboard",
              "Alert",
              "Delivery",
              "NewDevices",
              "ReplacedConsumables",
              "ReadingProblems",
              "InstallationProposal",
              "ReInstallationProposal",
              "ReadingProblemsExplorer",
              "PanelMessage",
              "Export",
              "PostAlert",
              "TraceVolume",
              "ReadingProblemsCustomerTemplate",
              "ReadingProblemsExplorerCustomerTemplate",
              "PrintReleafActivationCustomerTemplate"
            ]
          },
          {
            "name": "notificationMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Email",
              "Callback",
              "Ftp"
            ]
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Italiano",
              "English",
              "Deutsche",
              "French",
              "Spanish",
              "Norwegian",
              "Korean",
              "Portuguese",
              "Catalan",
              "Japanese",
              "Vietnamese",
              "Thai",
              "TraditionalChinese",
              "Polish"
            ]
          },
          {
            "name": "isActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[NotificationListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerNotification/Get": {
      "get": {
        "tags": [
          "CustomerNotificationApi"
        ],
        "summary": "Get notification",
        "operationId": "CustomerNotification/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[NotificationDetailsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerNotification/GetSampleNotification": {
      "get": {
        "tags": [
          "CustomerNotificationApi"
        ],
        "summary": "Get sample notification",
        "operationId": "CustomerNotification/GetSampleNotification",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CodeDesc]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerNotification/GetNotificationPlaceholders": {
      "get": {
        "tags": [
          "CustomerNotificationApi"
        ],
        "summary": "Get notification placeholders",
        "operationId": "CustomerNotification/GetNotificationPlaceholders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "notificationType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "HpSdsServiceRequest",
              "DealerDashboard",
              "Alert",
              "Delivery",
              "NewDevices",
              "ReplacedConsumables",
              "ReadingProblems",
              "InstallationProposal",
              "ReInstallationProposal",
              "ReadingProblemsExplorer",
              "PanelMessage",
              "Export",
              "PostAlert",
              "TraceVolume",
              "ReadingProblemsCustomerTemplate",
              "ReadingProblemsExplorerCustomerTemplate",
              "PrintReleafActivationCustomerTemplate"
            ]
          },
          {
            "name": "notificationMode",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Email",
              "Callback",
              "Ftp"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[NotificationPlaceholderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerNotification/Update": {
      "put": {
        "tags": [
          "CustomerNotificationApi"
        ],
        "summary": "Get notification",
        "operationId": "CustomerNotification/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerNotification/Create": {
      "post": {
        "tags": [
          "CustomerNotificationApi"
        ],
        "summary": "Create a customer notification",
        "operationId": "CustomerNotification/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustomerNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerNotification/ApplyDealerTemplate": {
      "put": {
        "tags": [
          "CustomerNotificationApi"
        ],
        "summary": "Apply a dealer template to the customer notification",
        "operationId": "CustomerNotification/ApplyDealerTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplyDealerTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomerNotification/Delete": {
      "delete": {
        "tags": [
          "CustomerNotificationApi"
        ],
        "summary": "Create a customer notification",
        "operationId": "CustomerNotification/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomField/List": {
      "get": {
        "tags": [
          "CustomFieldApi"
        ],
        "summary": "Returns the list of Custom Fields configured by the dealer",
        "operationId": "CustomField/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CustomFieldDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomField/Get": {
      "get": {
        "tags": [
          "CustomFieldApi"
        ],
        "summary": "Returns a Custom Fields by Id",
        "operationId": "CustomField/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomFieldDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomField/Create": {
      "post": {
        "tags": [
          "CustomFieldApi"
        ],
        "summary": "Create a custom Field",
        "operationId": "CustomField/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustomFieldRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomFieldDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomField/Update": {
      "put": {
        "tags": [
          "CustomFieldApi"
        ],
        "summary": "Update a custom field",
        "operationId": "CustomField/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CustomFieldDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CustomField/Delete": {
      "delete": {
        "tags": [
          "CustomFieldApi"
        ],
        "summary": "Delete a custom Field",
        "operationId": "CustomField/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/GetDealers": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealers list",
        "operationId": "Dealer/GetDealers",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilteredPagedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/GetDealersInfo": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "summary": "Get the dealers list with contract, preferences infos",
        "operationId": "Dealer/GetDealersInfo",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilteredPagedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/GetDealersWithoutContract": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealers that do not have a contract.",
        "operationId": "Dealer/GetDealersWithoutContract",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilteredPagedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/GetDealer": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer.",
        "operationId": "Dealer/GetDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerDto]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Dealer/Customizations/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer customizations.",
        "operationId": "Dealer/Customizations/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerCustomizationsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/Customizations/Update": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "set the dealer customizations.",
        "operationId": "Dealer/Customizations/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerCustomizationsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/AccountingSettings/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer accounting settings.",
        "operationId": "Dealer/AccountingSettings/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerAccountingSettingsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/AccountingSettings/Update": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "set the dealer accounting settings.",
        "operationId": "Dealer/AccountingSettings/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerAccountingSettingsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/RemoteOfflineCountersSettings/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer remote offline counters settings.",
        "operationId": "Dealer/RemoteOfflineCountersSettings/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerRemoteOfflineCountersSettingsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/RemoteOfflineCountersSettings/Update": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "set the dealer remote offline counters settings.",
        "operationId": "Dealer/RemoteOfflineCountersSettings/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerRemoteOfflineCountersSettingsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/DistributorSettings/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Get the Distributor dealer settings",
        "operationId": "Dealer/DistributorSettings/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerDistributorSettingsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/DistributorSettings/Update": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "Set the Distributor dealer settings",
        "operationId": "Dealer/DistributorSettings/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerDistributorSettingsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/DealerServicesStatus/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer services status.",
        "operationId": "Dealer/DealerServicesStatus/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerServicesStatusDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/AlertSettings/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer alert settings",
        "operationId": "Dealer/AlertSettings/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerAlertSettingsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/AlertSettings/Update": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "set the dealer alert settings",
        "operationId": "Dealer/AlertSettings/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerAlertSettingsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/eXplorerSettings/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer eXplorer settings",
        "operationId": "Dealer/eXplorerSettings/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerExplorerSettingsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/eXplorerSettings/Update": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "set the dealer eXplorer settings",
        "operationId": "Dealer/eXplorerSettings/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerExplorerSettingsDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/AdvancedOptions/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer advanced options",
        "operationId": "Dealer/AdvancedOptions/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerAdvancedOptionsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/AlertLimitOptions/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the alert limit options.",
        "operationId": "Dealer/AlertLimitOptions/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerAlertLimitOptionsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/GetDealerByCode": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer.",
        "operationId": "Dealer/GetDealerByCode",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/Get": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer.",
        "operationId": "Dealer/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/GetDealerHierarchy": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer.",
        "operationId": "Dealer/GetDealerHierarchy",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerHierarchyDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/GetDealerSupportTicketConfiguration": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "summary": "Gets the dealer support ticket configuration.",
        "operationId": "Dealer/GetDealerSupportTicketConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupportTicketConfigurationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/Update": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "Update dealer main data",
        "operationId": "Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealerMainDataDtoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/UpdateDealerSupportTicketConfiguration": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "summary": "Updates the dealer support ticket configuration.",
        "operationId": "Dealer/UpdateDealerSupportTicketConfiguration",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerSupportTicketConfigurationDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/DeclineDemoRequest": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "Decline demo request",
        "operationId": "Dealer/DeclineDemoRequest",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeclineDemoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/PostponeDemoExpiration": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "Postpones the demo expiration.",
        "operationId": "Dealer/PostponeDemoExpiration",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "expirationRequest",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostponeDemoExpirationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/DemoRequest/List": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "GetDemoRequests",
        "operationId": "Dealer/DemoRequest/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "description": "Get Demo requests activate or not",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isDeclined",
            "in": "query",
            "description": "Get Demo requests declinated or not",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DemoContactDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/DemoRequest/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "GetDemoRequest",
        "operationId": "Dealer/DemoRequest/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DemoContactDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/Onboarding/Get": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "summary": "Get the dealer onboarding survey",
        "operationId": "Dealer/Onboarding/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerOnboardingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/Onboarding/Update": {
      "put": {
        "tags": [
          "Dealer"
        ],
        "summary": "Update the dealer onboarding survey",
        "operationId": "Dealer/Onboarding/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerOnboardingDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerOnboardingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/GetDealerTagsHierarchy": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "operationId": "Dealer/GetDealerTagsHierarchy",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerTagHierarchyDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/ExportDealerTagsHierarchy": {
      "get": {
        "tags": [
          "Dealer"
        ],
        "operationId": "Dealer/ExportDealerTagsHierarchy",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/SaveDealerTagsHierarchy": {
      "post": {
        "tags": [
          "Dealer"
        ],
        "operationId": "Dealer/SaveDealerTagsHierarchy",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveDealerTagsHierarchyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlend/List": {
      "get": {
        "tags": [
          "DealerCounterBlendApi"
        ],
        "summary": "Returns list of dealer counters detailed tags",
        "operationId": "Dealer/CounterBlend/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "description": "Gets or sets the brand.",
            "required": false,
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "description": "Gets or sets the source.",
            "required": false,
            "type": "string",
            "enum": [
              "Mps",
              "HpSds"
            ]
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerCounterBlendListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlend/Get": {
      "get": {
        "tags": [
          "DealerCounterBlendApi"
        ],
        "summary": "Return a counter blend",
        "operationId": "Dealer/CounterBlend/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerCounterBlendDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlend/Search": {
      "get": {
        "tags": [
          "DealerCounterBlendApi"
        ],
        "summary": "Search form available counters detailed TAG",
        "operationId": "Dealer/CounterBlend/Search",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Mps",
              "HpSds"
            ]
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CounterDetailedAssociableListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlend/Create": {
      "post": {
        "tags": [
          "DealerCounterBlendApi"
        ],
        "summary": "Create the counter blend Field and related  descriptions",
        "operationId": "Dealer/CounterBlend/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[DealerCounterBlendDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerCounterBlendListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlend/Update": {
      "put": {
        "tags": [
          "DealerCounterBlendApi"
        ],
        "summary": "Update the counter blend Field and related  descriptions",
        "operationId": "Dealer/CounterBlend/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerCounterBlendDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerCounterBlendListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlend/Delete": {
      "delete": {
        "tags": [
          "DealerCounterBlendApi"
        ],
        "summary": "Delete the Dealer counter blend field",
        "operationId": "Dealer/CounterBlend/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlend/ClearCounter": {
      "delete": {
        "tags": [
          "DealerCounterBlendApi"
        ],
        "summary": "Clear the counter readings for a specific blend counter",
        "operationId": "Dealer/CounterBlend/ClearCounter",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlendToStandard/List": {
      "get": {
        "tags": [
          "DealerCounterBlendToStandardApi"
        ],
        "summary": "Lists the specified request.",
        "operationId": "Dealer/CounterBlendToStandard/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerCounterBlendToStandardListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlendToStandard/Get": {
      "get": {
        "tags": [
          "DealerCounterBlendToStandardApi"
        ],
        "summary": "Gets the specified request.",
        "operationId": "Dealer/CounterBlendToStandard/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerCounterBlendToStandardListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlendToStandard/GetByDevice": {
      "get": {
        "tags": [
          "DealerCounterBlendToStandardApi"
        ],
        "summary": "Gets the by device.",
        "operationId": "Dealer/CounterBlendToStandard/GetByDevice",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceCounterBlendToStandardDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlendToStandard/Create": {
      "post": {
        "tags": [
          "DealerCounterBlendToStandardApi"
        ],
        "summary": "Creates the specified request.",
        "operationId": "Dealer/CounterBlendToStandard/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDealerCountersBlendedToStandardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlendToStandard/Update": {
      "put": {
        "tags": [
          "DealerCounterBlendToStandardApi"
        ],
        "summary": "Updates the specified request.",
        "operationId": "Dealer/CounterBlendToStandard/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDealerCountersBlendedToStandardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Dealer/CounterBlendToStandard/Delete": {
      "delete": {
        "tags": [
          "DealerCounterBlendToStandardApi"
        ],
        "summary": "Deletes the specified request.",
        "operationId": "Dealer/CounterBlendToStandard/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/Template/Get": {
      "get": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Get the dealer template base",
        "operationId": "DealerNotification/Template/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerNotificationTemplateDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/Template/Update": {
      "put": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Update the dealer template base",
        "operationId": "DealerNotification/Template/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerNotificationTemplateDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/RemoveMailAddressFromCustomers": {
      "put": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Remove EMail Address From Customers notifications fields",
        "operationId": "DealerNotification/RemoveMailAddressFromCustomers",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealerRemoveMailAddressFromCustomersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/List": {
      "get": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "",
        "operationId": "DealerNotification/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "notificationType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "HpSdsServiceRequest",
              "DealerDashboard",
              "Alert",
              "Delivery",
              "NewDevices",
              "ReplacedConsumables",
              "ReadingProblems",
              "InstallationProposal",
              "ReInstallationProposal",
              "ReadingProblemsExplorer",
              "PanelMessage",
              "Export",
              "PostAlert",
              "TraceVolume",
              "ReadingProblemsCustomerTemplate",
              "ReadingProblemsExplorerCustomerTemplate",
              "PrintReleafActivationCustomerTemplate"
            ]
          },
          {
            "name": "notificationMode",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Email",
              "Callback",
              "Ftp"
            ]
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Italiano",
              "English",
              "Deutsche",
              "French",
              "Spanish",
              "Norwegian",
              "Korean",
              "Portuguese",
              "Catalan",
              "Japanese",
              "Vietnamese",
              "Thai",
              "TraditionalChinese",
              "Polish"
            ]
          },
          {
            "name": "isActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[NotificationListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/Get": {
      "get": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Get notification",
        "operationId": "DealerNotification/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerNotificationDto2]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/Update": {
      "put": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Get notification",
        "operationId": "DealerNotification/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDealerNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CodeDesc]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/GetSampleNotification": {
      "get": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Get sample notification",
        "operationId": "DealerNotification/GetSampleNotification",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CodeDesc]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/GetNotificationPlaceholders": {
      "get": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Get notification placeholders",
        "operationId": "DealerNotification/GetNotificationPlaceholders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "notificationType",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "HpSdsServiceRequest",
              "DealerDashboard",
              "Alert",
              "Delivery",
              "NewDevices",
              "ReplacedConsumables",
              "ReadingProblems",
              "InstallationProposal",
              "ReInstallationProposal",
              "ReadingProblemsExplorer",
              "PanelMessage",
              "Export",
              "PostAlert",
              "TraceVolume",
              "ReadingProblemsCustomerTemplate",
              "ReadingProblemsExplorerCustomerTemplate",
              "PrintReleafActivationCustomerTemplate"
            ]
          },
          {
            "name": "notificationMode",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "Email",
              "Callback",
              "Ftp"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[NotificationPlaceholderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/Create": {
      "post": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Create a dealer notification",
        "operationId": "DealerNotification/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDealerNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerNotification/Delete": {
      "delete": {
        "tags": [
          "DealerNotificationApi"
        ],
        "summary": "Create a dealer notification",
        "operationId": "DealerNotification/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerProduct/Create": {
      "post": {
        "tags": [
          "DealerProduct"
        ],
        "summary": "create the dealerProductReplacement",
        "operationId": "DealerProduct/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDealerProductReplacementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerProductReplacementDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerProduct/Edit": {
      "put": {
        "tags": [
          "DealerProduct"
        ],
        "summary": "Edit the dealerProductReplacement",
        "operationId": "DealerProduct/Edit",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditDealerProductReplacementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerProductReplacementDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerProduct/List": {
      "get": {
        "tags": [
          "DealerProduct"
        ],
        "summary": "Gets the dealer list",
        "operationId": "DealerProduct/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerProductReplacementDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerProduct/Get": {
      "get": {
        "tags": [
          "DealerProduct"
        ],
        "summary": "Gets the specified request.",
        "operationId": "DealerProduct/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerProductReplacementDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerProduct/Delete": {
      "delete": {
        "tags": [
          "DealerProduct"
        ],
        "summary": "Delete DealerProductReplacement",
        "operationId": "DealerProduct/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/List": {
      "get": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Returns list of dealer supplies",
        "operationId": "DealerSupply/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Mono",
              "Colored"
            ]
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Italiano",
              "English",
              "Deutsche",
              "French",
              "Spanish",
              "Norwegian",
              "Korean",
              "Portuguese",
              "Catalan",
              "Japanese",
              "Vietnamese",
              "Thai",
              "TraditionalChinese",
              "Polish"
            ]
          },
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerSupplyListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/ListSuggested": {
      "post": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Returns list of suggested standard supplies for the given product ids",
        "operationId": "DealerSupply/ListSuggested",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSuggestedStandardSuppliesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[StandardSupplyDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/Count": {
      "get": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Returns list of dealer supplies count",
        "operationId": "DealerSupply/Count",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/Export": {
      "get": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Returns list of dealer supplies",
        "operationId": "DealerSupply/Export",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Mono",
              "Colored"
            ]
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Italiano",
              "English",
              "Deutsche",
              "French",
              "Spanish",
              "Norwegian",
              "Korean",
              "Portuguese",
              "Catalan",
              "Japanese",
              "Vietnamese",
              "Thai",
              "TraditionalChinese",
              "Polish"
            ]
          },
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/Get": {
      "get": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Gets the dealer supply.",
        "operationId": "DealerSupply/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplyDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/Create": {
      "post": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Create the dealer supply.",
        "operationId": "DealerSupply/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[DealerSupplyDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplyDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/CreateFromStandardSupply": {
      "post": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Create the dealer supply from the standardSupply.",
        "operationId": "DealerSupply/CreateFromStandardSupply",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFromStandardSupplyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/CreateFromProjectVolumes": {
      "post": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Create from project volumes",
        "operationId": "DealerSupply/CreateFromProjectVolumes",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/Update": {
      "put": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Update the dealer supply.",
        "operationId": "DealerSupply/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerSupplyDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplyDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/UploadSupplies": {
      "post": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Gets the dealer supply.",
        "operationId": "DealerSupply/UploadSupplies",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadSuppliesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupply/Delete": {
      "delete": {
        "tags": [
          "DealerSupply"
        ],
        "summary": "Deletes the specified supply.",
        "operationId": "DealerSupply/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplyPriceListing/Get": {
      "get": {
        "tags": [
          "DealerSupplyPriceListingApi"
        ],
        "summary": "Get tradingPartnerSupplyListing",
        "operationId": "DealerSupplyPriceListing/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplyPriceListingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplyPriceListing/List": {
      "get": {
        "tags": [
          "DealerSupplyPriceListingApi"
        ],
        "summary": "Get tradingPartnerSuppliesListing",
        "operationId": "DealerSupplyPriceListing/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "partNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "showOnlyActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerSupplyPriceListingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplyPriceListing/Create": {
      "post": {
        "tags": [
          "DealerSupplyPriceListingApi"
        ],
        "summary": "Create the tradingPartnerSupplyListing",
        "operationId": "DealerSupplyPriceListing/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealerSupplyPriceListingToCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplyPriceListingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplyPriceListing/Customer/Create": {
      "post": {
        "tags": [
          "DealerSupplyPriceListingApi"
        ],
        "summary": "Create the tradingPartnerSupplyListing for customer",
        "operationId": "DealerSupplyPriceListing/Customer/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealerSupplyPriceListingToCreateByCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplyPriceListingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplyPriceListing/Update": {
      "put": {
        "tags": [
          "DealerSupplyPriceListingApi"
        ],
        "summary": "Create the tradingPartnerSupplyListing",
        "operationId": "DealerSupplyPriceListing/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealerSupplyPriceListingToUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplyPriceListingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplyPriceListing/UpdateByCustomer": {
      "put": {
        "tags": [
          "DealerSupplyPriceListingApi"
        ],
        "summary": "Create the tradingPartnerSupplyListing",
        "operationId": "DealerSupplyPriceListing/UpdateByCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DealerSupplyPriceListingToRequestByCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplyPriceListingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplyPriceListing/Delete": {
      "delete": {
        "tags": [
          "DealerSupplyPriceListingApi"
        ],
        "summary": "Deletes the specified Trading Partner.",
        "operationId": "DealerSupplyPriceListing/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/List": {
      "get": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Gets the Dealer Supplies set.",
        "operationId": "DealerSupplySet/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "description": "Gets or sets the brand.",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "Gets or sets the model.",
            "required": false,
            "type": "string"
          },
          {
            "name": "hasDevicesToAssociate",
            "in": "query",
            "description": "Gets or sets Has Devices To Associate flag.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isStandard",
            "in": "query",
            "description": "Gets or sets Is standard flag.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerSupplySetForListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/Count": {
      "get": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Gets the Dealer Supplies set count.",
        "operationId": "DealerSupplySet/Count",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/Get": {
      "get": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Gets the Dealer Supply Set.",
        "operationId": "DealerSupplySet/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplySetDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/SaveSupplySet": {
      "put": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Saves the supply set.",
        "operationId": "DealerSupplySet/SaveSupplySet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[DealerSupplySetDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerSupplySetDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/UploadSupplySet": {
      "post": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Gets the dealer supply set.",
        "operationId": "DealerSupplySet/UploadSupplySet",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadSupplySetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/CreateFromProjectVolumes": {
      "post": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Create from project volumes",
        "operationId": "DealerSupplySet/CreateFromProjectVolumes",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/Delete": {
      "delete": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Deletes the specified supply set.",
        "operationId": "DealerSupplySet/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/ExportExcel": {
      "get": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Deletes the specified supply set.",
        "operationId": "DealerSupplySet/ExportExcel",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/Export": {
      "get": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Deletes the specified supply set.",
        "operationId": "DealerSupplySet/Export",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/Import": {
      "post": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Deletes the specified supply set.",
        "operationId": "DealerSupplySet/Import",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadSupplySetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/AssociateByDealerSupplySetAndRelativeProducts": {
      "get": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Automatically associate the devices (ONLY with a specific model) to a specific SupplySet (the customer is optional)",
        "operationId": "DealerSupplySet/AssociateByDealerSupplySetAndRelativeProducts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "idDealerSupplySet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "idCustomer",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/CountDealerSupplySetAndDevicesPotentialAssociations": {
      "get": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Count the devices affected by the association of a supply set (the customer is optional)",
        "operationId": "DealerSupplySet/CountDealerSupplySetAndDevicesPotentialAssociations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "idDealerSupplySet",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "idCustomer",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/ListDealerSupplySetFromStandardModels": {
      "get": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Gets the Supplies set creatable from standard model.",
        "operationId": "DealerSupplySet/ListDealerSupplySetFromStandardModels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DealerSupplySetFromStandardModelDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/DealerSupplySet/CreateFromStandardModels": {
      "post": {
        "tags": [
          "DealerSupplySetApi"
        ],
        "summary": "Create from standard models",
        "operationId": "DealerSupplySet/CreateFromStandardModels",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDealerSupplySetFromStandardModelsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Get": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Returns a device by request parameters",
        "operationId": "Device/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/GetDeviceAdditionalInfos": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/GetDeviceAdditionalInfos",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DeviceAdditionalInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/GetLfpCounters": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/GetLfpCounters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DeviceLfpCounterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/GetDeviceGapInfos": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/GetDeviceGapInfos",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DeviceGapInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/GetSuppliesDetailsSummary": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Get toners and photoconductors forecast details for a specific device",
        "operationId": "Device/GetSuppliesDetailsSummary",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceSuppliesSummaryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/GetSuppliesDetails": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Returns a device by request parameters",
        "operationId": "Device/GetSuppliesDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceSuppliesDetailsDto]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Device/GetSuppliesDetailsInfo": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Gets current forecast and history consumable details for a specific device, consumable and consumable color type",
        "operationId": "Device/GetSuppliesDetailsInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "idMaintenanceKitType",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "idMaintenanceKitColor",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "idMaintenanceKitDescription",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceSuppliesDetailsInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/GetZebraSuppliesDetailsSummary": {
      "get": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/GetZebraSuppliesDetailsSummary",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ZebraDeviceSuppliesSummaryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Offline/Get": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Returns an offline device by request parameters",
        "operationId": "Device/Offline/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Offline/Create": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Returns an offline device by request parameters",
        "operationId": "Device/Offline/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OfflineDeviceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/GetDetailedInformations": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Returns  device detailed Informations by request parameters",
        "operationId": "Device/GetDetailedInformations",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDeviceDetailsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceDetailsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/List": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "This operation gets lists of devices paged and filtered",
        "operationId": "Device/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DeviceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/MaintenanceAlerts/List": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Returns a list of maintenanceAlert device.",
        "operationId": "Device/MaintenanceAlerts/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "idInstalledProduct",
            "in": "query",
            "description": "Gets or sets the installedproduct",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterByOpened",
            "in": "query",
            "description": "Gets or sets the FilterByOpened",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterByClosed",
            "in": "query",
            "description": "Gets or sets the FilterByClosed",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterByPanelMessageAlertConfiguration",
            "in": "query",
            "description": "Gets or sets the FilterByPanelMessageAlertConfiguration",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[MaintenanceAlertDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Offline/List": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "This operation gets lists of offline devices paged and filtered",
        "operationId": "Device/Offline/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DeviceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ExplorerDataAffinities/List": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Returns a list of DeviceExplorerDataAffinities filtered by idDevice",
        "operationId": "Device/ExplorerDataAffinities/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DeviceExplorerDataAffinityDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ListMeterReads": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "This operation gets lists of meter reads daily from eXplorer",
        "operationId": "Device/ListMeterReads",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesMeterReadsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DeviceListMeterReadsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ListLevelsDataHistory": {
      "post": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/ListLevelsDataHistory",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetLevelsDataHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[LevelsDataHistoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ListSuppliesDataHistory": {
      "post": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/ListSuppliesDataHistory",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDeviceDataHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SuppliesDataHistoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ListMetersDataHistory": {
      "post": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/ListMetersDataHistory",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDeviceDataHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[MetersDataHistoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ListMaintenanceKitMessagesDataHistory": {
      "post": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/ListMaintenanceKitMessagesDataHistory",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDeviceDataHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[MaintenanceKitMessagesDataHistoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ListErrorsMessagesDataHistory": {
      "post": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/ListErrorsMessagesDataHistory",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDeviceDataHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ErrorsMessagesDataHistoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ListAttributesDataHistory": {
      "post": {
        "tags": [
          "Device"
        ],
        "operationId": "Device/ListAttributesDataHistory",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDeviceDataHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AttributesDataHistoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Update": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Update Device",
        "operationId": "Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDeviceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/UpdateDeviceSerialNumber": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Update Device Serial Number",
        "operationId": "Device/UpdateDeviceSerialNumber",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDeviceSerialNumberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/UpdateSupplySetAssociation": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Associate the device with a project linked to a DealerSupplySet",
        "operationId": "Device/UpdateSupplySetAssociation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDeviceSupplySetAssociationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Delete": {
      "delete": {
        "tags": [
          "Device"
        ],
        "summary": "This operation deletes a device",
        "operationId": "Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/ResetWorkflowMode": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "This operation reset the workflow mode of a device",
        "operationId": "Device/ResetWorkflowMode",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/AssignOfficeToDevicesByDeviceId": {
      "put": {
        "tags": [
          "Device"
        ],
        "summary": "Assign an office to some devices by  DeviceId",
        "operationId": "Device/AssignOfficeToDevicesByDeviceId",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignOfficeToDevicesByDeviceIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AssignOfficeToDevicesRejectedDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/AssignOfficeToDevicesBySerialNumber": {
      "put": {
        "tags": [
          "Device"
        ],
        "summary": "Assign an office to some devices by  SerialNumber",
        "operationId": "Device/AssignOfficeToDevicesBySerialNumber",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssignOfficeToDevicesBySerialNumberRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AssignOfficeToDevicesRejectedDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/UpdateDevicesBySerialNumbers": {
      "put": {
        "tags": [
          "Device"
        ],
        "summary": "Update Devices By Serial Numbers",
        "operationId": "Device/UpdateDevicesBySerialNumbers",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDevicesBySerialNumbersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateDevicesBySerialNumbersRejectedDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Deleted/Restore": {
      "put": {
        "tags": [
          "Device"
        ],
        "summary": "This operation restore a device",
        "operationId": "Device/Deleted/Restore",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Deleted/ListByDealer": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "This operation gets lists of devices paged and filtered by dealer",
        "operationId": "Device/Deleted/ListByDealer",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InstalledProductDeletedDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/Deleted/List": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "This operation gets lists of devices paged and filtered",
        "operationId": "Device/Deleted/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the customer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InstalledProductDeletedDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Device/SharpFSS/Create": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Returns a new SharpFSS Offline device by request parameters",
        "operationId": "Device/SharpFSS/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SharpFSSDeviceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Cluster/List": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation gets explorer clusters from all dealer customer",
        "operationId": "Explorer/Cluster/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterDealerCodes",
            "in": "query",
            "description": "Gets or sets the filter dealer codes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filterCustomerCodes",
            "in": "query",
            "description": "Gets or sets the filter customer codes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerClusterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/ExplorerDataInfo/List": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation gets explorer environment infos",
        "operationId": "Explorer/ExplorerDataInfo/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerDataInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/ExplorerDataCommand/List": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation gets explorer command list",
        "operationId": "Explorer/ExplorerDataCommand/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerDataCommandDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetClusterCounters": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Returns a customer's cluster counters (number of clusters, masters and slaves)",
        "operationId": "Explorer/GetClusterCounters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ClusteringCountersDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Cluster/Get": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation gets an explorer cluster",
        "operationId": "Explorer/Cluster/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ExplorerClusterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Cluster/Create": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Create Explorer Cluster",
        "operationId": "Explorer/Cluster/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ExplorerClusterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Cluster/AddSlaveToCluster": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Add a Slave to a Cluster",
        "operationId": "Explorer/Cluster/AddSlaveToCluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ExplorerClusterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Cluster/Delete": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation deletes an explorer cluster",
        "operationId": "Explorer/Cluster/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Cluster/AutoClusters": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation suggests explorer clusters from all dealer customer",
        "operationId": "Explorer/Cluster/AutoClusters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "listType",
            "in": "query",
            "description": "Gets or sets the type of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterDealerCodes",
            "in": "query",
            "description": "Gets or sets the filter dealer codes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filterCustomerCodes",
            "in": "query",
            "description": "Gets or sets the filter customer codes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Gets or sets the search key.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sDSOnly",
            "in": "query",
            "description": "Gets or sets the filter jam.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isClustered",
            "in": "query",
            "description": "True to return only clustered eXplorer datas,\r\n            False to return only unclustered eXplorer datas",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isV4",
            "in": "query",
            "description": "True to return only V4 eXplorer datas,\r\n            False to return only non V4 eXplorer datas",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isEmbedded",
            "in": "query",
            "description": "Gets or sets the is embedded.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "communicationStatus",
            "in": "query",
            "description": "Gets or sets the communication status.",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "LastDay",
              "LastPeriod",
              "OverPeriod"
            ]
          },
          {
            "name": "filterCustomerText",
            "in": "query",
            "description": "Gets or sets the filter customer text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterDealerId",
            "in": "query",
            "description": "Gets or sets the filter dealer id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterCustomerId",
            "in": "query",
            "description": "Gets or sets the filter customer id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "hasConfiguration",
            "in": "query",
            "description": "Gets or sets the filter customer id.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerClusterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetExplorerDatas": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation gets explorer data from all dealer customer",
        "operationId": "Explorer/GetExplorerDatas",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "listType",
            "in": "query",
            "description": "Gets or sets the type of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterDealerCodes",
            "in": "query",
            "description": "Gets or sets the filter dealer codes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filterCustomerCodes",
            "in": "query",
            "description": "Gets or sets the filter customer codes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Gets or sets the search key.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sDSOnly",
            "in": "query",
            "description": "Gets or sets the filter jam.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isClustered",
            "in": "query",
            "description": "True to return only clustered eXplorer datas,\r\n            False to return only unclustered eXplorer datas",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isV4",
            "in": "query",
            "description": "True to return only V4 eXplorer datas,\r\n            False to return only non V4 eXplorer datas",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isEmbedded",
            "in": "query",
            "description": "Gets or sets the is embedded.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "communicationStatus",
            "in": "query",
            "description": "Gets or sets the communication status.",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "LastDay",
              "LastPeriod",
              "OverPeriod"
            ]
          },
          {
            "name": "filterCustomerText",
            "in": "query",
            "description": "Gets or sets the filter customer text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterDealerId",
            "in": "query",
            "description": "Gets or sets the filter dealer id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterCustomerId",
            "in": "query",
            "description": "Gets or sets the filter customer id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "hasConfiguration",
            "in": "query",
            "description": "Gets or sets the filter customer id.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetConnectorEndpoints": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operations gets the required web endpoints for a specific connector or group of connectors",
        "operationId": "Explorer/GetConnectorEndpoints",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConnectorEndpointDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetConnectors": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation gets explorer data and clusters",
        "operationId": "Explorer/GetConnectors",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "listType",
            "in": "query",
            "description": "Gets or sets the type of the list.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterDealerCodes",
            "in": "query",
            "description": "Gets or sets the filter dealer codes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "filterCustomerCodes",
            "in": "query",
            "description": "Gets or sets the filter customer codes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "searchKey",
            "in": "query",
            "description": "Gets or sets the search key.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sDSOnly",
            "in": "query",
            "description": "Gets or sets the filter jam.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isClustered",
            "in": "query",
            "description": "True to return only clustered eXplorer datas,\r\n            False to return only unclustered eXplorer datas",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isV4",
            "in": "query",
            "description": "True to return only V4 eXplorer datas,\r\n            False to return only non V4 eXplorer datas",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isEmbedded",
            "in": "query",
            "description": "Gets or sets the is embedded.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "communicationStatus",
            "in": "query",
            "description": "Gets or sets the communication status.",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "LastDay",
              "LastPeriod",
              "OverPeriod"
            ]
          },
          {
            "name": "filterCustomerText",
            "in": "query",
            "description": "Gets or sets the filter customer text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterDealerId",
            "in": "query",
            "description": "Gets or sets the filter dealer id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterCustomerId",
            "in": "query",
            "description": "Gets or sets the filter customer id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "hasConfiguration",
            "in": "query",
            "description": "Gets or sets the filter customer id.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/DeleteExplorerDataExplorerData": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation delete explorer data entry",
        "operationId": "Explorer/DeleteExplorerDataExplorerData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[ExplorerDataDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/DeleteExplorerData": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation delete explorer data entry",
        "operationId": "Explorer/DeleteExplorerData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[ExplorerDataDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetExplorerSetupLink": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get Explorer Setup Link",
        "operationId": "Explorer/GetExplorerSetupLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the customer code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Gets or sets the language.",
            "required": false,
            "type": "string",
            "enum": [
              "Italiano",
              "English",
              "Deutsche",
              "French",
              "Spanish",
              "Norwegian",
              "Korean",
              "Portuguese",
              "Catalan",
              "Japanese",
              "Vietnamese",
              "Thai",
              "TraditionalChinese",
              "Polish"
            ]
          },
          {
            "name": "isDcaV4",
            "in": "query",
            "description": "Gets or sets a value indicating whether this instance is dca v4.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Gets or sets the platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetEndpointsLink": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get Endpoints Link",
        "operationId": "Explorer/GetEndpointsLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Gets or sets the platform.",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Gets or sets the language.",
            "required": false,
            "type": "string",
            "enum": [
              "Italiano",
              "English",
              "Deutsche",
              "French",
              "Spanish",
              "Norwegian",
              "Korean",
              "Portuguese",
              "Catalan",
              "Japanese",
              "Vietnamese",
              "Thai",
              "TraditionalChinese",
              "Polish"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetJamcSetupLink": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get Jamc Setup Link",
        "operationId": "Explorer/GetJamcSetupLink",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the customer code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Gets or sets the language.",
            "required": false,
            "type": "string",
            "enum": [
              "Italiano",
              "English",
              "Deutsche",
              "French",
              "Spanish",
              "Norwegian",
              "Korean",
              "Portuguese",
              "Catalan",
              "Japanese",
              "Vietnamese",
              "Thai",
              "TraditionalChinese",
              "Polish"
            ]
          },
          {
            "name": "isDcaV4",
            "in": "query",
            "description": "Gets or sets a value indicating whether this instance is dca v4.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Gets or sets the platform.",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/License/List": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/License/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Defines the customer code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerDataLicenseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/License/Generate": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Generate an Explorer License",
        "operationId": "Explorer/License/Generate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenerateExplorerDataLicense"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Staging/List": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get the staging connector list for a customer",
        "operationId": "Explorer/Staging/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ExplorerDataStagingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Staging/Activate": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Activate a staging connector",
        "operationId": "Explorer/Staging/Activate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdAndCustomerCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Staging/Delete": {
      "delete": {
        "tags": [
          "Explorer"
        ],
        "summary": "Activate a staging connector",
        "operationId": "Explorer/Staging/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/List": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Returns eXplorer Configurations",
        "operationId": "Explorer/Configuration/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the customer code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "explorerDataIdentifier",
            "in": "query",
            "description": "Gets or sets the explorer data identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerConfigurationBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/Get": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Returns eXplorer configuration with subnets and schedules",
        "operationId": "Explorer/Configuration/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "CustomerCode",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationId",
            "in": "query",
            "description": "ConfigurationCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ExplorerConfigurationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/Copy": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Copy Explorer Configuration",
        "operationId": "Explorer/Configuration/Copy",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyExplorerConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/Create": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Update Explorer Configuration",
        "operationId": "Explorer/Configuration/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ExplorerConfigurationDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/Update": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Update Explorer Configuration",
        "operationId": "Explorer/Configuration/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ExplorerConfigurationDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/Delete": {
      "delete": {
        "tags": [
          "Explorer"
        ],
        "summary": "Delete Explorer Configuration",
        "operationId": "Explorer/Configuration/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "CustomerCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/ScanImmediate": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Update Explorer Configuration",
        "operationId": "Explorer/Configuration/ScanImmediate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateImmediateScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/CreateFromTicket": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Create Explore Configuration from ticket",
        "operationId": "Explorer/Configuration/CreateFromTicket",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[TicketExplorerConfigurationDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Configuration/GetTestTableVersions": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/Configuration/GetTestTableVersions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CodeDesc]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Schedule/Create": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Create schedule on explorerconfiguration",
        "operationId": "Explorer/Schedule/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateExplorerScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Schedule/Update": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Update schedule on explorerconfiguration",
        "operationId": "Explorer/Schedule/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExplorerScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Schedule/Delete": {
      "delete": {
        "tags": [
          "Explorer"
        ],
        "summary": "Delete schedule on explorerconfiguration",
        "operationId": "Explorer/Schedule/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "CustomerCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "explorerConfigurationId",
            "in": "query",
            "description": "ConfigurationCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Subnet/Create": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Create eXplorer subnet",
        "operationId": "Explorer/Subnet/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateExplorerSubnetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Subnet/Update": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Update eXplorer subnet",
        "operationId": "Explorer/Subnet/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExplorerSubnetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Subnet/Delete": {
      "delete": {
        "tags": [
          "Explorer"
        ],
        "summary": "Delete eXplorer subnet",
        "operationId": "Explorer/Subnet/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "CustomerCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "explorerConfigurationId",
            "in": "query",
            "description": "ConfigurationCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Hostname/Create": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Create eXplorer hostname",
        "operationId": "Explorer/Hostname/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateExplorerHostnameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Hostname/Update": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Update eXplorer subnet",
        "operationId": "Explorer/Hostname/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExplorerHostnameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Hostname/Delete": {
      "delete": {
        "tags": [
          "Explorer"
        ],
        "summary": "Delete eXplorer hostname",
        "operationId": "Explorer/Hostname/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "CustomerCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "explorerConfigurationId",
            "in": "query",
            "description": "ConfigurationCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/WorkingDays/Update": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "summary": "Update configuration working days",
        "operationId": "Explorer/WorkingDays/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateWorkingDaysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Intervals/Update": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Updates the explorer interval.",
        "operationId": "Explorer/Intervals/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateExplorerIntervalRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/SetDcaLogLevel": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation set the DCA log level",
        "operationId": "Explorer/SetDcaLogLevel",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDcaLogLevelRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[BaseResponse]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/RequestSendLogs": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation gets explorer data and clusters",
        "operationId": "Explorer/RequestSendLogs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "sendLogFull",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sendCheckUrls",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[BaseResponse]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/AbortRequestSendLogs": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Abort request send logs",
        "operationId": "Explorer/AbortRequestSendLogs",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/DownloadLogs": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "This operation gets explorer data and clusters",
        "operationId": "Explorer/DownloadLogs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/AutomaticUpdate": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Explorer Enable\\Disable Automatic Update",
        "operationId": "Explorer/AutomaticUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AutomaticUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/UpdateAgent": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Explorer Update Agent",
        "operationId": "Explorer/UpdateAgent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAgentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/UpdateService": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Explorer Update Service",
        "operationId": "Explorer/UpdateService",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/AbortUpdateService": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Abort Update Service",
        "operationId": "Explorer/AbortUpdateService",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/AbortUpdateAgent": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Abort Update Agent",
        "operationId": "Explorer/AbortUpdateAgent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/DataPings": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/DataPings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DataPingDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/DataLogs": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/DataLogs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DataLogDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/AgentVersions": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get Agent Versions",
        "operationId": "Explorer/AgentVersions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[IdDescDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/ServiceVersions": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get Service Versions",
        "operationId": "Explorer/ServiceVersions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[IdDescDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/UpdateDca4Client": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Explorer Update Agent",
        "operationId": "Explorer/UpdateDca4Client",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDca4Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/UpdateDca4Monitor": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Explorer Update Service",
        "operationId": "Explorer/UpdateDca4Monitor",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDca4Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/AbortUpdateDca4Client": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Abort Update Service",
        "operationId": "Explorer/AbortUpdateDca4Client",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/AbortUpdateDca4Monitor": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Abort Update Agent",
        "operationId": "Explorer/AbortUpdateDca4Monitor",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Dca4ClientVersions": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get Agent Versions",
        "operationId": "Explorer/Dca4ClientVersions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[IdDescDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/Dca4MonitorVersions": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get Service Versions",
        "operationId": "Explorer/Dca4MonitorVersions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[IdDescDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/SetPollingService": {
      "put": {
        "tags": [
          "Explorer"
        ],
        "summary": "Abort Update Service",
        "operationId": "Explorer/SetPollingService",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPollingServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/V3/ReleaseNotes": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get the eXplorer V3 Release Notes",
        "operationId": "Explorer/V3/ReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetDcaReleaseNotes": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get the release table versions of a specific DCA",
        "operationId": "Explorer/GetDcaReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DcaReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetDcaCurrentVersion": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "summary": "Get the release table versions of a specific DCA",
        "operationId": "Explorer/GetDcaCurrentVersion",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/GetDca4Otp": {
      "get": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/GetDca4Otp",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Dca4OtpDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/ImmediateScanDca4": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/ImmediateScanDca4",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImmediateScanDca4Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/SendGetOrWalkByPrinter": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/SendGetOrWalkByPrinter",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendGetOrWalkByPrinterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/SendGetOrWalk": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/SendGetOrWalk",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendGetOrWalkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/SendPing": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/SendPing",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendPingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/SendHpLfpXml": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/SendHpLfpXml",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendHpLfpXmlRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/SendHpLfpXmlByPrinter": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/SendHpLfpXmlByPrinter",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendHpLfpXmlByPrinterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Explorer/ClearOidRegistry": {
      "post": {
        "tags": [
          "Explorer"
        ],
        "operationId": "Explorer/ClearOidRegistry",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/List": {
      "get": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "List of available and configured integration",
        "operationId": "Integrations/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "isActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isForDelivery",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isForMeters",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isUpdateSupplies",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isForNotification",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DealerGatewayDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/GetLogisticPlaceholders": {
      "get": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Get logistic placeholders",
        "operationId": "Integrations/GetLogisticPlaceholders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[LogisticPlaceholderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/Get": {
      "get": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Get an integration configuration",
        "operationId": "Integrations/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerGatewayDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/GetNew": {
      "get": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Get a new integration configuration",
        "operationId": "Integrations/GetNew",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerGatewayType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Email",
              "Callback",
              "CallbackXml",
              "Ftp",
              "Evatic",
              "EAutomate",
              "Jim2",
              "Europarts",
              "OneTrail",
              "Adv",
              "Advantis",
              "Also",
              "Esprinet",
              "Forza",
              "Nav",
              "PowerOffice",
              "Radix",
              "ToServ",
              "VantageOnline",
              "QuickBooks",
              "Xero",
              "DistributionManagement"
            ]
          },
          {
            "name": "topic",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Delivery",
              "MeterReadings",
              "Billing"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerGatewayDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/Create": {
      "post": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Create an integration configuration",
        "operationId": "Integrations/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDealerGatewayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerGatewayDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/ToServ/Create": {
      "post": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Create an integration configuration for 2serv",
        "operationId": "Integrations/ToServ/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDealerGatewayToServRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerGatewayDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/VantageOnline/Create": {
      "post": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Create an integration configuration for VantageOnline",
        "operationId": "Integrations/VantageOnline/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDealerGatewayVantageOnlineRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerGatewayDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/Update": {
      "put": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Update an integration configuration",
        "operationId": "Integrations/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDealerGatewayRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerGatewayDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/Delete": {
      "delete": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Delete an integration configuration",
        "operationId": "Integrations/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/GetJoinedCustomers": {
      "get": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Get current joined customers summary",
        "operationId": "Integrations/GetJoinedCustomers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Dealer code",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Customer code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CodeDesc]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/GetJoinedDevices": {
      "get": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Get current joined devices summary",
        "operationId": "Integrations/GetJoinedDevices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Dealer code",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Customer code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CodeDesc]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/eautomate/runjoin": {
      "get": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Runs eAutomate devices join",
        "operationId": "Integrations/eautomate/runjoin",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Dealer code",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Customer code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Integrations/eautomate/GetEAutomateLog": {
      "get": {
        "tags": [
          "IntegrationsApi"
        ],
        "summary": "Gets the top 10 recent eAutomate log entries.",
        "operationId": "Integrations/eautomate/GetEAutomateLog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Dealer code",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Customer code",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[SagaOperationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/List": {
      "post": {
        "tags": [
          "Office"
        ],
        "summary": "Gets the offices.",
        "operationId": "Office/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetOfficesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[OfficeListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/UploadOffices": {
      "post": {
        "tags": [
          "Office"
        ],
        "summary": "Upload Offices",
        "operationId": "Office/UploadOffices",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadOfficesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/Get": {
      "post": {
        "tags": [
          "Office"
        ],
        "summary": "Gets the office.",
        "operationId": "Office/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[OfficeDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/Create": {
      "post": {
        "tags": [
          "Office"
        ],
        "summary": "Creates the office.",
        "operationId": "Office/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[OfficeDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/Update": {
      "post": {
        "tags": [
          "Office"
        ],
        "summary": "Updates the office.",
        "operationId": "Office/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[OfficeDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/Delete": {
      "delete": {
        "tags": [
          "Office"
        ],
        "summary": "Delete  office.",
        "operationId": "Office/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/Subnet/Create": {
      "post": {
        "tags": [
          "Office"
        ],
        "summary": "Create office subnet",
        "operationId": "Office/Subnet/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOfficeSubnetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[OfficeSubnetDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/Subnet/Delete": {
      "delete": {
        "tags": [
          "Office"
        ],
        "summary": "Delete office subnet",
        "operationId": "Office/Subnet/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "description": "OfficeId",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/OfficeFloor/List": {
      "get": {
        "tags": [
          "Office"
        ],
        "operationId": "Office/OfficeFloor/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[OfficeFloorDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/OfficeFloor/Create": {
      "post": {
        "tags": [
          "Office"
        ],
        "operationId": "Office/OfficeFloor/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOfficeFloorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[OfficeFloorDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/OfficeFloor/Update": {
      "put": {
        "tags": [
          "Office"
        ],
        "operationId": "Office/OfficeFloor/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateOfficeFloorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[OfficeFloorDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/OfficeFloor/Delete": {
      "delete": {
        "tags": [
          "Office"
        ],
        "operationId": "Office/OfficeFloor/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "description": "Gets or sets the office identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "officeFloorId",
            "in": "query",
            "description": "Gets or sets the office floor identifier.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/OfficeFloor/GetPin": {
      "get": {
        "tags": [
          "Office"
        ],
        "operationId": "Office/OfficeFloor/GetPin",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[OfficeFloorDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/OfficeFloor/SavePin": {
      "post": {
        "tags": [
          "Office"
        ],
        "operationId": "Office/OfficeFloor/SavePin",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveOfficeFloorPinRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Office/OfficeFloor/DeletePin": {
      "delete": {
        "tags": [
          "Office"
        ],
        "operationId": "Office/OfficeFloor/DeletePin",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "description": "Gets or sets the office identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "officeFloorId",
            "in": "query",
            "description": "Gets or sets the office floor identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "description": "Gets or sets the device identifier.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/okta/CreateOktaDomain": {
      "post": {
        "tags": [
          "OktaApi"
        ],
        "summary": "Create the Okta domain configuration.",
        "operationId": "okta/CreateOktaDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[OktaDomainDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[OktaDomainDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/okta/UpdateOktaDomain": {
      "put": {
        "tags": [
          "OktaApi"
        ],
        "summary": "Update the Okta domain configuration.",
        "operationId": "okta/UpdateOktaDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[OktaDomainDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[OktaDomainDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/okta/GetDomainRedirect": {
      "get": {
        "tags": [
          "OktaApi"
        ],
        "summary": "Returns the Okta login url based on the domain specified.",
        "operationId": "okta/GetDomainRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "oktaDomain",
            "in": "query",
            "description": "Gets or sets the okta domain.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/okta/GetDealerOktaSettings": {
      "get": {
        "tags": [
          "OktaApi"
        ],
        "summary": "Get the Okta settings for the dealer",
        "operationId": "okta/GetDealerOktaSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[OktaDomainDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/okta/GetCustomerOktaSettings": {
      "get": {
        "tags": [
          "OktaApi"
        ],
        "summary": "Get the Okta settings for the customer",
        "operationId": "okta/GetCustomerOktaSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[OktaDomainDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Orders/GetOrders": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Gets the dealers list",
        "operationId": "Orders/GetOrders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request.dealerId",
            "in": "query",
            "description": "Gets or sets the Dealer Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.customerId",
            "in": "query",
            "description": "Gets or sets the Customer Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.purchaseOrderId",
            "in": "query",
            "description": "Gets or sets the Purchase Order Id.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.serialNumber",
            "in": "query",
            "description": "Gets or sets the Purchase Order Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "Gets or sets the From Date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "Gets or sets the To Date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.status",
            "in": "query",
            "description": "Gets or sets the Purchase Order Id.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[OrderListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Orders/GetOrderLines": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Gets the dealers list",
        "operationId": "Orders/GetOrderLines",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request.dealerId",
            "in": "query",
            "description": "Gets or sets the Dealer Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.orderId",
            "in": "query",
            "description": "Gets or sets the Customer Id.",
            "required": false,
            "type": "string"
          },
          {
            "name": "request.fromDate",
            "in": "query",
            "description": "Gets or sets the From Date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.toDate",
            "in": "query",
            "description": "Gets or sets the To Date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "request.status",
            "in": "query",
            "description": "Gets or sets the Purchase Order Id.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.provideAllRows",
            "in": "query",
            "description": "Gets or sets the Purchase Order Id.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "request.sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "request.sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[OrderLineListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Orders/GetOrderLineStatuses": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Gets the dealers list",
        "operationId": "Orders/GetOrderLineStatuses",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request.orderId",
            "in": "query",
            "description": "Gets or sets the Customer Id.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[OrderLineStatusDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Orders/GetOrderAdditionalInfo": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Gets the dealers list",
        "operationId": "Orders/GetOrderAdditionalInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request.orderId",
            "in": "query",
            "description": "Gets or sets the Customer Id.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[OrderAdditionalInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Orders/GetOrderProofOfDelivery": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Gets the dealers list",
        "operationId": "Orders/GetOrderProofOfDelivery",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request.orderId",
            "in": "query",
            "description": "Gets or sets the Customer Id.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[OrderProofOfDeliveryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/PanelMessageAlert/GetErrorCodes": {
      "post": {
        "tags": [
          "PanelMessageAlertApi"
        ],
        "summary": "Gets available panel message codes",
        "operationId": "PanelMessageAlert/GetErrorCodes",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilteredPagedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[PanelMessageAlertCodeDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/PanelMessageAlert/List": {
      "post": {
        "tags": [
          "PanelMessageAlertApi"
        ],
        "summary": "Returns a list of panel message alert configurations.",
        "operationId": "PanelMessageAlert/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetPanelMessageAlertConfigurationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[PanelMessageAlertListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/PanelMessageAlert/Create": {
      "post": {
        "tags": [
          "PanelMessageAlertApi"
        ],
        "summary": "Create the PanelMessage alert configuration",
        "operationId": "PanelMessageAlert/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[PanelMessageAlertConfigurationDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[PanelMessageAlertConfigurationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/PanelMessageAlert/Update": {
      "put": {
        "tags": [
          "PanelMessageAlertApi"
        ],
        "summary": "Edit the PanelMessage alert configuration",
        "operationId": "PanelMessageAlert/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[PanelMessageAlertConfigurationDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[PanelMessageAlertConfigurationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/PanelMessageAlert/Delete": {
      "delete": {
        "tags": [
          "PanelMessageAlertApi"
        ],
        "summary": "Deletes the specified panel message alert configuration",
        "operationId": "PanelMessageAlert/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/GetProducts": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Gets the products related to all dealers",
        "operationId": "Product/GetProducts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetProductsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/GetBrands": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Gets the brands related to all dealers",
        "operationId": "Product/GetBrands",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[String]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/GetSnmpDiscoveryBrands": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Gets the Snmp discovery brands",
        "operationId": "Product/GetSnmpDiscoveryBrands",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[String]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/GetModels": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Gets the models related to all dealers",
        "operationId": "Product/GetModels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "description": "Gets or sets the brand.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[String]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/Dealer/List": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get the products of the Dealer",
        "operationId": "Product/Dealer/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "The dealer code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "brand",
            "in": "query",
            "description": "The brand",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/Dealer/ListBrands": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get the brands of the Dealer",
        "operationId": "Product/Dealer/ListBrands",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[String]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/Dealer/ListModels": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Ge the models of the Dealer",
        "operationId": "Product/Dealer/ListModels",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "brand",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[String]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/Customer/List": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get the products of the Customer",
        "operationId": "Product/Customer/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the customer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Product/GetProduct": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Gets the product by id",
        "operationId": "Product/GetProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Project/List": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Gets the projects.",
        "operationId": "Project/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetProjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ProjectListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Project/Get": {
      "post": {
        "tags": [
          "Project"
        ],
        "operationId": "Project/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ProjectFullDto]"
            }
          }
        },
        "deprecated": true
      }
    },
    "/Project/GetDetail": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Gets the project.",
        "operationId": "Project/GetDetail",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ProjectFullDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Project/GetContractFile": {
      "get": {
        "tags": [
          "Project"
        ],
        "summary": "Gets the project contract file.",
        "operationId": "Project/GetContractFile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Project/Create": {
      "post": {
        "tags": [
          "Project"
        ],
        "summary": "Create the project",
        "operationId": "Project/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Project/Update": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Updates the project.",
        "operationId": "Project/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Project/SetRelatedDevicesAlertGenerator": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Set Related Devices AlertGenerator",
        "operationId": "Project/SetRelatedDevicesAlertGenerator",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetAlertGeneratorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Project/ManageDevicesAssociation": {
      "put": {
        "tags": [
          "Project"
        ],
        "summary": "Associate devices to project",
        "operationId": "Project/ManageDevicesAssociation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ManageDevicesAssociationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Project/Delete": {
      "delete": {
        "tags": [
          "Project"
        ],
        "summary": "Delete  project",
        "operationId": "Project/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Role/List": {
      "get": {
        "tags": [
          "RoleApi"
        ],
        "summary": "Get the list of available capability sets (roles)",
        "operationId": "Role/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "showOnlyRolesForCustomer",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[RoleDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Role/Get": {
      "get": {
        "tags": [
          "RoleApi"
        ],
        "summary": "Get a capability set role by Id and Dealer Code",
        "operationId": "Role/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[RoleDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Role/Create": {
      "post": {
        "tags": [
          "RoleApi"
        ],
        "summary": "Create a custom capability set (custom role)",
        "operationId": "Role/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[RoleDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[RoleDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Role/Copy": {
      "post": {
        "tags": [
          "RoleApi"
        ],
        "summary": "Copies the specified request.",
        "operationId": "Role/Copy",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[RoleDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Role/Update": {
      "put": {
        "tags": [
          "RoleApi"
        ],
        "summary": "Update a custom capability set (custom role)",
        "operationId": "Role/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[RoleDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[RoleDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Role/Delete": {
      "delete": {
        "tags": [
          "RoleApi"
        ],
        "summary": "Delete a custom capability set (custom role)",
        "operationId": "Role/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Role/GetAllCapabilities": {
      "get": {
        "tags": [
          "RoleApi"
        ],
        "summary": "Get the all available capabilities",
        "operationId": "Role/GetAllCapabilities",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "isForAccount",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CapabilityDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Saga/List": {
      "post": {
        "tags": [
          "Saga"
        ],
        "summary": "Gets the saga list.",
        "operationId": "Saga/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSagasRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SagaListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Saga/Get": {
      "get": {
        "tags": [
          "Saga"
        ],
        "summary": "Gets the saga details.",
        "operationId": "Saga/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SagaDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Saga/GetSagaOperationLogList": {
      "post": {
        "tags": [
          "Saga"
        ],
        "summary": "Gets the saga operation log list.",
        "operationId": "Saga/GetSagaOperationLogList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSagaOperationLogListRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SagaOperationLogDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Saga/GetSagaOperationsList": {
      "post": {
        "tags": [
          "Saga"
        ],
        "summary": "Gets the saga operations list.",
        "operationId": "Saga/GetSagaOperationsList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSagaOperationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SagaOperationListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Saga/GetSagaOperationLogMessage": {
      "get": {
        "tags": [
          "Saga"
        ],
        "summary": "Downloads the message from saga operation log.",
        "operationId": "Saga/GetSagaOperationLogMessage",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Saga/GetSagaOperationLogFile": {
      "post": {
        "tags": [
          "Saga"
        ],
        "summary": "Gets the Saga Operation Log file",
        "operationId": "Saga/GetSagaOperationLogFile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsAction/GetDeviceActions": {
      "get": {
        "tags": [
          "SdsActionApi"
        ],
        "summary": "Gets the device actions.",
        "operationId": "SdsAction/GetDeviceActions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Gets or sets the device identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerId",
            "in": "query",
            "description": "Gets or sets the dealer identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "description": "Gets or sets the customer identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the customer identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "Gets or sets the state.",
            "required": false,
            "type": "string",
            "enum": [
              "Open",
              "Postponed",
              "ClosedCleared",
              "ClosedIgnored",
              "ClosedFixedAsDesigned",
              "ClosedIncorrectAction",
              "ClosedCanceled",
              "Closed"
            ]
          },
          {
            "name": "isOpen",
            "in": "query",
            "description": "Gets or sets the is open.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Gets or sets the severity.",
            "required": false,
            "type": "string",
            "enum": [
              "High",
              "Medium",
              "Low"
            ]
          },
          {
            "name": "isPredictive",
            "in": "query",
            "description": "Gets or sets the is predictive.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "actionType",
            "in": "query",
            "description": "Gets or sets the type of the action.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsDeviceActionDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsAction/GetDeviceActionsDashboard": {
      "get": {
        "tags": [
          "SdsActionApi"
        ],
        "summary": "Gets the device actions dashboard.",
        "operationId": "SdsAction/GetDeviceActionsDashboard",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Gets or sets the device identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerId",
            "in": "query",
            "description": "Gets or sets the dealer identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "description": "Gets or sets the group.",
            "required": false,
            "type": "string",
            "enum": [
              "Code",
              "State",
              "Severity",
              "ActionType"
            ]
          },
          {
            "name": "state",
            "in": "query",
            "description": "Gets or sets the state.",
            "required": false,
            "type": "string",
            "enum": [
              "Open",
              "Postponed",
              "ClosedCleared",
              "ClosedIgnored",
              "ClosedFixedAsDesigned",
              "ClosedIncorrectAction",
              "ClosedCanceled",
              "Closed"
            ]
          },
          {
            "name": "isOpen",
            "in": "query",
            "description": "Gets or sets the is open.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "severity",
            "in": "query",
            "description": "Gets or sets the severity.",
            "required": false,
            "type": "string",
            "enum": [
              "High",
              "Medium",
              "Low"
            ]
          },
          {
            "name": "actionType",
            "in": "query",
            "description": "Gets or sets the type of the action.",
            "required": false,
            "type": "string"
          },
          {
            "name": "isPredictive",
            "in": "query",
            "description": "Gets or sets the is predictive.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[DashboardItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsAction/GetDeviceAction": {
      "get": {
        "tags": [
          "SdsActionApi"
        ],
        "summary": "Gets the device action.",
        "operationId": "SdsAction/GetDeviceAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsDeviceActionDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsAction/DeleteDeviceAction": {
      "delete": {
        "tags": [
          "SdsActionApi"
        ],
        "operationId": "SdsAction/DeleteDeviceAction",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsAction/ChangeDeviceActionStatus": {
      "post": {
        "tags": [
          "SdsActionApi"
        ],
        "summary": "Changes the device action status.",
        "operationId": "SdsAction/ChangeDeviceActionStatus",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeDeviceActionStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/GetConnectors": {
      "get": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Gets the connectors.",
        "operationId": "SdsConnector/GetConnectors",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerfilter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeNotRegistered",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "severityFilter",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "OnlyWarning",
              "OnlyUrgent",
              "NonCommunicatingDevices",
              "NonGenuineHPDevices",
              "EarlyReplacementDevices",
              "NonCommunicatingConnectors",
              "CommonActionsToComplete",
              "PredictiveActionsToComplete"
            ]
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ExplorerDataSdsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/GetJamcConnectors": {
      "get": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Gets the jamc connectors.",
        "operationId": "SdsConnector/GetJamcConnectors",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[JamcConnectorDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/GetWppConnectors": {
      "get": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Gets the wpp connectors.",
        "operationId": "SdsConnector/GetWppConnectors",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[WppConnectorDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/GetConnector": {
      "get": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Get a connector.",
        "operationId": "SdsConnector/GetConnector",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ExplorerDataSdsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/Download": {
      "post": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Download the JAMC connector",
        "operationId": "SdsConnector/Download",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/Install": {
      "post": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Install JAMC connector",
        "operationId": "SdsConnector/Install",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/Associate": {
      "post": {
        "tags": [
          "SdsConnectorApi"
        ],
        "operationId": "SdsConnector/Associate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssociateSdsConnectorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/Register": {
      "post": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Register the JAMC connector",
        "operationId": "SdsConnector/Register",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/Unregister": {
      "post": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Unregister the JAMC connector",
        "operationId": "SdsConnector/Unregister",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/GetLogs": {
      "get": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Invoke the log request to the JAMC",
        "operationId": "SdsConnector/GetLogs",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ExplorerDataSdsLogDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/RetrieveLog": {
      "post": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Retrieves the log list from SDS Cloud",
        "operationId": "SdsConnector/RetrieveLog",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveLogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/DownloadLog": {
      "get": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Download the log from SDS Cloud.",
        "operationId": "SdsConnector/DownloadLog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DownloadAttachmentResult"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsConnector/DeleteLog": {
      "delete": {
        "tags": [
          "SdsConnectorApi"
        ],
        "summary": "Delete the log from SDS Cloud",
        "operationId": "SdsConnector/DeleteLog",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "connectorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/Activate": {
      "post": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Sets the credential.",
        "operationId": "SdsCustomer/Activate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/Deactivate": {
      "post": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Deactivate Customer.",
        "operationId": "SdsCustomer/Deactivate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/Update": {
      "patch": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Update Customer Jam settings",
        "operationId": "SdsCustomer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateSdsCustomerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/GetCredential": {
      "get": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Gets the credential.",
        "operationId": "SdsCustomer/GetCredential",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsCredentialDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/SetCredential": {
      "post": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Sets the credential.",
        "operationId": "SdsCustomer/SetCredential",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetJamCredentialRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/DeleteCredential": {
      "delete": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Deletes the credential.",
        "operationId": "SdsCustomer/DeleteCredential",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "credentialType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/GetCustomerOperations": {
      "get": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Gets the customer operations.",
        "operationId": "SdsCustomer/GetCustomerOperations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "operationType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "ShowWppOnly",
              "ShowNonWppOnly"
            ]
          },
          {
            "name": "operationStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "All",
              "OnlySuccess",
              "OnlyPending",
              "OnlyErrors"
            ]
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerSdsOperationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/GetCustomerOperation": {
      "get": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Gets the customer operation.",
        "operationId": "SdsCustomer/GetCustomerOperation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "operationType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Error",
              "Queued",
              "AbortedByMps",
              "Unknown",
              "Pending",
              "InProgress",
              "SubmittedToConnectorQueue",
              "Success",
              "Applied",
              "UserCanceled",
              "FinishedWithErrors",
              "TimedOut",
              "SnmpV1V2ReadCredentialsNeeded",
              "SnmpV1V2WriteCredentialsNeeded",
              "SnmpV1V2ReadOnlyMode",
              "SnmpV3CredentialsNeeded",
              "HttpCredentialsNeeded",
              "DeviceCommunicationError",
              "DeviceIdentityUnverifiedCredentialError",
              "NonHPCartridgeInstalled",
              "UsedCartridgeInstalled",
              "CartridgeInBadState",
              "NonHPCartridgeUsageExceedsLimit",
              "DeviceIdentityMismatch",
              "ConnectorNameResolutionError",
              "ConnectorNameResolutionFailure",
              "SetVerificationError",
              "DeviceError",
              "InvalidDeviceData",
              "DeviceDateTimeNotInSync",
              "DeviceNotFound",
              "PartialSupport",
              "PolicyNotSupported",
              "DeviceNotSupported",
              "UnsupportedNetworkModel",
              "ConnectorUnavailable",
              "ConnectorNotEnabled",
              "InternalError",
              "DeviceDeleted",
              "ValueNotSupported",
              "NonHPAuthorizedDealer",
              "FirmwareUpgradeInProgress",
              "RebootModeDeviceMonitorFailure",
              "MissingLicense",
              "ItemNotFound",
              "NotSupportedByModel",
              "DeviceLicenseNotSupportedByFirmware",
              "DownloadFirmwareFailure",
              "NotSupported",
              "OperationDelayed",
              "Snapped",
              "FinishedWithFirmwareMismatch",
              "DeviceIdentificationFailed",
              "ItemNotSupported",
              "LicenseExpired",
              "LicenseSetFailed",
              "UpgradeFirmwareDeviceMonitorFailure",
              "ConnectorUpgradeInProgress",
              "HostSnmpV3FipsComplianceFailure",
              "SendingFirmwareToDeviceFailed",
              "Compliant",
              "NonCompliant",
              "PartialSuccess",
              "InvalidValue",
              "NotSupportedByFirmware",
              "Failed",
              "DeviceShutdownFailure",
              "OAuth"
            ]
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CustomerSdsOperationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/UploadVJamcDevices": {
      "post": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Upload the WPP payload file to onboard WPP SDS devices",
        "operationId": "SdsCustomer/UploadVJamcDevices",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UploadVJamcDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/RunOperation": {
      "put": {
        "tags": [
          "SdsCustomerApi"
        ],
        "summary": "Run again a specific SDS operation by id",
        "operationId": "SdsCustomer/RunOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdAndCustomerCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/GetAssessTemplates": {
      "get": {
        "tags": [
          "SdsCustomerApi"
        ],
        "operationId": "SdsCustomer/GetAssessTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsCustomerAssessTemplateDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/GetNewAssessTemplate": {
      "get": {
        "tags": [
          "SdsCustomerApi"
        ],
        "operationId": "SdsCustomer/GetNewAssessTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[SdsAssessDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/GetAssessTemplate": {
      "get": {
        "tags": [
          "SdsCustomerApi"
        ],
        "operationId": "SdsCustomer/GetAssessTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsCustomerAssessTemplateDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/CreateAssessTemplate": {
      "post": {
        "tags": [
          "SdsCustomerApi"
        ],
        "operationId": "SdsCustomer/CreateAssessTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[SdsCustomerAssessTemplateDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsCustomerAssessTemplateDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/UpdateAssessTemplate": {
      "put": {
        "tags": [
          "SdsCustomerApi"
        ],
        "operationId": "SdsCustomer/UpdateAssessTemplate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[SdsCustomerAssessTemplateDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsCustomerAssessTemplateDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsCustomer/DeleteAssessTemplate": {
      "delete": {
        "tags": [
          "SdsCustomerApi"
        ],
        "operationId": "SdsCustomer/DeleteAssessTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[BaseResponse]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetOnDeviceServices": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Gets the on device services.",
        "operationId": "SdsDevice/GetOnDeviceServices",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsOnDeviceServicesDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/SetOnDeviceServices": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Sets the device user interface attributes.",
        "operationId": "SdsDevice/SetOnDeviceServices",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetSdsOnDeviceServicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetDeviceOperation": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Gets the device operation.",
        "operationId": "SdsDevice/GetDeviceOperation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "operationType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Error",
              "Queued",
              "AbortedByMps",
              "Unknown",
              "Pending",
              "InProgress",
              "SubmittedToConnectorQueue",
              "Success",
              "Applied",
              "UserCanceled",
              "FinishedWithErrors",
              "TimedOut",
              "SnmpV1V2ReadCredentialsNeeded",
              "SnmpV1V2WriteCredentialsNeeded",
              "SnmpV1V2ReadOnlyMode",
              "SnmpV3CredentialsNeeded",
              "HttpCredentialsNeeded",
              "DeviceCommunicationError",
              "DeviceIdentityUnverifiedCredentialError",
              "NonHPCartridgeInstalled",
              "UsedCartridgeInstalled",
              "CartridgeInBadState",
              "NonHPCartridgeUsageExceedsLimit",
              "DeviceIdentityMismatch",
              "ConnectorNameResolutionError",
              "ConnectorNameResolutionFailure",
              "SetVerificationError",
              "DeviceError",
              "InvalidDeviceData",
              "DeviceDateTimeNotInSync",
              "DeviceNotFound",
              "PartialSupport",
              "PolicyNotSupported",
              "DeviceNotSupported",
              "UnsupportedNetworkModel",
              "ConnectorUnavailable",
              "ConnectorNotEnabled",
              "InternalError",
              "DeviceDeleted",
              "ValueNotSupported",
              "NonHPAuthorizedDealer",
              "FirmwareUpgradeInProgress",
              "RebootModeDeviceMonitorFailure",
              "MissingLicense",
              "ItemNotFound",
              "NotSupportedByModel",
              "DeviceLicenseNotSupportedByFirmware",
              "DownloadFirmwareFailure",
              "NotSupported",
              "OperationDelayed",
              "Snapped",
              "FinishedWithFirmwareMismatch",
              "DeviceIdentificationFailed",
              "ItemNotSupported",
              "LicenseExpired",
              "LicenseSetFailed",
              "UpgradeFirmwareDeviceMonitorFailure",
              "ConnectorUpgradeInProgress",
              "HostSnmpV3FipsComplianceFailure",
              "SendingFirmwareToDeviceFailed",
              "Compliant",
              "NonCompliant",
              "PartialSuccess",
              "InvalidValue",
              "NotSupportedByFirmware",
              "Failed",
              "DeviceShutdownFailure",
              "OAuth"
            ]
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsDeviceOperationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetDevicesOperations": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Gets the devices operations.",
        "operationId": "SdsDevice/GetDevicesOperations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsDeviceOperationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/SetDevicesReboot": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Set the devices specified to reboot at a specific date.",
        "operationId": "SdsDevice/SetDevicesReboot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDevicesRebootRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/AbortDeviceReboot": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Abort a scheduled device reboot.",
        "operationId": "SdsDevice/AbortDeviceReboot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/PerformPrintQualityDiagnostics": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Perform a Print Quality Diagnostics operation on this device",
        "operationId": "SdsDevice/PerformPrintQualityDiagnostics",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/SetDeviceUpdateFirmware": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Sets the device update firmware.",
        "operationId": "SdsDevice/SetDeviceUpdateFirmware",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDeviceUpdateFirmwareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/AbortDeviceUpdateFirmware": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Abort a scheduled firmware upgrade.",
        "operationId": "SdsDevice/AbortDeviceUpdateFirmware",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetDeviceRemoteEws": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Gets the device remote ews.",
        "operationId": "SdsDevice/GetDeviceRemoteEws",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetSupplyDetails": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Gets the supply details.",
        "operationId": "SdsDevice/GetSupplyDetails",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "supplyType",
            "in": "query",
            "description": "Gets or sets the type of the supply.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SupplyDetailsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/HideEarlyReplacement": {
      "put": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Hides the supply detail.",
        "operationId": "SdsDevice/HideEarlyReplacement",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HideSupplyDetailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetConfigItems": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Gets the configuration items.",
        "operationId": "SdsDevice/GetConfigItems",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsConfigItemsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetZendeskTicketInfo": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "operationId": "SdsDevice/GetZendeskTicketInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ZendeskTicketInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/RetrieveDeviceData": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Retrieves the device data.",
        "operationId": "SdsDevice/RetrieveDeviceData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetrieveDeviceDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/UpdateConfigItems": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Retrieves the device data.",
        "operationId": "SdsDevice/UpdateConfigItems",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/SetDeviceConfigData": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Sets the device configuration data.",
        "operationId": "SdsDevice/SetDeviceConfigData",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDeviceConfigDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/SetDeviceCredential": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Sets the device credential.",
        "operationId": "SdsDevice/SetDeviceCredential",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetJamCredentialRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/SendPanelMessage": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Send a message to the printer panel",
        "operationId": "SdsDevice/SendPanelMessage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SdsSendPanelMessageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/DeleteDeviceCredential": {
      "delete": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Deletes the device credential.",
        "operationId": "SdsDevice/DeleteDeviceCredential",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "credentialType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/CheckDeviceOperation": {
      "put": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "CheckDeviceOperation",
        "operationId": "SdsDevice/CheckDeviceOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CheckDeviceOperationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetCounters": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Gets the counters.",
        "operationId": "SdsDevice/GetCounters",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[SdsNestedConfigItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetDevicesWithFirmwareOutOfDate": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Gets the devices with firmware out of date.",
        "operationId": "SdsDevice/GetDevicesWithFirmwareOutOfDate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesWithFirmwareOutOfDateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsDeviceFirmwareOutOfDateDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/ListSdsMessageSuppression": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "This operation gets lists of devices with Message suppression paged and filtered",
        "operationId": "SdsDevice/ListSdsMessageSuppression",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesSdsMessageSuppressionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsMessageSuppressionDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/ListSdsRapa": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "operationId": "SdsDevice/ListSdsRapa",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesSdsRapaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsRapaDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/ListSdsCredentials": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "operationId": "SdsDevice/ListSdsCredentials",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesSdsCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsCredentialsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/ListSdsReboot": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "operationId": "SdsDevice/ListSdsReboot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesRebootRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsRebootDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/ListSdsAssessAndRemediate": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "operationId": "SdsDevice/ListSdsAssessAndRemediate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDevicesSdsAssessAndRemediateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SdsAssessAndRemediateDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/GetAssessTemplate": {
      "get": {
        "tags": [
          "SdsDeviceApi"
        ],
        "operationId": "SdsDevice/GetAssessTemplate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[IdDescDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/UpdateDevicesFirmware": {
      "put": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Updates the devices firmware.",
        "operationId": "SdsDevice/UpdateDevicesFirmware",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[SdsSetDevicesUpdateFirmwareRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SdsSetDevicesUpdateFirmwareResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/RemoveFromSDS": {
      "delete": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Remove a device from HP SDS",
        "operationId": "SdsDevice/RemoveFromSDS",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/RemoveFromCloudDCA": {
      "delete": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Remove a device from HP SDS",
        "operationId": "SdsDevice/RemoveFromCloudDCA",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/CopyPolicy": {
      "put": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Copy device config items to a new policy entity",
        "operationId": "SdsDevice/CopyPolicy",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsDevice/AssessAndRemediate": {
      "post": {
        "tags": [
          "SdsDeviceApi"
        ],
        "summary": "Run an Assess and Remediate operation",
        "operationId": "SdsDevice/AssessAndRemediate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssessAndRemediateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsEvent/GetDeviceEvents": {
      "get": {
        "tags": [
          "SdsEventApi"
        ],
        "operationId": "SdsEvent/GetDeviceEvents",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Undefined",
              "Error",
              "Warning",
              "Info",
              "BlackBox"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[SdsDeviceEventDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsEvent/GetDeviceEvent": {
      "get": {
        "tags": [
          "SdsEventApi"
        ],
        "summary": "Gets the device event.",
        "operationId": "SdsEvent/GetDeviceEvent",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SdsDeviceEventDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsScan/ScanImmediate": {
      "get": {
        "tags": [
          "SdsScanApi"
        ],
        "summary": "Retrieve all updated SDS device data. The operation will take about 20 minutes",
        "operationId": "SdsScan/ScanImmediate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsScan/ScanDevice": {
      "get": {
        "tags": [
          "SdsScanApi"
        ],
        "summary": "Retrieve saved SDS CLOUD device data",
        "operationId": "SdsScan/ScanDevice",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsScan/ScanDevices": {
      "post": {
        "tags": [
          "SdsScanApi"
        ],
        "summary": "Run an SDS Scan on a specific customer",
        "operationId": "SdsScan/ScanDevices",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SdsScanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsScan/ScanCustomer": {
      "post": {
        "tags": [
          "SdsScanApi"
        ],
        "summary": "Retrieve saved SDS CLOUD customer data",
        "operationId": "SdsScan/ScanCustomer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SdsScanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SdsScan/ScanConnectors": {
      "post": {
        "tags": [
          "SdsScanApi"
        ],
        "summary": "Retrieve saved SDS CLOUD customer data",
        "operationId": "SdsScan/ScanConnectors",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SdsScanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ShippedSupply/List": {
      "post": {
        "tags": [
          "ShippedSupply"
        ],
        "summary": "Lists the specified request.",
        "operationId": "ShippedSupply/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetShippedSuppliesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ShippedSupplyDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ShippedSupply/Get": {
      "post": {
        "tags": [
          "ShippedSupply"
        ],
        "summary": "Gets the specified request.",
        "operationId": "ShippedSupply/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetShippedSupplyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ShippedSupplyDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ShippedSupply/CreateInAdvance": {
      "post": {
        "tags": [
          "ShippedSupply"
        ],
        "summary": "Creates a shipped supply entry for a device (and alert).",
        "operationId": "ShippedSupply/CreateInAdvance",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateShippingSupplyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ShippedSupply/CreateStock": {
      "post": {
        "tags": [
          "ShippedSupply"
        ],
        "summary": "Creates a shipped supply entry for a device (and alert).",
        "operationId": "ShippedSupply/CreateStock",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateShippingSupplyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ShippedSupply/CreateOnAlert": {
      "post": {
        "tags": [
          "ShippedSupply"
        ],
        "summary": "Creates a shipped supply entry for a device (and alert).",
        "operationId": "ShippedSupply/CreateOnAlert",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateShippingSupplyOnAlertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ShippedSupply/Update": {
      "post": {
        "tags": [
          "ShippedSupply"
        ],
        "summary": "Updates the specified request.",
        "operationId": "ShippedSupply/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateShippedSupplyDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ShippedSupply/MassiveUpdate": {
      "post": {
        "tags": [
          "ShippedSupply"
        ],
        "summary": "Update massive supply alerts",
        "operationId": "ShippedSupply/MassiveUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MassiveShippingSuppliesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[MassiveShippingSuppliesResponse]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ShippedSupply/Log": {
      "post": {
        "tags": [
          "ShippedSupply"
        ],
        "summary": "Gets the log.",
        "operationId": "ShippedSupply/Log",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetShippedSupplyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[SagaDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/GetStandardProductsSummary": {
      "get": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/GetStandardProductsSummary",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[StandardProductsSummaryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/GetProductsToAssociate": {
      "get": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/GetProductsToAssociate",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductToAssociateDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/ListStandardProducts": {
      "get": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/ListStandardProducts",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[StandardProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/ListOperations": {
      "get": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/ListOperations",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the customer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[StandardProductOperationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/GetOperation": {
      "get": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/GetOperation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the customer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[StandardProductOperationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/CreateOrUpdateOperation": {
      "post": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/CreateOrUpdateOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateOrUpdateStandardProductOperation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/ProcessOperation": {
      "post": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/ProcessOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdAndDealerCodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/RollbackOperation": {
      "post": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/RollbackOperation",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RollbackStandardProductOperationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/ListDevicesInOperation": {
      "get": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/ListDevicesInOperation",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "operationId",
            "in": "query",
            "description": "Gets or sets the operation identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/StandardProduct/GetExcelReport": {
      "get": {
        "tags": [
          "StandardProduct"
        ],
        "operationId": "StandardProduct/GetExcelReport",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SupplyAlert/List": {
      "post": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Returns a list of opened alerts (not installed yet).",
        "operationId": "SupplyAlert/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetSupplyAlertRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[SupplyAlertListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SupplyAlert/ListByOffice": {
      "post": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Returns a list of opened alerts (not installed yet) by customer.",
        "operationId": "SupplyAlert/ListByOffice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAlertsByOfficeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertOfficeDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SupplyAlert/Get": {
      "post": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Gets a specific alert by its id",
        "operationId": "SupplyAlert/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[SupplyAlertDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SupplyAlert/Update": {
      "post": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Updates a supply alert",
        "operationId": "SupplyAlert/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": true
      }
    },
    "/SupplyAlert/PostponeAlert": {
      "put": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Postpone an alert until percentage",
        "operationId": "SupplyAlert/PostponeAlert",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[PostponeAlertDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SupplyAlert/MassiveUpdate": {
      "post": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Update massive supply alerts",
        "operationId": "SupplyAlert/MassiveUpdate",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[MassiveUpdateAlertDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SupplyAlert/GetAvailableSuppliesForADevice": {
      "get": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Gets available supplies for a device",
        "operationId": "SupplyAlert/GetAvailableSuppliesForADevice",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "Gets or sets the device Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "description": "Gets or sets the SupplyType",
            "required": true,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "description": "Gets or sets the ColorType",
            "required": true,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "description": "Gets or sets the MaintenanceKitType",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "description": "Gets or sets the MaintenanceKitColor",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "warning",
            "in": "query",
            "description": "Gets or sets the SupplyAlert warning",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Set the language to retrieve supplies localizated",
            "required": true,
            "type": "string",
            "enum": [
              "Italiano",
              "English",
              "Deutsche",
              "French",
              "Spanish",
              "Norwegian",
              "Korean",
              "Portuguese",
              "Catalan",
              "Japanese",
              "Vietnamese",
              "Thai",
              "TraditionalChinese",
              "Polish"
            ]
          },
          {
            "name": "showOnlyCurrentSuppliesInUse",
            "in": "query",
            "description": "Show only current supplies in use",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AvailableSuppliesDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SupplyAlert/GetAvailableMaintenanceKitTypes": {
      "get": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Gets available Maintenance kit types",
        "operationId": "SupplyAlert/GetAvailableMaintenanceKitTypes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[KeyValueDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/SupplyAlert/GetAvailableMaintenanceKitColors": {
      "get": {
        "tags": [
          "SupplyAlert"
        ],
        "summary": "Gets available Maintenance kit colors",
        "operationId": "SupplyAlert/GetAvailableMaintenanceKitColors",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[KeyValueDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Ticket/CreateTicket": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Create the ticket",
        "operationId": "Ticket/CreateTicket",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CreateTicketDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CreateTicketResponse]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Ticket/CreateTicketChild": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Create the ticket",
        "operationId": "Ticket/CreateTicketChild",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CreateTicketChildDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Ticket/GetTickets": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Gets the tickets.",
        "operationId": "Ticket/GetTickets",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "description": "Gets or sets the customer identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerId",
            "in": "query",
            "description": "Gets or sets the dealer identifier.",
            "required": false,
            "type": "string"
          },
          {
            "name": "serialAssetNumber",
            "in": "query",
            "description": "Gets or sets the serial asset number.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ipAddress",
            "in": "query",
            "description": "Gets or sets the ip address.",
            "required": false,
            "type": "string"
          },
          {
            "name": "resolve",
            "in": "query",
            "description": "Filter by resolve status, NotClosed and New are filtered together",
            "required": false,
            "type": "string",
            "enum": [
              "Open",
              "ProblemFixed",
              "DoNotFix",
              "Duplicate",
              "New"
            ]
          },
          {
            "name": "idTicket",
            "in": "query",
            "description": "Gets or sets the identifier ticket.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter the list by category",
            "required": false,
            "type": "string",
            "enum": [
              "EXplorerInstallationRequest",
              "EXplorerInstallationIsolated",
              "EXplorerReInstallationIsolated",
              "EXplorerUpdate",
              "EXplorerInstallationProblem",
              "EXplorerConfigurationProblem",
              "ChangeOrModifyRequests",
              "CustomerProblem",
              "DeviceProblem",
              "DeviceOperationsProblem",
              "AlertProblem",
              "NotificationProblem",
              "ReportProblem",
              "LoginManageSiteProblem",
              "IntegrationProblem",
              "Other"
            ]
          },
          {
            "name": "isFeatureRequest",
            "in": "query",
            "description": "Gets or sets the is feature request.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isParked",
            "in": "query",
            "description": "Gets or sets the IsParked.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isFlagged",
            "in": "query",
            "description": "Gets or sets the IsFlagged.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isWaitingThirdLevel",
            "in": "query",
            "description": "Gets or sets the is waiting third level.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "subType",
            "in": "query",
            "description": "Gets or sets the type of the sub.",
            "required": false,
            "type": "string",
            "enum": [
              "Other",
              "ExplorerInstallationOnNewCustomer",
              "ExplorerUpdate",
              "ExplorerReinstall",
              "AddingSupplies",
              "DeleteOffices",
              "MoveDevicesOnOtherOfficeRequest",
              "SetDevicesToNotManaged",
              "AlertLimitModification",
              "ScheduledTaskNotWork",
              "NoDevicesFound",
              "CustomerDataNotFoundOnSite",
              "SomeDevicesNotFound",
              "DeviceCounterNotFound",
              "WrongDeviceCounters",
              "DeviceLimitWrong",
              "DeviceNotUpdateFrom",
              "OfficeProjectDeviceAssociation",
              "DeviceNeverContacted",
              "PartNumberNotFoundOnAlertManage",
              "AlertOpenedOnWrongLevel",
              "AlertCannotInstall",
              "AlertOpenAndCloseFrequently",
              "AlertNotificationNotSend",
              "SupplyNotificationNotSend",
              "LogisticNotificationNotSend",
              "WrongData",
              "AddMoreInfo",
              "WrongNotificationOrNotExpected",
              "ReportDiscordanceWithDevice",
              "PageError",
              "SiteDown",
              "DataList",
              "DateProblem",
              "ExportProblem",
              "Syncronization",
              "TokensRequest"
            ]
          },
          {
            "name": "priority",
            "in": "query",
            "description": "Gets or sets the priority.",
            "required": false,
            "type": "string",
            "enum": [
              "Minor",
              "Major",
              "Critical"
            ]
          },
          {
            "name": "openedFrom",
            "in": "query",
            "description": "Gets or sets the opened from.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "openedTo",
            "in": "query",
            "description": "Gets or sets the opened to.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "ownerName",
            "in": "query",
            "description": "Gets or sets the name of the owner.",
            "required": false,
            "type": "string"
          },
          {
            "name": "assignedTo",
            "in": "query",
            "description": "Gets or sets the name of the assigned to.",
            "required": false,
            "type": "string"
          },
          {
            "name": "ticketType",
            "in": "query",
            "description": "Gets or sets the type of the ticket.",
            "required": false,
            "type": "string",
            "enum": [
              "Tickets",
              "InstallationTickets"
            ]
          },
          {
            "name": "oberonTicket",
            "in": "query",
            "description": "Gets or sets the oberon ticket.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sdsTicket",
            "in": "query",
            "description": "Gets or sets the SDS ticket.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[TicketDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Ticket/GetTicket": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Gets the ticket.",
        "operationId": "Ticket/GetTicket",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TicketDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Ticket/GetTicketByNumber": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Gets the ticket.",
        "operationId": "Ticket/GetTicketByNumber",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "ticketNumber",
            "in": "query",
            "description": "Gets or sets the ticket number.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TicketDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Ticket/GetAttachment": {
      "get": {
        "tags": [
          "Ticket"
        ],
        "summary": "Gets the attachment.",
        "operationId": "Ticket/GetAttachment",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "attachmentName",
            "in": "query",
            "description": "Gets or sets the name of the attachment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Ticket/GetSubTypesByCategories": {
      "post": {
        "tags": [
          "Ticket"
        ],
        "summary": "Returns the categories and subtypes gerarchy",
        "operationId": "Ticket/GetSubTypesByCategories",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[TicketSubTypesByCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TraceVolume/List": {
      "get": {
        "tags": [
          "TraceVolume"
        ],
        "summary": "Returns a list of TraceVolume by device",
        "operationId": "TraceVolume/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[TraceVolumeConfigurationListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TraceVolume/Get": {
      "get": {
        "tags": [
          "TraceVolume"
        ],
        "summary": "Gets a specific trace volume by its id",
        "operationId": "TraceVolume/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TraceVolumeConfigurationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TraceVolume/Delete": {
      "delete": {
        "tags": [
          "TraceVolume"
        ],
        "summary": "Set a specific trace volume to deleted",
        "operationId": "TraceVolume/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TraceVolume/Create": {
      "post": {
        "tags": [
          "TraceVolume"
        ],
        "summary": "Create the TraceVolume alert configuration",
        "operationId": "TraceVolume/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[TraceVolumeConfigurationDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TraceVolumeConfigurationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TraceVolume/Update": {
      "put": {
        "tags": [
          "TraceVolume"
        ],
        "summary": "Update the TraceVolume alert configuration",
        "operationId": "TraceVolume/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[TraceVolumeConfigurationDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TraceVolumeConfigurationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TraceVolume/ResetEvents": {
      "put": {
        "tags": [
          "TraceVolume"
        ],
        "summary": "Reset the TraceVolume configuration events and set a new one",
        "operationId": "TraceVolume/ResetEvents",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TraceVolumeNewEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TraceVolume/CreateManualEvent": {
      "post": {
        "tags": [
          "TraceVolume"
        ],
        "summary": "Create a manual TraceVolume configuration event",
        "operationId": "TraceVolume/CreateManualEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TraceVolumeNewEventRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TraceVolume/CloseEvent": {
      "post": {
        "tags": [
          "TraceVolume"
        ],
        "summary": "Close a TraceVolume configuration event",
        "operationId": "TraceVolume/CloseEvent",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TradingPartner/Get": {
      "get": {
        "tags": [
          "TradingPartnerApi"
        ],
        "summary": "Get tradingPartner",
        "operationId": "TradingPartner/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TradingPartnerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TradingPartner/List": {
      "get": {
        "tags": [
          "TradingPartnerApi"
        ],
        "summary": "Get tradingPartner",
        "operationId": "TradingPartner/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[TradingPartnerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/TradingPartner/Update": {
      "put": {
        "tags": [
          "TradingPartnerApi"
        ],
        "summary": "Create the tradingPartner",
        "operationId": "TradingPartner/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TradingPartnerUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TradingPartnerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/WhiteLabel/GetWhiteLabelCustomizationByUrl": {
      "get": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "Get the whitelabel customizations by the caller URL",
        "operationId": "WhiteLabel/GetWhiteLabelCustomizationByUrl",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[WhiteLabelCustomizationDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/WhiteLabel/Update": {
      "put": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "TResponse\r\n            Update the white label",
        "operationId": "WhiteLabel/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[WhiteLabelDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[WhiteLabelDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/WhiteLabel/UpdateTemplates": {
      "put": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "Updates and email template",
        "operationId": "WhiteLabel/UpdateTemplates",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[WhiteLabelDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[WhiteLabelDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/WhiteLabel/UpdateDcaLicenses": {
      "put": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "Update a DCA licence text",
        "operationId": "WhiteLabel/UpdateDcaLicenses",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[WhiteLabelDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[WhiteLabelDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/WhiteLabel/Get": {
      "get": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "Get the white label.",
        "operationId": "WhiteLabel/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[WhiteLabelDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/WhiteLabel/GetWhitelabelPlaceholders": {
      "get": {
        "tags": [
          "WhiteLabel"
        ],
        "summary": "Get whitelabel placeholders",
        "operationId": "WhiteLabel/GetWhitelabelPlaceholders",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "portalEmailTemplateType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DemoRequestConfirmation",
              "DemoRequestActivation",
              "DemoRequestDeclined",
              "RequestChangePassword",
              "NewUserCreation",
              "DemoExpiring",
              "DemoExpired",
              "DemoReminder",
              "DemoReminderCustomerCreationDownloadConnector",
              "DemoReminderDevicesNotFound",
              "DemoExpiringWithHighActivity",
              "SendOtpCode"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[WhiteLabelPlaceholderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ZebraDevice/SetDevicesReboot": {
      "post": {
        "tags": [
          "ZebraDeviceApi"
        ],
        "summary": "Reboot zebra devices",
        "operationId": "ZebraDevice/SetDevicesReboot",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDevicesRebootRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ZebraDevice/SetDevicesUpdateFirmware": {
      "post": {
        "tags": [
          "ZebraDeviceApi"
        ],
        "summary": "Update firmware for zebra devices",
        "operationId": "ZebraDevice/SetDevicesUpdateFirmware",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetDevicesUpdateFirmwareRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ZebraDevice/SetZebraSettings": {
      "post": {
        "tags": [
          "ZebraDeviceApi"
        ],
        "summary": "Sets the zebra settings.",
        "operationId": "ZebraDevice/SetZebraSettings",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetZebraSettingsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "ConfirmAccountRequest": {
      "description": "ConfirmAccountRequest",
      "type": "object",
      "properties": {
        "Username": {
          "description": "Gets or sets the roles.",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the is active.",
          "type": "string"
        },
        "Token": {
          "description": "Gets or sets the token.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[AccountDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/AccountDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AccountDto": {
      "description": "Represent an account",
      "type": "object",
      "properties": {
        "Nominative": {
          "description": "Gets or sets the nominative.",
          "type": "string"
        },
        "CreatedAt": {
          "description": "Gets or sets the creation date.",
          "type": "string"
        },
        "CreatedAtDate": {
          "format": "date-time",
          "description": "Gets or sets the creation date.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the email.",
          "type": "string"
        },
        "Token": {
          "description": "Gets or sets the token.",
          "type": "string"
        },
        "Role": {
          "description": "Gets or sets the role.",
          "type": "string"
        },
        "Capabilities": {
          "description": "Capabilities",
          "type": "array",
          "items": {
            "enum": [
              "NotSet",
              "CanViewEconomicsData",
              "Devices_LfpData",
              "Devices_ConsumablesExtendedInfo",
              "Devices_Export",
              "Devices_View",
              "Devices_Create",
              "Devices_Edit",
              "Devices_Delete",
              "Devices_SDS",
              "Devices_SDS_Actions",
              "Devices_View_UnManaged",
              "Devices_ManageCounters",
              "Devices_RemoteWs",
              "Devices_Actions",
              "OfflineDevices_View",
              "OfflineDevices_Create",
              "OfflineDevices_AddCounters",
              "OfflineDevices_CreateShipping",
              "DealerSupplies_View",
              "DealerSupplies_Create",
              "DealerSupplies_Edit",
              "DealerSupplies_Delete",
              "Connectors_View",
              "Connectors_CreateLicense",
              "Connectors_Edit",
              "Connectors_Delete",
              "Connectors_SDS",
              "Connectors_Download",
              "Connectors_Command",
              "Customers_View",
              "Customers_Edit",
              "Customers_Create",
              "Customers_Delete",
              "Customers_SDS",
              "Customers_UniversalPrint",
              "Customers_PrivacyData",
              "Customers_PrintReleaf",
              "Customers_Sign",
              "Alerts_View",
              "AlertsHistory_View",
              "Alerts_Manage",
              "Alerts_MassiveManage",
              "Alerts_Install",
              "Alerts_Edit",
              "ShippedSupplies_View",
              "ShippedSupplies_Edit",
              "ShippedSupplies_Create",
              "Exports_View",
              "Exports_Edit",
              "Exports_Delete",
              "ExportsSelfService_View",
              "ImportedFiles_View",
              "Dealers_View",
              "Dealers_Edit",
              "Dealers_Create",
              "Dealers_CustomersHomePageNotes",
              "Dealers_Sign",
              "Dealers_Activate",
              "Dealers_Activate_Child",
              "Dealers_Delete",
              "Dealers_MoveToProduction",
              "Accounts_View",
              "Accounts_Edit",
              "Accounts_Create",
              "Accounts_Delete",
              "Accounts_Manage_SameRole",
              "Accounts_CanViewEconomicsData",
              "Accounts_Use_DealerHierarchy",
              "Accounts_Autologin",
              "CustomerContracts_View",
              "CustomerContracts_Edit",
              "CustomerContracts_Create",
              "CustomerContracts_Delete",
              "DealerContracts_View",
              "DealerContracts_Edit",
              "DealerContracts_Create",
              "DealerContracts_Delete",
              "DealerInvoices_View",
              "DealerInvoices_Edit",
              "DealerInvoices_Create",
              "DealerInvoices_Delete",
              "CustomerInvoices_View",
              "CustomerInvoices_Edit",
              "CustomerInvoices_Create",
              "CustomerInvoices_Delete",
              "DealerRiBa_View",
              "DealerRiBa_Create",
              "DealerRiBa_Delete",
              "DealerSupplySet_View",
              "DealerSupplySet_Create",
              "DealerSupplySet_Edit",
              "DealerSupplySet_Delete",
              "Ticket_View",
              "Ticket_Create",
              "Ticket_Edit",
              "Ticket_Operator",
              "PowerBi_View",
              "PowerBi_View_SystemReports",
              "PowerBi_Edit",
              "PowerBi_View_Dashboard",
              "DealerReceivedInvoices_View",
              "DealerReceivedInvoices_Edit",
              "DealerReceivedInvoices_Create",
              "DealerReceivedInvoices_Delete",
              "Imports_View",
              "ThirdPartyAuthentication_View",
              "ThirdPartyAuthentication_Create",
              "ThirdPartyAuthentication_Edit",
              "SuppliesPriceList_View",
              "SuppliesPriceList_Create",
              "SuppliesPriceList_Edit",
              "SuppliesPriceList_Delete",
              "Customers_Project_Volumes_View",
              "Customers_Project_Volumes_Edit",
              "Customers_Project_Volumes_Delete",
              "ActivityLog_Email_View",
              "ActivityLog_Saga_View",
              "ActivityLog_Workflow_View",
              "CountersCatalog",
              "Orders_View"
            ],
            "type": "string"
          }
        },
        "Language": {
          "description": "Gets or sets the language.",
          "type": "string"
        },
        "ShortLanguage": {
          "description": "Gets or sets the short language.",
          "type": "string"
        },
        "IsActive": {
          "description": "Gets or sets a value indicating whether this instance is active.",
          "type": "boolean"
        },
        "Force2fa": {
          "description": "Gets or sets a value indicating whether this {MpsMonitor.Models.AccountDto} must use 2fa.",
          "type": "boolean"
        },
        "ForceSso": {
          "description": "Gets or sets a value indicating whether [force sso].",
          "type": "boolean"
        },
        "Use2fa": {
          "description": "Gets or sets a value indicating whether this instance use 2 form factor auth",
          "type": "boolean"
        },
        "LastLoginAt": {
          "format": "date-time",
          "description": "Gets or sets the last login at.",
          "type": "string"
        },
        "IsDeleted": {
          "description": "Gets or sets a value indicating whether this instance is marked for cancellation.",
          "type": "boolean"
        },
        "ExcludeFromWarningNotifications": {
          "description": "Exclude this account from eXplorer warning notifications",
          "type": "boolean"
        },
        "EnabledNewDevicesNotification": {
          "description": "Enable new devices discovered notification",
          "type": "boolean"
        },
        "PreferredDealer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "Gets or sets the preferred dealer (used when an account has access to multiple dealers but has one preferred dealer)."
        },
        "DefaultDealer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "Gets or sets the default dealer (the only dealer the account has access to)."
        },
        "DefaultCustomer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "Gets or sets the default customer (the only customer the account has access to)."
        },
        "Customers": {
          "description": "The list of the customers associated to this account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerBaseDto"
          }
        },
        "Dealers": {
          "description": "The list of the dealers associated to this account",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerBaseDto"
          }
        },
        "Tags": {
          "description": "The list of the tags associated to this account",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ReportingReports": {
          "description": "The list of customer reporting reports available",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportBaseDto"
          }
        },
        "EnablePasswordExpiration": {
          "description": "Gets or sets a value indicating whether [enable password expiration].",
          "type": "boolean"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CodeDesc": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "DealerBaseDto": {
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CustomerBaseDto": {
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        },
        "CountryName": {
          "description": "Gets or sets the name of the country.",
          "type": "string"
        },
        "CountryIsEu": {
          "description": "Gets or sets a value indicating whether [country is eu].",
          "type": "boolean"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ReportBaseDto": {
      "description": "Represent a report",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Code",
          "type": "string"
        }
      }
    },
    "Object": {
      "type": "object",
      "properties": {}
    },
    "UpdateProfileRequest": {
      "description": "Update user profile request",
      "required": [
        "Name",
        "Nominative",
        "Email"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "The username of the user",
          "type": "string"
        },
        "Nominative": {
          "description": "An identificative of the user like name or surname.",
          "type": "string"
        },
        "Email": {
          "description": "The user Email",
          "type": "string"
        },
        "ExcludeFromWarningNotifications": {
          "description": "If true exclude the user from warning notifications.",
          "type": "boolean"
        },
        "EnabledNewDevicesNotification": {
          "description": "If true enable new device notification",
          "type": "boolean"
        },
        "Use2Fa": {
          "description": "If true the 2 factor authentication will be enforced.",
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[Psk2faDataDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/Psk2faDataDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "Psk2faDataDto": {
      "type": "object",
      "properties": {
        "Use2fa": {
          "type": "boolean"
        },
        "Psk2fa": {
          "type": "string"
        },
        "Psk2faQrCode": {
          "type": "string"
        }
      }
    },
    "GetPsk2faDataForProfileRequest": {
      "type": "object",
      "properties": {
        "Platform": {
          "enum": [
            "MpsMonitor",
            "Katun",
            "Olivetti",
            "HpSds",
            "CloudConnected",
            "Ehawk",
            "MpsMonitorOld"
          ],
          "type": "string"
        }
      }
    },
    "GetPsk2faDataForAccountRequest": {
      "type": "object",
      "properties": {
        "Platform": {
          "enum": [
            "MpsMonitor",
            "Katun",
            "Olivetti",
            "HpSds",
            "CloudConnected",
            "Ehawk",
            "MpsMonitorOld"
          ],
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Psk2fa": {
          "type": "string"
        }
      }
    },
    "Enable2faForAccountRequest": {
      "type": "object",
      "properties": {
        "Platform": {
          "enum": [
            "MpsMonitor",
            "Katun",
            "Olivetti",
            "HpSds",
            "CloudConnected",
            "Ehawk",
            "MpsMonitorOld"
          ],
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Psk2fa": {
          "type": "string"
        },
        "Otp": {
          "type": "string"
        }
      }
    },
    "BaseResponse": {
      "description": "Represents the base class for all the responses",
      "type": "object",
      "properties": {
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "Enable2faForProfileRequest": {
      "type": "object",
      "properties": {
        "Platform": {
          "enum": [
            "MpsMonitor",
            "Katun",
            "Olivetti",
            "HpSds",
            "CloudConnected",
            "Ehawk",
            "MpsMonitorOld"
          ],
          "type": "string"
        },
        "Psk2fa": {
          "type": "string"
        },
        "Otp": {
          "type": "string"
        }
      }
    },
    "SendOtpEmailForAccountRequest": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "SetPreferredDealerRequest": {
      "type": "object",
      "properties": {
        "PreferredDealerCode": {
          "type": "string"
        }
      }
    },
    "GetAccountRequest": {
      "description": "Represents a request to retrieve an account",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Required if you want to get an account associated with customer capabilities set",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetAccountsRequest": {
      "description": "Represents a request to retrieve a pagedlist of accounts",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Roles": {
          "description": "Gets or sets the roles.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DealerCode": {
          "description": "Results filter by dealer code",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Results filtered by customer code",
          "type": "string"
        },
        "IsActive": {
          "description": "Gets or sets the is active.",
          "type": "boolean"
        },
        "OriginType": {
          "enum": [
            "Mps",
            "Api"
          ],
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[AccountDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateAccountRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "Language": {
          "description": "Defines the default language of the account",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "Username": {
          "type": "string"
        },
        "Nominative": {
          "description": "Gets or sets the nominative.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the Email.",
          "type": "string"
        },
        "AccountRole": {
          "description": "Gets or sets the Account role.",
          "type": "string"
        },
        "ExcludeFromWarningNotifications": {
          "description": "Gets or sets the ExcludeFromWarningNotifications.",
          "type": "boolean"
        },
        "EnabledNewDevicesNotification": {
          "description": "Gets or sets the EnabledNewDevicesNotification",
          "type": "boolean"
        },
        "Force2fa": {
          "description": "Gets or sets a value indicating whether this {MpsMonitor.Models.Contracts.Account.CreateAccountRequest} must use 2fa.",
          "type": "boolean"
        },
        "ForceSso": {
          "description": "Gets or sets a value indicating whether [force sso].",
          "type": "boolean"
        },
        "SelectedDealersId": {
          "description": "Gets or sets the Dealers Id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedCustomersId": {
          "description": "Gets or sets the Customers Id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedTagsName": {
          "description": "Gets or sets the name of the selected tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedReportingReports": {
          "description": "Customer Reporting report to add",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CurrendDealerCode": {
          "description": "Gets or sets the currend dealer code.",
          "type": "string"
        },
        "AccountCapabilities": {
          "description": "AccountCapabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityDto"
          }
        },
        "SendActivationEmail": {
          "description": "Defines if send the activation email to the new user",
          "type": "boolean"
        },
        "EnablePasswordExpiration": {
          "description": "Gets or sets a value indicating whether [enable password expiration].",
          "type": "boolean"
        }
      }
    },
    "CapabilityDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "CapabilityGroupName": {
          "type": "string"
        },
        "IsRolesForCustomer": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetByIdAndDealerCodeRequest": {
      "required": [
        "DealerCode",
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateAccountRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the Account Id.",
          "type": "string"
        },
        "Language": {
          "description": "Gets or sets the Language.",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "Nominative": {
          "description": "Gets or sets the nominative.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the Email.",
          "type": "string"
        },
        "AccountRole": {
          "description": "Gets or sets the Account role.",
          "type": "string"
        },
        "IsActive": {
          "description": "Gets or sets the IsActive.",
          "type": "boolean"
        },
        "Force2fa": {
          "description": "Gets or sets a value indicating whether this {MpsMonitor.Models.Contracts.Account.UpdateAccountRequest} must use 2fa.",
          "type": "boolean"
        },
        "ForceSso": {
          "description": "Gets or sets a value indicating whether [force sso].",
          "type": "boolean"
        },
        "ExcludeFromWarningNotifications": {
          "description": "Gets or sets the ExcludeFromWarningNotifications.",
          "type": "boolean"
        },
        "EnabledNewDevicesNotification": {
          "description": "Gets or sets the EnabledNewDevicesNotification",
          "type": "boolean"
        },
        "SelectedDealersId": {
          "description": "Gets or sets the Dealers Id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedCustomersId": {
          "description": "Gets or sets the Customers Id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedTagsName": {
          "description": "Gets or sets the name of the selected tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedReportingReports": {
          "description": "Customer Reporting report to add",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CurrendDealerCode": {
          "description": "Gets or sets the currend dealer code.",
          "type": "string"
        },
        "AccountCapabilities": {
          "description": "AccountCapabilities",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityDto"
          }
        },
        "EnablePasswordExpiration": {
          "description": "Gets or sets a value indicating whether [enable password expiration].",
          "type": "boolean"
        }
      }
    },
    "ChangePasswordRequest": {
      "description": "Represents a request to change the password for an account",
      "required": [
        "OldPassword",
        "NewPassword",
        "ConfirmPassword"
      ],
      "type": "object",
      "properties": {
        "OldPassword": {
          "description": "Gets or sets the old password.",
          "type": "string"
        },
        "NewPassword": {
          "description": "Gets or sets the new password.",
          "type": "string"
        },
        "ConfirmPassword": {
          "description": "Gets or sets the confirm password.",
          "type": "string"
        }
      }
    },
    "ResetPasswordRequest": {
      "description": "Represents a request to reset the password",
      "required": [
        "UserName",
        "Email"
      ],
      "type": "object",
      "properties": {
        "UserName": {
          "description": "The username of the account",
          "type": "string"
        },
        "Email": {
          "description": "The email of the account",
          "type": "string"
        }
      }
    },
    "ResetPasswordVerifyTokenRequest": {
      "description": "Represents a request to reset the password",
      "required": [
        "Token",
        "NewPassword",
        "ConfirmPassword"
      ],
      "type": "object",
      "properties": {
        "Token": {
          "description": "Gets or sets the  token.",
          "type": "string"
        },
        "NewPassword": {
          "description": "Gets or sets the new password.",
          "type": "string"
        },
        "ConfirmPassword": {
          "description": "Gets or sets the confirm password.",
          "type": "string"
        }
      }
    },
    "ChangeLanguageRequest": {
      "description": "Represents a request to reset the password",
      "required": [
        "Language"
      ],
      "type": "object",
      "properties": {
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        }
      }
    },
    "AutoLogOnRequest": {
      "description": "",
      "required": [
        "Name",
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "DealerCode": {
          "description": "Name",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CodeDesc]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CodeDesc",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetAccountActivitiesRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "CreatedFrom": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedTo": {
          "format": "date-time",
          "type": "string"
        },
        "ActivityAction": {
          "enum": [
            "SetToManaged",
            "SetToNotManaged",
            "UnifyDevice",
            "DeviceDeleted",
            "SetToUninstall",
            "UninstallRemoved",
            "DeviceChangeSerialNumber",
            "DeviceClassify",
            "DeviceRemovedFromDcaCloud",
            "AlertInstallationSet",
            "AlertInstallationRemove",
            "AlertCancelSet",
            "AlertCancelRemove",
            "AlertDeleteShippedSupply",
            "AlertCreateOrEditShippedSupply",
            "AlertHiddenSet",
            "AlertHiddenRemove",
            "AlertSetPostponeThreshold",
            "AlertDeleted",
            "ProjectDeleted",
            "ProjectContractFileDeleted",
            "ProjectContractFileUploaded",
            "TracePanelMessageChanged",
            "SetToGenerateAlert",
            "SetToNotGenerateAlert",
            "OfficeDeleted",
            "CostCenterDeleted",
            "CustomerChangeNotification",
            "CustomerUpdateAlertSettings",
            "CustomerChangeDealer",
            "CustomerDeleted",
            "ReplaceCustomersValuesFromDealer",
            "ReplaceMailAddressFromCustomers",
            "DeviceMoved",
            "CustomerCreated",
            "DealerSupplyDeleted",
            "DealerSupplySetDeleted",
            "DealerDeleted",
            "DealerMoveToProduction",
            "DealerChangeParentDealer",
            "DealerPanelMessageAlertConfigurationDeleted",
            "DealerChangeNotification",
            "DealerUpdateAlertSettings",
            "DealerUpdateAlertLimitOptions",
            "DealerUpdateAdvancedSettings",
            "CounterDeviceDeleted",
            "TradingPartnerSupplyListingDeleted",
            "TraceVolumeChangedConfiguration",
            "DealerSupplySetAutoAssociations",
            "DealerSupplySetAssociateByIdAndIdProduct",
            "RestoreDevice",
            "ChangeAlertLimit",
            "MassiveChangeAlertLimit",
            "DeleteAlertLimit",
            "ExplorerDeleted",
            "ExplorerStagingDeleted",
            "ExplorerStagingActivated",
            "ActivatedDemoContact",
            "AccountDeleted",
            "AccountCreate",
            "AccountUpdate",
            "Notification",
            "Integration",
            "DeclineDemoContact",
            "DealerCounterMap",
            "AccountLogin",
            "AccountAutoLogin",
            "RemoteWsStatusChanged",
            "CustomFieldDeleted",
            "ChangeShippedSupplyQuantity",
            "ChangeShippedSupplyStockedQuantity",
            "ChangeShippedSupplyStockToAutomatic",
            "AccountLoginFailedMaxAttemptsReached",
            "DealerCounterBlendedUpdate",
            "DeviceResetActualCounters",
            "RoleCreate",
            "RoleUpdate",
            "RoleDelete",
            "DealerTagsChanged",
            "RestoreDeletedCustomer"
          ],
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[AccountActivityDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountActivityDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AccountActivityDto": {
      "type": "object",
      "properties": {
        "Creation": {
          "format": "date-time",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "AccountName": {
          "description": "Gets or sets the account name.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "ActionInfo": {
          "description": "Gets or sets the action info.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "DeviceSerialNumber": {
          "description": "Gets or sets the device serial number.",
          "type": "string"
        },
        "Action": {
          "description": "Gets or sets the action.",
          "enum": [
            "SetToManaged",
            "SetToNotManaged",
            "UnifyDevice",
            "DeviceDeleted",
            "SetToUninstall",
            "UninstallRemoved",
            "DeviceChangeSerialNumber",
            "DeviceClassify",
            "DeviceRemovedFromDcaCloud",
            "AlertInstallationSet",
            "AlertInstallationRemove",
            "AlertCancelSet",
            "AlertCancelRemove",
            "AlertDeleteShippedSupply",
            "AlertCreateOrEditShippedSupply",
            "AlertHiddenSet",
            "AlertHiddenRemove",
            "AlertSetPostponeThreshold",
            "AlertDeleted",
            "ProjectDeleted",
            "ProjectContractFileDeleted",
            "ProjectContractFileUploaded",
            "TracePanelMessageChanged",
            "SetToGenerateAlert",
            "SetToNotGenerateAlert",
            "OfficeDeleted",
            "CostCenterDeleted",
            "CustomerChangeNotification",
            "CustomerUpdateAlertSettings",
            "CustomerChangeDealer",
            "CustomerDeleted",
            "ReplaceCustomersValuesFromDealer",
            "ReplaceMailAddressFromCustomers",
            "DeviceMoved",
            "CustomerCreated",
            "DealerSupplyDeleted",
            "DealerSupplySetDeleted",
            "DealerDeleted",
            "DealerMoveToProduction",
            "DealerChangeParentDealer",
            "DealerPanelMessageAlertConfigurationDeleted",
            "DealerChangeNotification",
            "DealerUpdateAlertSettings",
            "DealerUpdateAlertLimitOptions",
            "DealerUpdateAdvancedSettings",
            "CounterDeviceDeleted",
            "TradingPartnerSupplyListingDeleted",
            "TraceVolumeChangedConfiguration",
            "DealerSupplySetAutoAssociations",
            "DealerSupplySetAssociateByIdAndIdProduct",
            "RestoreDevice",
            "ChangeAlertLimit",
            "MassiveChangeAlertLimit",
            "DeleteAlertLimit",
            "ExplorerDeleted",
            "ExplorerStagingDeleted",
            "ExplorerStagingActivated",
            "ActivatedDemoContact",
            "AccountDeleted",
            "AccountCreate",
            "AccountUpdate",
            "Notification",
            "Integration",
            "DeclineDemoContact",
            "DealerCounterMap",
            "AccountLogin",
            "AccountAutoLogin",
            "RemoteWsStatusChanged",
            "CustomFieldDeleted",
            "ChangeShippedSupplyQuantity",
            "ChangeShippedSupplyStockedQuantity",
            "ChangeShippedSupplyStockToAutomatic",
            "AccountLoginFailedMaxAttemptsReached",
            "DealerCounterBlendedUpdate",
            "DeviceResetActualCounters",
            "RoleCreate",
            "RoleUpdate",
            "RoleDelete",
            "DealerTagsChanged",
            "RestoreDeletedCustomer"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DisableAlertLimitsRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "DisableAlertLimitLevel": {
          "type": "boolean"
        },
        "DisableAlertLimitResidualPages": {
          "type": "boolean"
        },
        "DisableAlertLimitResidualDays": {
          "type": "boolean"
        },
        "DisablePostAlertLevel": {
          "type": "boolean"
        },
        "DisablePostAlertResidualPages": {
          "type": "boolean"
        },
        "DisablePostAlertResidualDays": {
          "type": "boolean"
        },
        "AlertLimitSource": {
          "enum": [
            "Default",
            "Dealer",
            "DealerProduct",
            "Customer",
            "CustomerProduct",
            "InstalledProduct"
          ],
          "type": "string"
        }
      }
    },
    "GetAllLimitsRequest": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "DeviceId": {
          "type": "string"
        },
        "ProductId": {
          "type": "string"
        },
        "AlertLimitSource": {
          "enum": [
            "Default",
            "Dealer",
            "DealerProduct",
            "Customer",
            "CustomerProduct",
            "InstalledProduct"
          ],
          "type": "string"
        }
      }
    },
    "ListResultResponse[AlertLimit2SourceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2SourceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertLimit2SourceDto": {
      "type": "object",
      "properties": {
        "AlertLimit": {
          "$ref": "#/definitions/AlertLimit2Dto"
        },
        "AlertLimitSource": {
          "enum": [
            "Default",
            "Dealer",
            "DealerProduct",
            "Customer",
            "CustomerProduct",
            "InstalledProduct"
          ],
          "type": "string"
        }
      }
    },
    "AlertLimit2Dto": {
      "type": "object",
      "properties": {
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "MaintenanceKitTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "MaintenanceKitColorId": {
          "format": "int32",
          "type": "integer"
        },
        "AlertLimitType": {
          "enum": [
            "None",
            "Level",
            "ResidualPages",
            "ResidualDays"
          ],
          "type": "string"
        },
        "CreationAlertLimit": {
          "format": "int32",
          "type": "integer"
        },
        "CreationAlertLimitStatus": {
          "enum": [
            "Enabled",
            "Disabled",
            "Default"
          ],
          "type": "string"
        },
        "PostAlertNotification": {
          "format": "int32",
          "type": "integer"
        },
        "PostAlertNotificationStatus": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string"
        },
        "LastUpdateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "CreationAlertLimitProximity": {
          "format": "int32",
          "type": "integer"
        },
        "CreationAlertLimitProximityStatus": {
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string"
        }
      }
    },
    "GetByCodeRequest": {
      "description": "Represents a request to retrieve an object by code",
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[AlertLimit2DealerDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2DealerDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertLimit2DealerDto": {
      "type": "object",
      "properties": {
        "IdDealer": {
          "type": "string"
        },
        "AlertLimit": {
          "$ref": "#/definitions/AlertLimit2Dto"
        }
      }
    },
    "UpdateRequest[IEnumerable[AlertLimit2DealerDto]]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "description": "Gets or sets the object to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2DealerDto"
          }
        }
      }
    },
    "GetByCodeFilteredRequest": {
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[ProductBaseDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductBaseDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ProductBaseDto": {
      "description": "ProductBase",
      "type": "object",
      "properties": {
        "Model": {
          "description": "Gets or sets the model.",
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetByIdAndDealerCodeFilteredRequest": {
      "required": [
        "DealerCode",
        "Id"
      ],
      "type": "object",
      "properties": {
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[AlertLimit2DealerProductDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2DealerProductDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertLimit2DealerProductDto": {
      "type": "object",
      "properties": {
        "IdDealer": {
          "type": "string"
        },
        "AlertLimit": {
          "$ref": "#/definitions/AlertLimit2Dto"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto"
        }
      }
    },
    "UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "description": "Gets or sets the object to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2DealerProductDto"
          }
        }
      }
    },
    "ListResultResponse[AlertLimit2CustomerDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2CustomerDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertLimit2CustomerDto": {
      "type": "object",
      "properties": {
        "IdCustomer": {
          "type": "string"
        },
        "AlertLimit": {
          "$ref": "#/definitions/AlertLimit2Dto"
        }
      }
    },
    "UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "description": "Gets or sets the object to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2CustomerDto"
          }
        }
      }
    },
    "DeleteCustomerDefaultForConsumableRequest": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "MaintenanceKitTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "MaintenanceKitColorId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetByIdAndCustomerCodeFilteredRequest": {
      "required": [
        "CustomerCode",
        "Id"
      ],
      "type": "object",
      "properties": {
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the CustomerCode.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[AlertLimit2CustomerProductDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2CustomerProductDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertLimit2CustomerProductDto": {
      "type": "object",
      "properties": {
        "IdCustomer": {
          "type": "string"
        },
        "AlertLimit": {
          "$ref": "#/definitions/AlertLimit2Dto"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto"
        }
      }
    },
    "GetByIdAndCustomerCodeRequest": {
      "description": "Represents a request to retrieve an object by id and customer code",
      "required": [
        "CustomerCode",
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the CustomerCode.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "description": "Gets or sets the object to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2CustomerProductDto"
          }
        }
      }
    },
    "GetByIdRequest": {
      "description": "Represents a request to retrieve an object by id",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[AlertLimit2DeviceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2DeviceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertLimit2DeviceDto": {
      "type": "object",
      "properties": {
        "IdDevice": {
          "type": "string"
        },
        "AlertLimit": {
          "$ref": "#/definitions/AlertLimit2Dto"
        }
      }
    },
    "UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "description": "Gets or sets the object to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimit2DeviceDto"
          }
        }
      }
    },
    "DeleteDeviceDefaultForConsumableRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "MaintenanceKitTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "MaintenanceKitColorId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[UpdateAlertLimitDealerDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/UpdateAlertLimitDealerDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateAlertLimitDealerDto": {
      "description": "Alert Limit Maintenance kit Dealer Dto",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the Dealer code.",
          "type": "string"
        },
        "OverwriteExistingCustomersAlertLimit": {
          "description": "Overwrite existing customers alert limit",
          "type": "boolean"
        },
        "BlackTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the black toner limit.",
          "type": "integer"
        },
        "YellowTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow toner limit.",
          "type": "integer"
        },
        "CyanTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan toner limit.",
          "type": "integer"
        },
        "MagentaTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta toner limit.",
          "type": "integer"
        },
        "BlackPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the black photoconductor limit.",
          "type": "integer"
        },
        "YellowPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow photoconductor limit.",
          "type": "integer"
        },
        "CyanPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan photoconductor limit.",
          "type": "integer"
        },
        "MagentaPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta photoconductor limit.",
          "type": "integer"
        },
        "MaintenanceKitLimit": {
          "format": "int32",
          "description": "Gets or sets the MainteinanceKit limit.",
          "type": "integer"
        },
        "MaintenanceKits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimitMaintenanceKitDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "AlertLimitMaintenanceKitDto": {
      "description": "Alert Limit Dealer Dto",
      "type": "object",
      "properties": {
        "MaintenanceKitTypeId": {
          "format": "int32",
          "description": "Gets or sets the maintenance type",
          "type": "integer"
        },
        "MaintenanceKitColorId": {
          "format": "int32",
          "description": "Gets or sets the maintenance color",
          "type": "integer"
        },
        "Limit": {
          "format": "int32",
          "description": "/ Gets or sets the maintenance limit.",
          "type": "integer"
        }
      }
    },
    "UpdateRequest[UpdateAlertLimitDealerDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/UpdateAlertLimitDealerDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[AlertLimitCustomerProductDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/AlertLimitCustomerProductDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertLimitCustomerProductDto": {
      "description": "AlertLimitCustomerProductDto",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Get Id",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Get Product"
        },
        "BlackTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the black toner limit.",
          "type": "integer"
        },
        "YellowTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow toner limit.",
          "type": "integer"
        },
        "CyanTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan toner limit.",
          "type": "integer"
        },
        "MagentaTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta toner limit.",
          "type": "integer"
        },
        "BlackPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the black photoconductor limit.",
          "type": "integer"
        },
        "YellowPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow photoconductor limit.",
          "type": "integer"
        },
        "CyanPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan photoconductor limit.",
          "type": "integer"
        },
        "MagentaPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta photoconductor limit.",
          "type": "integer"
        },
        "MaintenanceKitLimit": {
          "format": "int32",
          "description": "Gets or sets the MainteinanceKit limit.",
          "type": "integer"
        },
        "MaintenanceKits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimitMaintenanceKitDto"
          }
        }
      }
    },
    "UpdateRequest[UpdateAlertLimitCustomerProductDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/UpdateAlertLimitCustomerProductDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateAlertLimitCustomerProductDto": {
      "description": "Alert Limit customer product Dto",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the Customer code.",
          "type": "string"
        },
        "ProductId": {
          "description": "Gets or sets the Product Id",
          "type": "string"
        },
        "BlackTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the black toner limit.",
          "type": "integer"
        },
        "YellowTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow toner limit.",
          "type": "integer"
        },
        "CyanTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan toner limit.",
          "type": "integer"
        },
        "MagentaTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta toner limit.",
          "type": "integer"
        },
        "BlackPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the black photoconductor limit.",
          "type": "integer"
        },
        "YellowPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow photoconductor limit.",
          "type": "integer"
        },
        "CyanPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan photoconductor limit.",
          "type": "integer"
        },
        "MagentaPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta photoconductor limit.",
          "type": "integer"
        },
        "MaintenanceKitLimit": {
          "format": "int32",
          "description": "Gets or sets the MainteinanceKit limit.",
          "type": "integer"
        },
        "MaintenanceKits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimitMaintenanceKitDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[AlertLimitCustomerProductDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimitCustomerProductDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[AlertLimitBaseDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/AlertLimitBaseDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertLimitBaseDto": {
      "description": "Alert Limit Dto",
      "type": "object",
      "properties": {
        "BlackTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the black toner limit.",
          "type": "integer"
        },
        "YellowTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow toner limit.",
          "type": "integer"
        },
        "CyanTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan toner limit.",
          "type": "integer"
        },
        "MagentaTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta toner limit.",
          "type": "integer"
        },
        "BlackPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the black photoconductor limit.",
          "type": "integer"
        },
        "YellowPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow photoconductor limit.",
          "type": "integer"
        },
        "CyanPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan photoconductor limit.",
          "type": "integer"
        },
        "MagentaPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta photoconductor limit.",
          "type": "integer"
        },
        "MaintenanceKitLimit": {
          "format": "int32",
          "description": "Gets or sets the MainteinanceKit limit.",
          "type": "integer"
        },
        "MaintenanceKits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimitMaintenanceKitDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[UpdateAlertLimitDeviceDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/UpdateAlertLimitDeviceDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateAlertLimitDeviceDto": {
      "description": "Alert Limit Dealer Dto",
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "BlackTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the black toner limit.",
          "type": "integer"
        },
        "YellowTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow toner limit.",
          "type": "integer"
        },
        "CyanTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan toner limit.",
          "type": "integer"
        },
        "MagentaTonerLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta toner limit.",
          "type": "integer"
        },
        "BlackPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the black photoconductor limit.",
          "type": "integer"
        },
        "YellowPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the yellow photoconductor limit.",
          "type": "integer"
        },
        "CyanPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the cyan photoconductor limit.",
          "type": "integer"
        },
        "MagentaPhotoLimit": {
          "format": "int32",
          "description": "Gets or sets the magenta photoconductor limit.",
          "type": "integer"
        },
        "MaintenanceKitLimit": {
          "format": "int32",
          "description": "Gets or sets the MainteinanceKit limit.",
          "type": "integer"
        },
        "MaintenanceKits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertLimitMaintenanceKitDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DeleteRequest": {
      "description": "Represents the generic request for deleting an object by id",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DeleteRequest[KeyValue]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToDelete"
      ],
      "type": "object",
      "properties": {
        "ObjectToDelete": {
          "$ref": "#/definitions/KeyValue",
          "description": "Gets or sets the object to delete."
        }
      }
    },
    "KeyValue": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "GetTabularTablesRequest": {
      "description": "Get Analytics tabular tables request",
      "required": [
        "IdDealer",
        "IdCustomer",
        "UseDealerHierarchy"
      ],
      "type": "object",
      "properties": {
        "IdDealer": {
          "description": "The Dealer id.",
          "type": "string"
        },
        "IdCustomer": {
          "description": "The Customer id.",
          "type": "string"
        },
        "UseDealerHierarchy": {
          "description": "Use Dealer Hierarchy",
          "type": "boolean"
        }
      }
    },
    "ListResultResponse[TabularTableDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularTableDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TabularTableDto": {
      "description": "Tabular Table",
      "type": "object",
      "properties": {
        "ObjectId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "IsHidden": {
          "type": "boolean"
        },
        "Description": {
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularFieldDto"
          }
        }
      }
    },
    "TabularFieldDto": {
      "description": "Tabular Field",
      "type": "object",
      "properties": {
        "ObjectId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "OriginalDisplayName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "CompleteFieldName": {
          "type": "string"
        },
        "DataType": {
          "enum": [
            "Undefined",
            "Automatic",
            "String",
            "Int64",
            "Double",
            "DateTime",
            "Decimal",
            "Boolean",
            "Binary",
            "Unknown",
            "Variant"
          ],
          "type": "string"
        },
        "FormatString": {
          "type": "string"
        },
        "NextValue": {
          "$ref": "#/definitions/Object"
        },
        "Filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularFieldFilterDto"
          }
        },
        "IsExportHidden": {
          "type": "boolean"
        },
        "ExtractionOrder": {
          "format": "int32",
          "type": "integer"
        },
        "FieldsType": {
          "enum": [
            "None",
            "StandardColumn",
            "ComputedColumn",
            "Measure"
          ],
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TabularFieldFilterDto": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/definitions/Object"
        },
        "FromValue": {
          "$ref": "#/definitions/Object"
        },
        "ToValue": {
          "$ref": "#/definitions/Object"
        },
        "StringContainsValue": {
          "type": "boolean"
        }
      }
    },
    "GetAvailableValuesForFieldRequest": {
      "description": "Get available values for field request",
      "required": [
        "IdDealer",
        "IdCustomer",
        "TabularTable"
      ],
      "type": "object",
      "properties": {
        "IdDealer": {
          "description": "The Dealer Id.",
          "type": "string"
        },
        "IdCustomer": {
          "description": "The Customer Id.",
          "type": "string"
        },
        "TabularTable": {
          "$ref": "#/definitions/TabularTableDto",
          "description": "Gets or sets the export filters and fields."
        },
        "UseDealerHierarchy": {
          "description": "True means that the report will show dealer's hierarchy data",
          "type": "boolean"
        }
      }
    },
    "ListResultResponse[String]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetAnalyticsResultRequest": {
      "description": "Get Analytics result request",
      "required": [
        "IdDealer",
        "IdCustomer",
        "Id",
        "TabularTables"
      ],
      "type": "object",
      "properties": {
        "IdDealer": {
          "description": "The Dealer Id.",
          "type": "string"
        },
        "IdCustomer": {
          "description": "The Customer Id.",
          "type": "string"
        },
        "Id": {
          "description": "If set, it is the Id of a saved custom report.",
          "type": "string"
        },
        "TabularTables": {
          "description": "Gets or sets the export filters and fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularTableDto"
          }
        },
        "ReportFormat": {
          "description": "Gets or sets the export format (Excel, CSV, ...)",
          "enum": [
            "Excel",
            "CSV"
          ],
          "type": "string"
        },
        "UseDealerHierarchy": {
          "description": "True means that the report will show dealer's hierarchy data",
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[TabularResultDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/TabularResultDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TabularResultDto": {
      "description": "Represents the result of a custom report",
      "type": "object",
      "properties": {
        "JsonResult": {
          "description": "The data result as a JSON string",
          "type": "string"
        },
        "Items": {
          "description": "The data result as a list of items",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Object"
          }
        },
        "LastRowFetched": {
          "description": "Field values of the last row fetched",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularTableDto"
          }
        },
        "IsLastChunk": {
          "description": "True if the result is the last chunk of data",
          "type": "boolean"
        }
      }
    },
    "GetAnalyticsReportResultRequest": {
      "description": "Get Analytics Report result request",
      "required": [
        "IdReport"
      ],
      "type": "object",
      "properties": {
        "IdReport": {
          "format": "int32",
          "description": "The ID of a saved custom report.",
          "type": "integer"
        }
      }
    },
    "BaseHttpResponseMessage": {
      "description": "Represents the base class for all HttpResponseMessage responses",
      "type": "object",
      "properties": {
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetAnalyticsReportFileResultRequest": {
      "description": "Get Analytics Report file result request",
      "required": [
        "IdReport",
        "ReportFormat"
      ],
      "type": "object",
      "properties": {
        "IdReport": {
          "format": "int32",
          "description": "The ID of a saved custom report.",
          "type": "integer"
        },
        "ReportFormat": {
          "description": "The export format of the result (Excel, CSV)",
          "type": "string"
        }
      }
    },
    "CreateAnalyticsReportRequest": {
      "description": "Creates or updates request for an Analytics Report",
      "required": [
        "IdDealer",
        "IdCustomer",
        "ReportName",
        "TabularTables",
        "UseDealerHierarchy",
        "IdAccountOnBehalfOf"
      ],
      "type": "object",
      "properties": {
        "IdDealer": {
          "description": "The Dealer Id.",
          "type": "string"
        },
        "IdCustomer": {
          "description": "The Customer id.",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "Report Id",
          "type": "integer"
        },
        "ReportName": {
          "description": "Gets or sets the ReportName",
          "type": "string"
        },
        "TabularTables": {
          "description": "Gets or sets the TabularTables",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularTable"
          }
        },
        "UseDealerHierarchy": {
          "description": "True means that the report will show dealer's hierarchy data",
          "type": "boolean"
        },
        "IdAccountOnBehalfOf": {
          "description": "If set, it is the account on behalf of which the report is being created",
          "type": "string"
        }
      }
    },
    "TabularTable": {
      "type": "object",
      "properties": {
        "ObjectId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        },
        "Fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularTableField"
          }
        }
      }
    },
    "TabularTableField": {
      "type": "object",
      "properties": {
        "ObjectId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "OriginalDisplayName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "DataType": {
          "enum": [
            "Undefined",
            "Automatic",
            "String",
            "Int64",
            "Double",
            "DateTime",
            "Decimal",
            "Boolean",
            "Binary",
            "Unknown",
            "Variant"
          ],
          "type": "string"
        },
        "FormatString": {
          "type": "string"
        },
        "IsExportHidden": {
          "type": "boolean"
        },
        "Filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularFieldFilter"
          }
        },
        "ExtractionOrder": {
          "format": "int32",
          "type": "integer"
        },
        "NextValue": {
          "$ref": "#/definitions/Object"
        },
        "Description": {
          "type": "string"
        },
        "FieldsType": {
          "enum": [
            "None",
            "StandardColumn",
            "ComputedColumn",
            "Measure"
          ],
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "TabularFieldFilter": {
      "type": "object",
      "properties": {
        "Value": {
          "$ref": "#/definitions/Object"
        },
        "FromValue": {
          "$ref": "#/definitions/Object"
        },
        "ToValue": {
          "$ref": "#/definitions/Object"
        },
        "StringContainsValue": {
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[AnalyticCustomReportDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/AnalyticCustomReportDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AnalyticCustomReportDto": {
      "description": "AnalyticCustomReport",
      "type": "object",
      "properties": {
        "ReportName": {
          "description": "Report name",
          "type": "string"
        },
        "UseDealerHierarchy": {
          "description": "True means that dealer's and all subdealers data in the hierarchy will be extracted",
          "type": "boolean"
        },
        "TabularTables": {
          "description": "Tables and Fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TabularTableDto"
          }
        },
        "IsSystemReport": {
          "description": "True means it is a system report",
          "type": "boolean"
        },
        "IdAccount": {
          "description": "The ID of the account",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateAnalyticReportSubscriptionRequest": {
      "description": "Represents the request for creating or updating an Export Schedule",
      "required": [
        "DealerCode",
        "CustomReport",
        "ExportSchedule",
        "FileFormat",
        "IdDealerNotification"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the Code of the Dealer that the Export belongs to",
          "type": "string"
        },
        "IdCustomer": {
          "description": "Gets or sets the Code of the Custoemr that the Export belongs to",
          "type": "string"
        },
        "CustomReport": {
          "$ref": "#/definitions/ExportDto",
          "description": "Gets or sets the Custom Report."
        },
        "ExportSchedule": {
          "$ref": "#/definitions/ExportScheduleDto",
          "description": "Gets or sets the Export Schedule to create or update."
        },
        "FileFormat": {
          "description": "Gets or sets the file format.",
          "enum": [
            "Excel",
            "CSV"
          ],
          "type": "string"
        },
        "IdDealerNotification": {
          "description": "Gets or sets the IdDealerNotification.",
          "type": "string"
        }
      }
    },
    "ExportDto": {
      "description": "Export Procedure",
      "type": "object",
      "properties": {
        "ReportType": {
          "description": "The Report type (Standard Export, Self Service)",
          "enum": [
            "ExcelStandard",
            "AnalyticsCustom"
          ],
          "type": "string"
        },
        "ReportFormat": {
          "description": "The Report format (Excel, CSV)",
          "enum": [
            "Excel",
            "CSV"
          ],
          "type": "string"
        },
        "Name": {
          "description": "The Export Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Abstract": {
          "description": "Abstract",
          "type": "string"
        },
        "Columns": {
          "description": "The available Fields in the result",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportColumnDto"
          }
        },
        "Filters": {
          "description": "Filters to filter the result",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportFilterDto"
          }
        },
        "Schedule": {
          "$ref": "#/definitions/ExportScheduleDto",
          "description": "Schedule for the export"
        },
        "IdDealerNotification": {
          "description": "Template for the export",
          "type": "string"
        },
        "IsSystemReport": {
          "description": "True means system report for admins",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ExportScheduleDto": {
      "description": "The schedule information of the export",
      "required": [
        "Email"
      ],
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "True means that a Subscription is set.\r\n            False means that no Subscription is set.",
          "type": "boolean"
        },
        "Email": {
          "description": "Recipients of the export via email",
          "pattern": "^(([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}){1,25})+([;.](([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}){1,25})+)*$",
          "type": "string"
        },
        "OptionRecurrence": {
          "description": "Recurrence Options",
          "enum": [
            "WeeklyRecurrence",
            "MonthlyDayOfWeekRecurrence",
            "MonthlyRecurrence",
            "BillBookRecurrence"
          ],
          "type": "string"
        },
        "OptionWeeklyRecurrenceMonday": {
          "description": "Monday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceTuesday": {
          "description": "Tuesday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceWednesday": {
          "description": "Wednesday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceThursday": {
          "description": "Thursday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceFriday": {
          "description": "Friday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceSaturday": {
          "description": "Saturday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceSunday": {
          "description": "Sunday recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceJanuary": {
          "description": "January recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceFebruary": {
          "description": "February recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceMarch": {
          "description": "March recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceApril": {
          "description": "April recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceMay": {
          "description": "May recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceJune": {
          "description": "June recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceJuly": {
          "description": "July recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceAugust": {
          "description": "August recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceSeptember": {
          "description": "September recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceOctober": {
          "description": "October recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceNovember": {
          "description": "November recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDecember": {
          "description": "December recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDays": {
          "description": "Monthly, Day Of Week Recurrence",
          "enum": [
            "WhichWeek",
            "DaysOfWeek",
            "LastDayOfMonth"
          ],
          "type": "string"
        },
        "WeekNumber": {
          "description": "Week number",
          "enum": [
            "FirstWeek",
            "SecondWeek",
            "ThirdWeek",
            "FourthWeek",
            "LastWeek"
          ],
          "type": "string"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysMonday": {
          "description": "Monthly on Monday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysTuesday": {
          "description": "Monthly on Tuesday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysWednesday": {
          "description": "Monthly on Wednesday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysThursday": {
          "description": "Monthly on Thursday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysFriday": {
          "description": "Monthly on Fruday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysSaturday": {
          "description": "Monthly on Saturday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysSunday": {
          "description": "Monthly on Sunday",
          "type": "boolean"
        },
        "Hour": {
          "format": "int32",
          "description": "Hour when the Export will run",
          "type": "integer"
        },
        "Timezone": {
          "type": "string"
        },
        "MonthlyDayOfWeekDays": {
          "format": "int32",
          "description": "Monthly Day Of Week, number of the day (1-31)",
          "maximum": 31,
          "minimum": 1,
          "type": "integer"
        },
        "BillBooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "BillBook": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ExportColumnDto": {
      "description": "Column in the result",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Id",
          "type": "integer"
        },
        "IsSelected": {
          "description": "True if the columns is selected",
          "type": "boolean"
        },
        "Name": {
          "description": "The column name",
          "type": "string"
        },
        "Description": {
          "description": "The column description",
          "type": "string"
        },
        "OrdinalPosition": {
          "format": "int32",
          "description": "The column ordinal position",
          "type": "integer"
        },
        "Category": {
          "description": "The column category",
          "type": "string"
        },
        "CategoryOrdinalPosition": {
          "format": "int32",
          "description": "The column category ordinal position",
          "type": "integer"
        },
        "Language": {
          "description": "The language used for the column",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "IsObsolete": {
          "description": "Internal field for the obsoled export columns",
          "type": "boolean"
        }
      }
    },
    "ExportFilterDto": {
      "description": "Filter",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Id of the filter",
          "type": "integer"
        },
        "Name": {
          "description": "Filter name",
          "type": "string"
        },
        "FieldType": {
          "description": "Filter type (string, number, date, ...)",
          "type": "string"
        },
        "Description": {
          "description": "Filter description",
          "type": "string"
        },
        "Value": {
          "description": "Filter value",
          "type": "string"
        },
        "StringValue": {
          "description": "Filter value as string",
          "type": "string"
        },
        "MultiValue": {
          "description": "Filter values in case of IsMultivalue",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair[String,String]"
          }
        },
        "IsNullable": {
          "description": "True if the filter is not mandatory",
          "type": "boolean"
        },
        "IsMultivalue": {
          "description": "True if the filter allows multi values",
          "type": "boolean"
        },
        "DomainValues": {
          "description": "Filter available values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair[String,String]"
          }
        }
      }
    },
    "KeyValuePair[String,String]": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "readOnly": true
        },
        "Value": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GetByDealerCodePagedRequest": {
      "description": "Represents a request to retrieve an object by code",
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ApiClientDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiClientDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ApiClientDto": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "AppId": {
          "type": "string"
        },
        "AppSecret": {
          "type": "string"
        },
        "ApplicationType": {
          "enum": [
            "Web",
            "Mobile",
            "Client"
          ],
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "RefreshTokenLifeTime": {
          "format": "int32",
          "type": "integer"
        },
        "AllowedOrigin": {
          "type": "string"
        },
        "DeveloperEmail": {
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ApiClientDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ApiClientDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[ApiClientUpdateRequest]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/ApiClientUpdateRequest",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "ApiClientUpdateRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "RefreshTokenLifeTime": {
          "format": "int32",
          "description": "Gets or sets the refresh token life time.",
          "type": "integer"
        },
        "AllowedOrigin": {
          "description": "Gets or sets the allowed origin.",
          "type": "string"
        },
        "DeveloperEmail": {
          "description": "Gets or sets the developer email.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        }
      }
    },
    "CreateRequest[ApiClientCreateRequest]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/ApiClientCreateRequest",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "ApiClientCreateRequest": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "RefreshTokenLifeTime": {
          "format": "int32",
          "description": "Gets or sets the refresh token life time.",
          "type": "integer"
        },
        "AllowedOrigin": {
          "description": "Gets or sets the allowed origin.",
          "type": "string"
        },
        "DeveloperEmail": {
          "description": "Gets or sets the developer email.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[AccountApiDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountApiDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AccountApiDto": {
      "description": "Represent an api account",
      "type": "object",
      "properties": {
        "Nominative": {
          "description": "Gets or sets the nominative.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the email.",
          "type": "string"
        },
        "Role": {
          "description": "Gets or sets the role.",
          "type": "string"
        },
        "Language": {
          "description": "Gets or sets the language.",
          "type": "string"
        },
        "IsActive": {
          "description": "Gets or sets is an account is active or not",
          "type": "boolean"
        },
        "UseDealerHierarchy": {
          "description": "Gets or sets a value indicating whether [use dealer hierarchy].",
          "type": "boolean"
        },
        "CanManageSameRole": {
          "description": "Gets or sets a value indicating whether this instance can manage same role.",
          "type": "boolean"
        },
        "CanAutologin": {
          "description": "Gets or sets a value indicating whether this instance can autologin.",
          "type": "boolean"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[AccountApiDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/AccountApiDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[ApiClientAccountUpdateRequest]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/ApiClientAccountUpdateRequest",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "ApiClientAccountUpdateRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the Username.",
          "type": "string"
        },
        "Username": {
          "description": "Gets or sets the Username.",
          "type": "string"
        },
        "Nominative": {
          "description": "Gets or sets the Nominative.",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the Password.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the Email.",
          "type": "string"
        },
        "Language": {
          "description": "Gets or sets the Language.",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "CurrentDealerCode": {
          "description": "Gets or sets the currend dealer code.",
          "type": "string"
        },
        "UseDealerHierarchy": {
          "description": "Gets or sets a value indicating whether [use dealer hierarchy].",
          "type": "boolean"
        },
        "CanManageSameRole": {
          "type": "boolean"
        },
        "CanAutologin": {
          "type": "boolean"
        }
      }
    },
    "CreateRequest[ApiClientAccountCreateRequest]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/ApiClientAccountCreateRequest",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "ApiClientAccountCreateRequest": {
      "type": "object",
      "properties": {
        "Username": {
          "description": "Gets or sets the Username.",
          "type": "string"
        },
        "Nominative": {
          "description": "Gets or sets the Nominative.",
          "type": "string"
        },
        "Password": {
          "description": "Gets or sets the Password.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the Email.",
          "type": "string"
        },
        "Language": {
          "description": "Gets or sets the Language.",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "CurrentDealerCode": {
          "description": "Gets or sets the currend dealer code.",
          "type": "string"
        },
        "UseDealerHierarchy": {
          "description": "Gets or sets a value indicating whether [use dealer hierarchy].",
          "type": "boolean"
        },
        "CanManageSameRole": {
          "type": "boolean"
        },
        "CanAutologin": {
          "type": "boolean"
        }
      }
    },
    "GetChallengeUrlRedirectRequest": {
      "required": [
        "Name"
      ],
      "type": "object",
      "properties": {
        "ReturnUrl": {
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[AzureADDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/AzureADDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AzureADDto": {
      "description": "Represent a n okta domain",
      "type": "object",
      "properties": {
        "IdDealer": {
          "description": "Sets the dealer identifier",
          "type": "string"
        },
        "IdCustomer": {
          "description": "Sets the customer identifier",
          "type": "string"
        },
        "RolesMatch": {
          "description": "Sets the roles match",
          "type": "string"
        },
        "AllowCreateUsers": {
          "description": "If true, the user can be created automatically with login from azure",
          "type": "boolean"
        },
        "ClientId": {
          "description": "Sets the client id for azure openid",
          "type": "string"
        },
        "ClientSecret": {
          "description": "Sets the client secret for azure openid",
          "type": "string"
        },
        "Tenant": {
          "description": "Sets the tenant of azure ad",
          "type": "string"
        },
        "CompanyDomain": {
          "description": "Sets the company domain (es. contoso.com)",
          "type": "string"
        },
        "IsValidated": {
          "type": "boolean"
        },
        "RedirectUri": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateRequest[AzureADDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/AzureADDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[AzureADDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/AzureADDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetContractsRequest": {
      "description": "Get Contracts request parameters",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "SupplierOrRecipientCode": {
          "description": "Supplier or Recipient Code",
          "type": "string"
        },
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "HasPlannedServices": {
          "description": "Contracts with all Services in a Billing Plan",
          "type": "boolean"
        },
        "HasDistributor": {
          "description": "Contract with a Distributor",
          "type": "boolean"
        },
        "HasSuperDealer": {
          "description": "Contract with a SuperDealer",
          "type": "boolean"
        },
        "IsBillable": {
          "description": "Contract with a billable billing service",
          "type": "boolean"
        },
        "BillableServiceCode": {
          "description": "Contract with Billable Service\r\n            null = any billable services",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ContractListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ContractListDto": {
      "description": "Dealer to dealer Contract",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "True if the Contract is active, that is it will produce invoices",
          "type": "boolean"
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Date of contract start",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Date of contract end",
          "type": "string"
        },
        "IdSupplier": {
          "format": "int32",
          "description": "ID of the dealer supplier",
          "type": "integer"
        },
        "SupplierCode": {
          "description": "Code of the dealer supplier",
          "type": "string"
        },
        "SupplierDescription": {
          "description": "Description of the dealer supplier",
          "type": "string"
        },
        "IdDistributor": {
          "format": "int32",
          "description": "Id of the dealer distributor",
          "type": "integer"
        },
        "DistributorCode": {
          "description": "Code of the dealer distributor",
          "type": "string"
        },
        "DistributorDescription": {
          "description": "Description of the dealer distributor",
          "type": "string"
        },
        "IdSuperDealer": {
          "format": "int32",
          "description": "Id of the dealer super dealer",
          "type": "integer"
        },
        "SuperDealerCode": {
          "description": "Code of the dealer super dealer",
          "type": "string"
        },
        "SuperDealerDescription": {
          "description": "Description of the dealer super dealer",
          "type": "string"
        },
        "DealerCodes": {
          "description": "Dealers codes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Dealers": {
          "description": "Dealers descriptions",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Regions": {
          "description": "Dealers Regions",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Note": {
          "description": "Contract notes",
          "type": "string"
        },
        "BillingDriverIds": {
          "description": "IDs of the billing plans where the contract is included",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ServiceCodes": {
          "description": "Codes of the services included in the contract",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NumberOfDevices": {
          "format": "int32",
          "description": "The number of devices in the contract",
          "type": "integer"
        },
        "HasPlannedServices": {
          "description": "True means that all the services of the contract have a billing plan",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ContractDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ContractDto": {
      "description": "Billing Contract",
      "type": "object",
      "properties": {
        "ValidFrom": {
          "format": "date-time",
          "description": "Contract is valid from",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Contract is valid to",
          "type": "string"
        },
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "HasSubscriberDelegation": {
          "description": "True means that the Subscriber at first level (Distributor or SuperDealer)\r\n            has a delegation for the ownership of the contract,\r\n            thus allowing any modification on behalf of the Supplier.",
          "type": "boolean"
        },
        "Note": {
          "description": "Note",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "External Identifier",
          "type": "string"
        },
        "Supplier": {
          "$ref": "#/definitions/DealerDto",
          "description": "Dealer supplier"
        },
        "Distributor": {
          "$ref": "#/definitions/DealerDto",
          "description": "Dealer distributor, if any"
        },
        "SuperDealer": {
          "$ref": "#/definitions/DealerDto",
          "description": "Dealer superdealer, if any"
        },
        "Dealers": {
          "description": "Dealer(s), for B2B contracts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerDto"
          }
        },
        "Customers": {
          "description": "Customer(s), for B2C contracts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerDto"
          }
        },
        "SalesAgent": {
          "$ref": "#/definitions/AccountDto",
          "description": "Sales Agent"
        },
        "PurchaseOrder": {
          "description": "Purchase Order",
          "type": "string"
        },
        "ContractBillableServices": {
          "description": "Billable services",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractBillableServiceDto"
          }
        },
        "HasAnyBillingDriver": {
          "description": "True if at least one ContractBillableService has a Billing Driver",
          "type": "boolean"
        },
        "CustomFieldValues": {
          "description": "Gets or sets the custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "DealerContractDocuments": {
          "description": "The list of dealers associated to this contract with documents",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerContractDocumentsDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DealerDto": {
      "type": "object",
      "properties": {
        "CustomFieldValues": {
          "description": "Gets or sets the custom field values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "AlternativeAssetDescription": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Telephone": {
          "description": "Gets or sets the telephone",
          "type": "string"
        },
        "Address": {
          "description": "Gets or sets the address",
          "type": "string"
        },
        "Vat": {
          "description": "Gets or sets the vat number",
          "type": "string"
        },
        "Abi": {
          "description": "Abi bank coordinate",
          "type": "string"
        },
        "Cab": {
          "description": "Cab bank coordinate",
          "type": "string"
        },
        "ZipCode": {
          "description": "Gets or sets the zipcode",
          "type": "string"
        },
        "Province": {
          "description": "Gets or sets the province",
          "type": "string"
        },
        "City": {
          "description": "Gets or sets the city",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        },
        "CountryName": {
          "description": "Gets or sets the name of the country.",
          "type": "string"
        },
        "CountryIsEu": {
          "description": "Gets or sets a value indicating whether [country is eu].",
          "type": "boolean"
        },
        "Currency": {
          "description": "Gets or sets the currency",
          "type": "string"
        },
        "CurrencyDescription": {
          "description": "Gets or sets the currency description.",
          "type": "string"
        },
        "Token": {
          "description": "Gets or sets the token",
          "type": "string"
        },
        "CodeEncrypted": {
          "description": "Gets or sets the codeEncrypted",
          "type": "string"
        },
        "AccountingNominative": {
          "description": "Gets or sets the Accounting nominative",
          "type": "string"
        },
        "AccountingGsm": {
          "description": "Gets or sets the Accounting gsm",
          "type": "string"
        },
        "AccountingEmail": {
          "description": "Gets or sets the accounting email",
          "type": "string"
        },
        "LogoUrl": {
          "description": "Gets or sets the LogoUrl",
          "type": "string"
        },
        "Mailaddress": {
          "description": "Gets or sets mail address",
          "type": "string"
        },
        "ShortLanguage": {
          "description": "Gets or sets the language",
          "type": "string"
        },
        "BusinessNominative": {
          "description": "Gets or sets the business nominative",
          "type": "string"
        },
        "BusinessGsm": {
          "description": "Gets or sets the business gsm",
          "type": "string"
        },
        "BusinessEmail": {
          "description": "Gets or sets the business email",
          "type": "string"
        },
        "TimeZone": {
          "description": "The dealer timezone",
          "type": "string"
        },
        "TimeZoneIana": {
          "description": "The dealer timezone in Iana format",
          "type": "string"
        },
        "TechnicalNominative": {
          "description": "Gets or sets the technical nominative",
          "type": "string"
        },
        "TechnicalGsm": {
          "description": "Gets or sets the technical sgm",
          "type": "string"
        },
        "TechnicalEmail": {
          "description": "Gets or sets the technical email",
          "type": "string"
        },
        "EnableCustomerDefaultProjectSettings": {
          "description": "Gets or sets the Enable customer default project setting",
          "type": "boolean"
        },
        "SCEnableSubscription": {
          "description": "Enable project subscription",
          "type": "boolean"
        },
        "EnableEmailExplorerInstallationToCustomer": {
          "description": "Enable eXplorer email invitation to customer",
          "type": "boolean"
        },
        "IsEnableJam": {
          "description": "Enable SDS",
          "type": "boolean"
        },
        "TrialDemoExpireAt": {
          "format": "date-time",
          "description": "Trial demo expiration",
          "type": "string"
        },
        "EnableExplorerCleanup": {
          "description": "Enable eXplorer cleanup",
          "type": "boolean"
        },
        "ExplorerCleanupDayLimit": {
          "format": "int32",
          "description": "Enable eXplorer cleanup day limit",
          "type": "integer"
        },
        "SDICode": {
          "description": "Electronic Interchange Code",
          "type": "string"
        },
        "SDIPEC": {
          "description": "Electronic Interchange Registered Email",
          "type": "string"
        },
        "IsGdrpAccepted": {
          "description": "Gets or sets a value indicating whether this instance is GDRP accepted.",
          "type": "boolean"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CustomerDto": {
      "description": "Represent a customer",
      "type": "object",
      "properties": {
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ContractExpires": {
          "format": "date-time",
          "description": "Gets or sets the contract expires.",
          "type": "string"
        },
        "Telephone": {
          "description": "Gets or sets the telephone.",
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "ZipCode": {
          "type": "string"
        },
        "Province": {
          "type": "string"
        },
        "MonthlyVolumeMono": {
          "format": "int32",
          "description": "Gets or sets the monthly volume mono.",
          "type": "integer"
        },
        "MonthlyVolumeColor": {
          "format": "int32",
          "description": "Gets or sets the color of the monthly volume.",
          "type": "integer"
        },
        "HasDca4": {
          "description": "Gets or sets a value indicating whether this instance has dca4.",
          "type": "boolean"
        },
        "HasDca4MessageMode": {
          "description": "Gets or sets a value indicating whether this instance has dca4 message mode.",
          "type": "boolean"
        },
        "EnableMassiveShipping": {
          "description": "Gets or sets a value indicating whether [enable massive shipping].",
          "type": "boolean"
        },
        "MassiveShippingSendNotification": {
          "description": "Gets or sets a value indicating whether [massive shipping send notification].",
          "type": "boolean"
        },
        "MassiveShippingSendLogistic": {
          "description": "Gets or sets a value indicating whether [massive shipping send logistic].",
          "type": "boolean"
        },
        "VatNumber": {
          "description": "Gets or sets the vat number.",
          "type": "string"
        },
        "FiscalCode": {
          "description": "Gets or sets the Fiscal Code.",
          "type": "string"
        },
        "Note": {
          "description": "Gets or sets the note.",
          "type": "string"
        },
        "Creation": {
          "format": "date-time",
          "description": "Gets or sets the creation.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the email.",
          "type": "string"
        },
        "Nominative": {
          "description": "Gets or sets the nominative.",
          "type": "string"
        },
        "TimeZone": {
          "description": "Gets or sets the time zone.",
          "type": "string"
        },
        "ShortLanguage": {
          "description": "Gets or sets the short language.",
          "type": "string"
        },
        "NoteForHomepage": {
          "description": "Gets or sets the note for homepage.",
          "type": "string"
        },
        "CustomFieldValues": {
          "description": "Gets or sets the custom field values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "Dealer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "Gets or sets the dealer."
        },
        "TimeZoneIana": {
          "description": "Gets or sets the time zone iana.",
          "type": "string"
        },
        "JamEnabled": {
          "description": "Gets or sets the jam enabled.",
          "type": "boolean"
        },
        "JamIsEu": {
          "type": "boolean"
        },
        "DealerJamEnabled": {
          "description": "Gets or sets the dealer jam enabled.",
          "type": "boolean"
        },
        "PrintReleafId": {
          "description": "Gets or sets the print releaf identifier.",
          "type": "string"
        },
        "IsPrintReleafEnable": {
          "description": "Gets or sets a value indicating whether this instance is print releaf enable.",
          "type": "boolean"
        },
        "IsPaperCutEnable": {
          "description": "Gets or sets a value indicating whether this instance is paper cut enable.",
          "type": "boolean"
        },
        "IsSharpFSSEnable": {
          "description": "Gets or sets a value indicating whether this instance is paper cut enable.",
          "type": "boolean"
        },
        "EmailExplorerInstallationSentAt": {
          "format": "date-time",
          "description": "Gets or sets the email explorer installation sent at.",
          "type": "string"
        },
        "SdsCustomer": {
          "$ref": "#/definitions/SdsCustomerDto",
          "description": "Get if a customer has SDS enabled"
        },
        "CurrencyId": {
          "description": "Gets or sets the currency identifier.",
          "type": "string"
        },
        "CurrencySymbol": {
          "description": "Gets or sets the currency symbol.",
          "type": "string"
        },
        "CurrencyDescription": {
          "description": "Gets or sets the currency description.",
          "type": "string"
        },
        "LogisticMails": {
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        },
        "CountryName": {
          "description": "Gets or sets the name of the country.",
          "type": "string"
        },
        "CountryIsEu": {
          "description": "Gets or sets a value indicating whether [country is eu].",
          "type": "boolean"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ContractBillableServiceDto": {
      "description": "Contract Billable Service Dto",
      "type": "object",
      "properties": {
        "BillableService": {
          "$ref": "#/definitions/BillableServiceDto",
          "description": "Billable Service"
        },
        "Contract": {
          "$ref": "#/definitions/ContractDto",
          "description": "Contract"
        },
        "Devices": {
          "description": "Devices of a pool, for B2C contracts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceBaseDto"
          }
        },
        "Color": {
          "format": "int32",
          "description": "May specify if the billable service in the contract refers to a specific color (mono/color)",
          "type": "integer"
        },
        "FormatType": {
          "format": "int32",
          "description": "May specify if the billable service in the contract refers to a specific format type (A4/A3)",
          "type": "integer"
        },
        "IdBlended": {
          "description": "May specify if the billable service in the contract refers to a specific bended counter",
          "type": "string"
        },
        "ReferenceTerm": {
          "format": "int32",
          "description": "May specify if the billable service in the contract will be billed in advance of at final of the reference invoice date",
          "type": "integer"
        },
        "BillableServicePrices": {
          "description": "Contract Billable services prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillableServicePriceDto"
          }
        },
        "IdBillingDriver": {
          "format": "int32",
          "description": "If the Contract Billable Service is included in a Billing Driver, it is the ID Billing Driver",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CustomFieldValueDto": {
      "description": "Represent a customer",
      "type": "object",
      "properties": {
        "Label": {
          "description": "Represent a Label",
          "type": "string"
        },
        "Placeholder": {
          "description": "Represent a Label",
          "type": "string"
        },
        "Value": {
          "description": "Represent a Value",
          "type": "string"
        }
      }
    },
    "DealerContractDocumentsDto": {
      "description": "Dealer Contract DocumentsDto",
      "type": "object",
      "properties": {
        "Document": {
          "description": "Document pdf",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsCustomerDto": {
      "type": "object",
      "properties": {
        "IsEnabled": {
          "type": "boolean"
        },
        "EnableRemoteEws": {
          "type": "boolean"
        },
        "CSRFProtection": {
          "type": "boolean"
        },
        "EnableDeviceAnnouncement": {
          "type": "boolean"
        },
        "SdsCredential": {
          "$ref": "#/definitions/SdsCredentialDto"
        },
        "AssessAndRemediateEnabled": {
          "type": "boolean"
        },
        "AssessAndRemediate": {
          "type": "boolean"
        },
        "PrintQualityOperationsDays": {
          "format": "int32",
          "type": "integer"
        },
        "PrintQualityOperationsLastRunUtc": {
          "format": "date-time",
          "type": "string"
        },
        "IdCustomerJamAssessPolicy": {
          "type": "string"
        },
        "CustomerJamId": {
          "format": "int32",
          "type": "integer"
        },
        "IsEu": {
          "type": "boolean",
          "readOnly": true
        },
        "Stack": {
          "enum": [
            "US",
            "EU",
            "STG"
          ],
          "type": "string"
        }
      }
    },
    "BillableServiceDto": {
      "description": "Billable Service Dto",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Code",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "InvoiceHeading": {
          "description": "The text displayed in invoice",
          "type": "string"
        },
        "PricingMap": {
          "description": "The available pricing fields (LowerBand, UpperBand, Price, ...) that define a BillableService",
          "type": "string"
        },
        "IsRenewable": {
          "description": "True if the service is renewable",
          "type": "boolean"
        },
        "ScheduleType": {
          "description": "Determines when the service will be billed",
          "type": "string"
        },
        "PriceDecimals": {
          "format": "int32",
          "description": "The number of decimals to be printed for the Unit Price in invoice",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DeviceBaseDto": {
      "type": "object",
      "properties": {
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "BillableServicePriceDto": {
      "description": "Billable Service Price Dto",
      "type": "object",
      "properties": {
        "BillableServiceCode": {
          "description": "BillableService Code",
          "type": "string"
        },
        "SellingLevel": {
          "description": "SellingLevel (Distributor, SuperDealer, Dealer)",
          "type": "string"
        },
        "LowerBand": {
          "format": "int32",
          "description": "Lower Band",
          "type": "integer"
        },
        "UpperBand": {
          "format": "int32",
          "description": "Upper Band",
          "type": "integer"
        },
        "LowerLimit": {
          "format": "int32",
          "description": "Lower Limit",
          "type": "integer"
        },
        "UpperLimit": {
          "format": "int32",
          "description": "Upper Limit",
          "type": "integer"
        },
        "PriceDistributor": {
          "format": "double",
          "description": "Price at Distributor level",
          "type": "number"
        },
        "PriceSuperDealer": {
          "format": "double",
          "description": "Price at SuperDealer level",
          "type": "number"
        },
        "PriceDealer": {
          "format": "double",
          "description": "Price at Dealer level",
          "type": "number"
        },
        "PriceCustomer": {
          "format": "double",
          "description": "Price at Customer level",
          "type": "number"
        },
        "PriceDiscountDealer": {
          "format": "double",
          "description": "Price Discount in money at dealer Dealer level",
          "type": "number"
        },
        "PriceDiscountDistributor": {
          "format": "double",
          "description": "Price Discount in money at Distributor level",
          "type": "number"
        },
        "PriceDiscountSuperDealer": {
          "format": "double",
          "description": "Price Discount in money at SuperDealer level",
          "type": "number"
        },
        "PriceDiscountPercentageDealer": {
          "format": "double",
          "description": "Price Discount percentage at Dealer level",
          "type": "number"
        },
        "PriceDiscountPercentageDistributor": {
          "format": "double",
          "description": "Price Discount percentage at Distributor level",
          "type": "number"
        },
        "PriceDiscountPercentageSuperDealer": {
          "format": "double",
          "description": "Price Discount percentage at SuperDealer level",
          "type": "number"
        },
        "Code": {
          "description": "Service code",
          "type": "string"
        },
        "Description": {
          "description": "Service description",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Quantity",
          "type": "number"
        },
        "ScheduledDate": {
          "format": "date-time",
          "description": "One shot scheduled date",
          "type": "string"
        },
        "Device": {
          "$ref": "#/definitions/DeviceBaseDto",
          "description": "Device"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsCredentialDto": {
      "type": "object",
      "properties": {
        "UpdatedAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the updated at UTC.",
          "type": "string"
        },
        "IsAdminSet": {
          "description": "Gets or sets a value indicating whether this instance is admin set.",
          "type": "boolean"
        },
        "IsSnmpV1V2Read": {
          "description": "Gets or sets a value indicating whether this instance is SNMP v1 v2 read.",
          "type": "boolean"
        },
        "IsSnmpV1V2ReadWrite": {
          "description": "Gets or sets a value indicating whether this instance is SNMP v1 v2 read write.",
          "type": "boolean"
        },
        "IsSnmpV3": {
          "description": "Gets or sets a value indicating whether this instance is SNMP v3.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomerContractsRequest": {
      "description": "Get Customer Contracts request parameters",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FilterCustomerCode": {
          "description": "Gets or sets the filter customer code.",
          "type": "string"
        },
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "BillableServiceCode": {
          "description": "Contract with Billable Service\r\n            null = any billable services",
          "type": "string"
        },
        "HasPlannedServices": {
          "description": "Contracts with all Services in a Billing Plan",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerContractListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerContractListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerContractListDto": {
      "description": "Customer Contract",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "True if the Contract is active, that is it will produce invoices",
          "type": "boolean"
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Date of contract start",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Date of contract end",
          "type": "string"
        },
        "IdSupplier": {
          "format": "int32",
          "description": "ID of the dealer supplier",
          "type": "integer"
        },
        "SupplierCode": {
          "description": "Code of the dealer supplier",
          "type": "string"
        },
        "IdCustomer": {
          "format": "int32",
          "description": "Customer ID",
          "type": "integer"
        },
        "CustomerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "Note": {
          "description": "Contract notes",
          "type": "string"
        },
        "BillingDriverIds": {
          "description": "IDs of the billing plans where the contract is included",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "ServiceCodes": {
          "description": "Codes of the services included in the contract",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "NumberOfDevices": {
          "format": "int32",
          "description": "The number of devices in the contract",
          "type": "integer"
        },
        "HasPlannedServices": {
          "description": "True means that all the services of the contract have a billing plan",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomersContractsRequest": {
      "description": "Represents a request to retrieve a pagedlist of customers contracts",
      "required": [
        "IssuerDealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "IssuerDealerCode": {
          "description": "Gets or sets the Issuer Dealer Code",
          "type": "string"
        },
        "RecipientCustomerCode": {
          "description": "Gets or sets the Recipient Customer Code",
          "type": "string"
        },
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "FromValidityDate": {
          "format": "date-time",
          "description": "Gets or sets from validity date.",
          "type": "string"
        },
        "ToValidityDate": {
          "format": "date-time",
          "description": "Gets or sets to validity date.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerContractDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerContractDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerContractDto": {
      "description": "Customer Contract",
      "type": "object",
      "properties": {
        "ValidFrom": {
          "format": "date-time",
          "description": "Contract is valid from",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Contract is valid to",
          "type": "string"
        },
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "Note": {
          "description": "Note",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "External Identifier",
          "type": "string"
        },
        "Supplier": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "Dealer supplier"
        },
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "Customer recipient"
        },
        "ContractBillableServices": {
          "description": "Billable services",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerContractBillableServiceDto"
          }
        },
        "HasAnyBillingDriver": {
          "description": "True if at least one ContractBillableService has a Billing Driver",
          "type": "boolean"
        },
        "CustomFieldValues": {
          "description": "Gets or sets the custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CustomerContractBillableServiceDto": {
      "description": "Customer Contract Billable Service",
      "type": "object",
      "properties": {
        "BillableService": {
          "$ref": "#/definitions/CustomerBillableServiceDto",
          "description": "Billable Service"
        },
        "PooledDevices": {
          "description": "Devices of a pool, for customers contracts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceBaseDto"
          }
        },
        "Color": {
          "description": "May specify if the billable service in the contract refers to a specific color (mono/color)",
          "enum": [
            "NotAvailable",
            "Mono",
            "Colored"
          ],
          "type": "string"
        },
        "ReferenceTerm": {
          "format": "int32",
          "description": "May specify if the billable service in the contract will be billed in advance of at final of the reference invoice date",
          "type": "integer"
        },
        "BillableServicePrices": {
          "description": "Contract Billable services prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerBillableServicePriceDto"
          }
        }
      }
    },
    "CustomerBillableServiceDto": {
      "description": "Billable Service",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Code",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        }
      }
    },
    "CustomerBillableServicePriceDto": {
      "description": "Billable Service Price",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Custom Service code\r\n            example ITEMS",
          "type": "string"
        },
        "Description": {
          "description": "Service description",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Quantity",
          "type": "number"
        },
        "Price": {
          "format": "double",
          "description": "Price at Customer level",
          "type": "number"
        },
        "Bundle": {
          "format": "int32",
          "description": "Bundle of pages included for free",
          "type": "integer"
        },
        "Device": {
          "$ref": "#/definitions/DeviceBaseDto",
          "description": "Device"
        }
      }
    },
    "GetBillingDriversRequest": {
      "description": "Get Billing Drivers request parameters",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "IsBilling": {
          "description": "Is Billing",
          "type": "boolean"
        },
        "IsBillingHasProforma": {
          "description": "Is Billing and has Proforma",
          "type": "boolean"
        },
        "IsProforma": {
          "description": "Is Proforma",
          "type": "boolean"
        },
        "HasBillTo": {
          "description": "Has Bill To alternative company",
          "type": "boolean"
        },
        "PaymentType": {
          "description": "Payment Type",
          "enum": [
            "CashOrder",
            "WireTransfer",
            "SepaDirectDebitCore",
            "PayPal",
            "Stripe"
          ],
          "type": "string"
        },
        "PaymentTerm": {
          "description": "Payment Term",
          "enum": [
            "PaymentTerm30E",
            "PaymentTerm30NE",
            "PaymentTerm45E",
            "PaymentTerm45NE",
            "PaymentTerm60E",
            "PaymentTerm60NE",
            "PaymentTerm90E",
            "PaymentTerm90NE",
            "PaymentTerm120E",
            "PaymentTerm120NE",
            "PaymentTerm60E10",
            "PaymentTerm30E10",
            "PaymentTermRF",
            "PaymentTerm90E10",
            "PaymentTerm7NE",
            "PaymentTerm14NE"
          ],
          "type": "string"
        },
        "HasContracts": {
          "description": "Has Contracts",
          "type": "boolean"
        },
        "IssuerOrRecipientCode": {
          "description": "Issuer Or Recipient Code",
          "type": "string"
        },
        "IdIssuer": {
          "description": "Id Issuer",
          "type": "string"
        },
        "IdRecipient": {
          "description": "Id Recipient",
          "type": "string"
        },
        "BillableServiceCode": {
          "description": "Contract with Billable Service\r\n            null = any billable services",
          "type": "string"
        },
        "InvoiceTemplate": {
          "description": "Invoice Template:\r\n            InvoiceDistributor, InvoiceSuperDealer, InvoiceDealer, InvoiceCustomer",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[BillingDriverListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingDriverListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "BillingDriverListDto": {
      "description": "Billing Driver",
      "type": "object",
      "properties": {
        "IsBilling": {
          "description": "True if it will produce only real invoices, False if it will produce only proforma invoices",
          "type": "boolean"
        },
        "HasProforma": {
          "description": "True if the real invoice will also have a proforma",
          "type": "boolean"
        },
        "IsActive": {
          "description": "True if the Billing Driver is active, that is it will produce invoices",
          "type": "boolean"
        },
        "IdIssuer": {
          "format": "int32",
          "description": "The dealer issuer ID",
          "type": "integer"
        },
        "IssuerCode": {
          "description": "The dealer issuer Code",
          "type": "string"
        },
        "IssuerDescription": {
          "description": "The dealer issuer description",
          "type": "string"
        },
        "IdRecipient": {
          "format": "int32",
          "description": "The dealer recipient ID (for B2B invoices)",
          "type": "integer"
        },
        "RecipientCode": {
          "description": "The dealer recipient ID (for B2B invoices)",
          "type": "string"
        },
        "RecipientDescription": {
          "description": "The dealer recipient description (for B2B invoices)",
          "type": "string"
        },
        "IdDistributor": {
          "format": "int32",
          "description": "The dealer distributor ID, if any",
          "type": "integer"
        },
        "DistributorCode": {
          "description": "The dealer distributor code, if any",
          "type": "string"
        },
        "DistributorDescription": {
          "description": "The dealer distributor description, if any",
          "type": "string"
        },
        "IdSuperDealer": {
          "format": "int32",
          "description": "The dealer super dealer ID, if any",
          "type": "integer"
        },
        "SuperDealerCode": {
          "description": "The dealer super dealer code, if any",
          "type": "string"
        },
        "SuperDealerDescription": {
          "description": "The dealer super dealer description, if any",
          "type": "string"
        },
        "DealerCodes": {
          "description": "Dealers codes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Dealers": {
          "description": "Dealers descriptions",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IdBillTo": {
          "format": "int32",
          "description": "The Bill To ID, if any",
          "type": "integer"
        },
        "BillToCode": {
          "description": "The Bill To Code, if any",
          "type": "string"
        },
        "BillToDescription": {
          "description": "The Bill To description, if any",
          "type": "string"
        },
        "DayOfMonth": {
          "format": "int32",
          "description": "The day of month when the invoice will be generated",
          "type": "integer"
        },
        "Months": {
          "description": "The months when the invoice will be generated",
          "type": "string"
        },
        "Hour": {
          "format": "int32",
          "description": "The hour when the invoice will be generated",
          "type": "integer"
        },
        "InvoiceTemplate": {
          "description": "The invoice template",
          "type": "string"
        },
        "InvoiceHeading": {
          "description": "The invoice description",
          "type": "string"
        },
        "PaymentType": {
          "description": "The invoice Payment Type",
          "enum": [
            "CashOrder",
            "WireTransfer",
            "SepaDirectDebitCore",
            "PayPal",
            "Stripe"
          ],
          "type": "string"
        },
        "PaymentTerm": {
          "description": "The invoice Payment Term",
          "enum": [
            "PaymentTerm30E",
            "PaymentTerm30NE",
            "PaymentTerm45E",
            "PaymentTerm45NE",
            "PaymentTerm60E",
            "PaymentTerm60NE",
            "PaymentTerm90E",
            "PaymentTerm90NE",
            "PaymentTerm120E",
            "PaymentTerm120NE",
            "PaymentTerm60E10",
            "PaymentTerm30E10",
            "PaymentTermRF",
            "PaymentTerm90E10",
            "PaymentTerm7NE",
            "PaymentTerm14NE"
          ],
          "type": "string"
        },
        "ServiceCodes": {
          "description": "The Billable Services codes list",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ContractIds": {
          "description": "The Contracts Ids ist",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomerBillingDriversRequest": {
      "description": "Get Customer's Billing Drivers request parameters",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "IsBilling": {
          "description": "Is Billing",
          "type": "boolean"
        },
        "IsProforma": {
          "description": "Is Proforma",
          "type": "boolean"
        },
        "IsWireTransfer": {
          "description": "PaymentType is Wire Transfer",
          "type": "boolean"
        },
        "IsCashOrder": {
          "description": "PaymentType is Cash Order",
          "type": "boolean"
        },
        "HasContracts": {
          "description": "Has Contracts",
          "type": "boolean"
        },
        "IdIssuer": {
          "description": "Id Issuer",
          "type": "string"
        },
        "IdRecipientCustomer": {
          "description": "Id Recipient Customer",
          "type": "string"
        },
        "InvoiceTemplate": {
          "description": "Invoice Template:\r\n            InvoiceDistributor, InvoiceSuperDealer, InvoiceDealer, InvoiceCustomer",
          "type": "string"
        },
        "BillableServiceCode": {
          "description": "Contract with Billable Service\r\n            null = any billable services",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerBillingDriverListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerBillingDriverListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerBillingDriverListDto": {
      "description": "Customer Billing Driver",
      "type": "object",
      "properties": {
        "IsBilling": {
          "description": "True if it will produce only real invoices, False if it will produce only proforma invoices",
          "type": "boolean"
        },
        "HasProforma": {
          "description": "True if the real invoice will also have a proforma",
          "type": "boolean"
        },
        "IsActive": {
          "description": "True if the Billing Driver is active, that is it will produce invoices",
          "type": "boolean"
        },
        "IdIssuer": {
          "format": "int32",
          "description": "The dealer issuer ID",
          "type": "integer"
        },
        "IssuerCode": {
          "description": "The dealer issuer Code",
          "type": "string"
        },
        "IdRecipientCustomer": {
          "format": "int32",
          "description": "The customer recipient ID (for B2C invoices)",
          "type": "integer"
        },
        "CustomerCode": {
          "description": "The customer recipient ID (for B2C invoices)",
          "type": "string"
        },
        "DayOfMonth": {
          "format": "int32",
          "description": "The day of month when the invoice will be generated",
          "type": "integer"
        },
        "Months": {
          "description": "The months when the invoice will be generated",
          "type": "string"
        },
        "Hour": {
          "format": "int32",
          "description": "The hour when the invoice will be generated",
          "type": "integer"
        },
        "InvoiceHeading": {
          "description": "The invoice description",
          "type": "string"
        },
        "PaymentType": {
          "description": "The invoice Payment Type",
          "enum": [
            "CashOrder",
            "WireTransfer",
            "SepaDirectDebitCore",
            "PayPal",
            "Stripe"
          ],
          "type": "string"
        },
        "PaymentTerm": {
          "description": "The invoice Payment Term",
          "enum": [
            "PaymentTerm30E",
            "PaymentTerm30NE",
            "PaymentTerm45E",
            "PaymentTerm45NE",
            "PaymentTerm60E",
            "PaymentTerm60NE",
            "PaymentTerm90E",
            "PaymentTerm90NE",
            "PaymentTerm120E",
            "PaymentTerm120NE",
            "PaymentTerm60E10",
            "PaymentTerm30E10",
            "PaymentTermRF",
            "PaymentTerm90E10",
            "PaymentTerm7NE",
            "PaymentTerm14NE"
          ],
          "type": "string"
        },
        "ServiceCodes": {
          "description": "The Billable Services codes list",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ContractIds": {
          "description": "The Contracts Ids ist",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "NumberOfDevices": {
          "format": "int32",
          "description": "Number of devices",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ContractDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ContractDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DocItemDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DocItemDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DocItemDto": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "BodyText": {
          "type": "string"
        },
        "Link": {
          "type": "string"
        },
        "Thumbnail": {
          "type": "string"
        },
        "File": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "Creation": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "FileInfoDto": {
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string"
        },
        "Base64Content": {
          "type": "string"
        },
        "MimeType": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SingleResultResponse[BillingDriverDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/BillingDriverDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "BillingDriverDto": {
      "description": "Billing Driver",
      "type": "object",
      "properties": {
        "IsBilling": {
          "description": "True if it will produce only real invoices, False if it will produce only proforma invoices",
          "type": "boolean"
        },
        "HasProforma": {
          "description": "True if the real invoice will also have a proforma",
          "type": "boolean"
        },
        "IsActive": {
          "description": "True if the Billing Driver is active, that is it will produce invoices",
          "type": "boolean"
        },
        "Issuer": {
          "$ref": "#/definitions/DealerDto",
          "description": "The dealer issuer"
        },
        "Recipient": {
          "$ref": "#/definitions/DealerDto",
          "description": "The dealer recipient (for B2B invoices)"
        },
        "RecipientCustomer": {
          "$ref": "#/definitions/CustomerDto",
          "description": "The customer recipient (for B2C invoices)"
        },
        "BillTo": {
          "$ref": "#/definitions/CompanyDto",
          "description": "The alternative Bill To company"
        },
        "InvoiceTemplate": {
          "description": "The invoice template",
          "type": "string"
        },
        "InvoiceMediaTypes": {
          "description": "The invoice media types (pdf, xls, ...)",
          "type": "string"
        },
        "DayOfMonth": {
          "format": "int32",
          "description": "The day of month when the invoice will be generated",
          "type": "integer"
        },
        "Months": {
          "description": "The months when the invoice will be generated",
          "type": "string"
        },
        "Hour": {
          "format": "int32",
          "description": "The hour when the invoice will be generated",
          "type": "integer"
        },
        "Email": {
          "description": "The email where the invoice will be sent",
          "type": "string"
        },
        "EmailProforma": {
          "description": "The email where the proforma will be sent, in addition to dealers account emails",
          "type": "string"
        },
        "IsMailToSend": {
          "description": "True if the invoice will be sent to email",
          "type": "boolean"
        },
        "Subject": {
          "description": "The email subject",
          "type": "string"
        },
        "SubjectProforma": {
          "description": "The proforma subject",
          "type": "string"
        },
        "InvoiceHeading": {
          "description": "The invoice description",
          "type": "string"
        },
        "Body": {
          "description": "The invoice email body",
          "type": "string"
        },
        "BodyProforma": {
          "description": "The proforma email body",
          "type": "string"
        },
        "PaymentType": {
          "description": "The invoice Payment Type",
          "enum": [
            "CashOrder",
            "WireTransfer",
            "SepaDirectDebitCore",
            "PayPal",
            "Stripe"
          ],
          "type": "string"
        },
        "PaymentTerm": {
          "description": "The invoice Payment Term",
          "enum": [
            "PaymentTerm30E",
            "PaymentTerm30NE",
            "PaymentTerm45E",
            "PaymentTerm45NE",
            "PaymentTerm60E",
            "PaymentTerm60NE",
            "PaymentTerm90E",
            "PaymentTerm90NE",
            "PaymentTerm120E",
            "PaymentTerm120NE",
            "PaymentTerm60E10",
            "PaymentTerm30E10",
            "PaymentTermRF",
            "PaymentTerm90E10",
            "PaymentTerm7NE",
            "PaymentTerm14NE"
          ],
          "type": "string"
        },
        "FinancialDiscountRate": {
          "format": "double",
          "description": "Financial Discount Rate",
          "type": "number"
        },
        "TaxRateCode": {
          "description": "Tax Rate Code",
          "type": "string"
        },
        "IsDealerTaxRate": {
          "description": "True if the Tax Rate Code refers to a Dealer Tax Rate Code",
          "type": "boolean"
        },
        "TaxRateReason": {
          "description": "Tax Rate Reason",
          "type": "string"
        },
        "TaxRateReasonType": {
          "description": "Tax Rate Reason Type",
          "type": "string"
        },
        "TaxRateReasonTextReference": {
          "description": "Tax Rate Reason Text Reference",
          "type": "string"
        },
        "TaxRateReasonDateReference": {
          "format": "date-time",
          "description": "Tax Rate Reason Date Reference",
          "type": "string"
        },
        "Language": {
          "description": "The invoice language",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "Currency": {
          "$ref": "#/definitions/CurrencyDto",
          "description": "The invoice currency"
        },
        "SalesAgent": {
          "$ref": "#/definitions/AccountDto",
          "description": "The sales agent"
        },
        "IssuerBank": {
          "$ref": "#/definitions/DealerBankAccountDto",
          "description": "The issuer bank account"
        },
        "ContractBillableServices": {
          "description": "The Contract Billable Services list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractBillableServiceDto"
          }
        },
        "CustomFieldValues": {
          "description": "Gets or sets the custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "NumberOfDevices": {
          "format": "int32",
          "description": "Number of devices",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CompanyDto": {
      "description": "Represent a company (customer, supplier)",
      "type": "object",
      "properties": {
        "Dealer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "Gets or sets the parent dealer."
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "VatNumber": {
          "description": "VAT Number",
          "type": "string"
        },
        "FiscalCode": {
          "description": "Fiscal Code",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the email.",
          "type": "string"
        },
        "Address": {
          "description": "Address.",
          "type": "string"
        },
        "City": {
          "description": "City.",
          "type": "string"
        },
        "ZipCode": {
          "description": "Zip Code",
          "type": "string"
        },
        "Province": {
          "description": "Province",
          "type": "string"
        },
        "IBAN": {
          "description": "IBAN",
          "type": "string"
        },
        "SDICode": {
          "description": "Electronic Interchange Code",
          "type": "string"
        },
        "SDIPEC": {
          "description": "Electronic Interchange Registered Email",
          "type": "string"
        },
        "Country": {
          "$ref": "#/definitions/CountryDto",
          "description": "Country"
        },
        "Currency": {
          "$ref": "#/definitions/CurrencyDto",
          "description": "Currency"
        },
        "InvoiceCategories": {
          "description": "Invoice categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceCategoryDto"
          }
        },
        "AlternativeInvoiceCategories": {
          "description": "Alternative Invoice categories",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceCategoryDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CurrencyDto": {
      "description": "Represent an account",
      "type": "object",
      "properties": {
        "OriginalCountry": {
          "description": "Gets or sets the OriginalCountry.",
          "type": "string"
        },
        "CurrencyUnit": {
          "description": "Gets or sets the CurrencyUnit.",
          "type": "string"
        },
        "Symbol": {
          "description": "Gets or sets the Symbol",
          "type": "string"
        },
        "ISOCode": {
          "description": "Gets or sets the ISOCode",
          "type": "string"
        },
        "HtmlCode": {
          "description": "Gets or sets the HtmlCode",
          "type": "string"
        },
        "Description": {
          "description": "Gets or set the description",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DealerBankAccountDto": {
      "type": "object",
      "properties": {
        "Bank": {
          "type": "string"
        },
        "ABI": {
          "type": "string"
        },
        "CAB": {
          "type": "string"
        },
        "CIN": {
          "type": "string"
        },
        "Account": {
          "type": "string"
        },
        "IBAN": {
          "type": "string"
        },
        "BicSwift": {
          "type": "string"
        },
        "BicPayee": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CountryDto": {
      "description": "Represent the Country dto",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "IsEu": {
          "description": "Gets or sets a value indicating whether this instance is eu.",
          "type": "boolean"
        },
        "IsItaly": {
          "description": "Gets a value indicating whether this instance is italy.",
          "type": "boolean"
        },
        "CountryRegion": {
          "$ref": "#/definitions/CountryRegionDto",
          "description": "Get the region of a country."
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "InvoiceCategoryDto": {
      "description": "Invoice Category",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the caterogy",
          "type": "string"
        },
        "Valsoft_GL": {
          "description": "The Valsoft GL",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CountryRegionDto": {
      "description": "Defines the Country Region object",
      "type": "object",
      "properties": {
        "Code": {
          "description": "The region code",
          "type": "string"
        },
        "Description": {
          "description": "The region name",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetInvoicesRequest": {
      "description": "Represents a request to retrieve a pagedlist of invoices",
      "required": [
        "FromIssueDate",
        "ToIssueDate",
        "FromExpiryDate",
        "ToExpiryDate",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FromIssueDate": {
          "format": "date-time",
          "description": "Gets or sets from issue date.",
          "type": "string"
        },
        "ToIssueDate": {
          "format": "date-time",
          "description": "Gets or sets to issue date.",
          "type": "string"
        },
        "FromExpiryDate": {
          "format": "date-time",
          "description": "Gets or sets from expiry date.",
          "type": "string"
        },
        "ToExpiryDate": {
          "format": "date-time",
          "description": "Gets or sets to expiry date.",
          "type": "string"
        },
        "IsBilling": {
          "description": "Gets or sets isBilling",
          "type": "boolean"
        },
        "PaymentType": {
          "description": "Payment Type",
          "enum": [
            "CashOrder",
            "WireTransfer",
            "SepaDirectDebitCore",
            "PayPal",
            "Stripe"
          ],
          "type": "string"
        },
        "PaymentTerm": {
          "description": "Payment Term",
          "enum": [
            "PaymentTerm30E",
            "PaymentTerm30NE",
            "PaymentTerm45E",
            "PaymentTerm45NE",
            "PaymentTerm60E",
            "PaymentTerm60NE",
            "PaymentTerm90E",
            "PaymentTerm90NE",
            "PaymentTerm120E",
            "PaymentTerm120NE",
            "PaymentTerm60E10",
            "PaymentTerm30E10",
            "PaymentTermRF",
            "PaymentTerm90E10",
            "PaymentTerm7NE",
            "PaymentTerm14NE"
          ],
          "type": "string"
        },
        "IsPaymentUnsolved": {
          "description": "Is Payment Unsolved",
          "type": "boolean"
        },
        "IsPaid": {
          "description": "Is Paid",
          "type": "boolean"
        },
        "SdiStatus": {
          "description": "Gets or sets SDI Status filter",
          "type": "string"
        },
        "BillingServiceCode": {
          "description": "Gets or sets BillingServiceCode",
          "type": "string"
        },
        "IssuerCode": {
          "description": "Gets or sets IssuerCode",
          "type": "string"
        },
        "RecipientCode": {
          "description": "Gets or sets RecipientCode",
          "type": "string"
        },
        "IssuerOrRecipientCode": {
          "description": "Gets or sets the Issuer or Recipient Code",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets Status",
          "type": "string"
        },
        "StatusExclusion": {
          "description": "Gets or sets Status Exlusion",
          "type": "string"
        },
        "IsItaly": {
          "description": "Is Italy, true if recipient country is 'IT'",
          "type": "boolean"
        },
        "IdSalesAgent": {
          "description": "Id Sales Agent",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[InvoiceListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "InvoiceListDto": {
      "description": "Represents an Invoice",
      "type": "object",
      "properties": {
        "InvoiceNumber": {
          "description": "Invoice Number",
          "type": "string"
        },
        "BillingServiceCode": {
          "description": "Billing Service Code",
          "type": "string"
        },
        "IdBillingDriver": {
          "format": "int32",
          "description": "Id Billing Driver",
          "type": "integer"
        },
        "IsBilling": {
          "description": "True means a real invoice, false means a Proforma",
          "type": "boolean"
        },
        "IsCredit": {
          "description": "True means credit (money from issuer to recipient)",
          "type": "boolean"
        },
        "IsSDI": {
          "description": "True means that can be managed by SDI",
          "type": "boolean"
        },
        "CanBeManuallySentToSDI": {
          "description": "True if the invoice belongs to Italian Electronic Interchange process and can be manyally sent to SDI",
          "type": "boolean"
        },
        "IsExchangeRatePending": {
          "description": "True if the invoice total in alternative currency is pending due to missing exchange rate",
          "type": "boolean"
        },
        "Status": {
          "description": "Status",
          "type": "string"
        },
        "IssuerCode": {
          "description": "Issuer Code",
          "type": "string"
        },
        "IssuerDescription": {
          "description": "Issuer Description",
          "type": "string"
        },
        "IssuerCountryCode": {
          "description": "Issuer Country Code",
          "type": "string"
        },
        "IssuerCurrencyCode": {
          "description": "Issuer Currency Code",
          "type": "string"
        },
        "RecipientDescription": {
          "description": "Recipient Description",
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "Issue Date",
          "type": "string"
        },
        "ExpiryDate": {
          "format": "date-time",
          "description": "Expiry Date",
          "type": "string"
        },
        "Total": {
          "format": "double",
          "description": "Total",
          "type": "number"
        },
        "CurrencyCode": {
          "description": "Currency Code",
          "type": "string"
        },
        "TotalAlternativeCurrency": {
          "format": "double",
          "description": "Total in alternative currency",
          "type": "number"
        },
        "AlternativeCurrencyCode": {
          "description": "Alternative Currency Code",
          "type": "string"
        },
        "CashOrderDate": {
          "format": "date-time",
          "description": "Tha Date of the bank Cash Order",
          "type": "string"
        },
        "PaymentType": {
          "description": "Payment Type",
          "type": "string"
        },
        "PaymentTerm": {
          "description": "Payment Term",
          "type": "string"
        },
        "IdMediaTypeBilling": {
          "description": "id of the Media Type in case of Billing (generally a pdf file)",
          "type": "string"
        },
        "IdMediaTypeProforma": {
          "description": "id of the Media Type in case of Proforma (generally an excel file)",
          "type": "string"
        },
        "IsPaymentUnsolved": {
          "description": "True if the Payment is explicitally marked as Unsolved",
          "type": "boolean"
        },
        "PaymentReminderDate": {
          "format": "date-time",
          "description": "The date of the reminder of payment, if managed",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "The date of payment, if managed",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "The External Identifier",
          "type": "string"
        },
        "IdSDIActiveInvoice": {
          "format": "int32",
          "description": "Id SDI Active Invoice",
          "type": "integer"
        },
        "IsValid": {
          "description": "True if the invoice has passed the SDI validation",
          "type": "boolean"
        },
        "IsSent": {
          "description": "True if the invoice has been sento to SDI.\r\n            See HasSentReceipt to check if there is a received notification from SDI.",
          "type": "boolean"
        },
        "SDIIdentifier": {
          "description": "The SDI identifier",
          "type": "string"
        },
        "SDIFileName": {
          "description": "The SDI file name",
          "type": "string"
        },
        "HasSentReceipt": {
          "description": "True if the invoice has a sent receipt from SDI",
          "type": "boolean"
        },
        "HasUnsentReceipt": {
          "description": "True if the invoice has a not sent receipt from SDI",
          "type": "boolean"
        },
        "HasRejectReceipt": {
          "description": "True if the invoice has been rejected from SDI",
          "type": "boolean"
        },
        "HasResultReceipt": {
          "description": "True if the invoice has a result notification from SDI",
          "type": "boolean"
        },
        "HasOverdueReceipt": {
          "description": "True if the invoice has received an overdue notification from SDI",
          "type": "boolean"
        },
        "HasUndeliveryReceipt": {
          "description": "True if the invoice has received an undelivery notification from SDI",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDealerInvoicesRequest": {
      "description": "Represents a request to retrieve a pagedlist of invoices",
      "required": [
        "FromIssueDate",
        "ToIssueDate",
        "IssuerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "IsBilling": {
          "description": "Gets or sets isBilling\r\n            True means a real invoice, false means proforma invoices",
          "type": "boolean"
        },
        "FromIssueDate": {
          "format": "date-time",
          "description": "Gets or sets from issue date.",
          "type": "string"
        },
        "ToIssueDate": {
          "format": "date-time",
          "description": "Gets or sets to issue date.",
          "type": "string"
        },
        "BillingServiceCode": {
          "description": "Gets or sets Billing Service Code",
          "type": "string"
        },
        "IssuerCode": {
          "description": "Gets or sets Issuer Code",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets Status",
          "type": "string"
        },
        "StatusExclusion": {
          "description": "Gets or sets Status Exclusion",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerInvoicesListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerInvoicesListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerInvoicesListDto": {
      "description": "Represents a Dealer to Dealer Invoice",
      "type": "object",
      "properties": {
        "BillingServiceCode": {
          "description": "Billing Service Code",
          "type": "string"
        },
        "IdInvoicePlan": {
          "format": "int32",
          "description": "Id Invoice Plan",
          "type": "integer"
        },
        "IsBilling": {
          "description": "True means a real invoice, false means a Proforma",
          "type": "boolean"
        },
        "IsCredit": {
          "description": "True means credit (payment from issuer to recipient)",
          "type": "boolean"
        },
        "Status": {
          "description": "Status",
          "type": "string"
        },
        "IssuerCode": {
          "description": "Issuer Code",
          "type": "string"
        },
        "IssuerDescription": {
          "description": "Issuer Description",
          "type": "string"
        },
        "IssuerExternalIdentifier": {
          "description": "The External Identifier of the Issuer",
          "type": "string"
        },
        "RecipientCode": {
          "description": "Recipient Code",
          "type": "string"
        },
        "RecipientDescription": {
          "description": "Recipient Description",
          "type": "string"
        },
        "RecipientExternalIdentifier": {
          "description": "The External Identifier of the Recipient",
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "Issue Date",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "Due Date",
          "type": "string"
        },
        "NetAmount": {
          "format": "double",
          "description": "Net Amount",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Tax",
          "type": "number"
        },
        "Total": {
          "format": "double",
          "description": "Total",
          "type": "number"
        },
        "TaxRateCode": {
          "description": "Tax Rate Code",
          "type": "string"
        },
        "Currency": {
          "description": "Currency Code",
          "type": "string"
        },
        "PaymentType": {
          "description": "Payment Type",
          "type": "string"
        },
        "PaymentTerm": {
          "description": "Payment Term",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "The External Identifier of the invoice",
          "type": "string"
        },
        "IdInvoiceHeaderParent": {
          "description": "When the invoice is a proforma with customers details, represents the Id of the parent invoice",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomersInvoicesRequest": {
      "description": "Represents a request to retrieve a pagedlist of customers invoices",
      "required": [
        "FromIssueDate",
        "ToIssueDate",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FromIssueDate": {
          "format": "date-time",
          "description": "Gets or sets from issue date.",
          "type": "string"
        },
        "ToIssueDate": {
          "format": "date-time",
          "description": "Gets or sets to issue date.",
          "type": "string"
        },
        "Year": {
          "format": "int32",
          "description": "Issue date Year.",
          "type": "integer"
        },
        "Month": {
          "format": "int32",
          "description": "Issue date Month.",
          "type": "integer"
        },
        "BillingServiceCode": {
          "description": "Gets or sets BillingServiceCode",
          "type": "string"
        },
        "IssuerCode": {
          "description": "Gets or sets IssuerCode",
          "type": "string"
        },
        "MediaType": {
          "description": "Gets or sets invoice media type",
          "type": "string"
        },
        "RecipientCustomerCode": {
          "description": "Gets or sets Recipient Customer Code",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerInvoiceListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerInvoiceListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerInvoiceListDto": {
      "description": "Represents a Customer Invoice",
      "type": "object",
      "properties": {
        "InvoiceNumber": {
          "description": "Invoice Number",
          "type": "string"
        },
        "BillingServiceCode": {
          "description": "Billing Service Code",
          "type": "string"
        },
        "IdBillingDriver": {
          "format": "int32",
          "description": "Id Billing Driver",
          "type": "integer"
        },
        "IsCredit": {
          "description": "True means credit (money from issuer to recipient)",
          "type": "boolean"
        },
        "Status": {
          "description": "Status",
          "type": "string"
        },
        "IssuerCode": {
          "description": "Issuer Code",
          "type": "string"
        },
        "IssuerDescription": {
          "description": "Issuer Description",
          "type": "string"
        },
        "RecipientCustomerDescription": {
          "description": "Recipient Customer Description",
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "Issue Date",
          "type": "string"
        },
        "ExpiryDate": {
          "format": "date-time",
          "description": "Expiry Date",
          "type": "string"
        },
        "Total": {
          "format": "double",
          "description": "Total",
          "type": "number"
        },
        "IdMediaTypeExcel": {
          "description": "id of the Media Type Excel",
          "type": "string"
        },
        "IdMediaTypePdf": {
          "description": "id of the Media Type Pdf",
          "type": "string"
        },
        "IdMediaTypeXml": {
          "description": "id of the Media Type Xml",
          "type": "string"
        },
        "IdMediaTypeXmlSdi": {
          "description": "id of the Media Type Xml SDI",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "The External Identifier",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomerInvoicesRequest": {
      "description": "Represents a request to retrieve a pagedlist of customer invoices",
      "required": [
        "FromIssueDate",
        "ToIssueDate",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FromIssueDate": {
          "format": "date-time",
          "description": "Gets or sets from issue date.",
          "type": "string"
        },
        "ToIssueDate": {
          "format": "date-time",
          "description": "Gets or sets to issue date.",
          "type": "string"
        },
        "IsBilling": {
          "description": "Gets or sets isBilling",
          "type": "boolean"
        },
        "IssuerCode": {
          "description": "Gets or sets dealer IssuerCode",
          "type": "string"
        },
        "RecipientCode": {
          "description": "Gets or sets customer RecipientCode",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "GetPassiveInvoicesRequest": {
      "description": "Represents a request to retrieve a pagedlist of passive invoices",
      "required": [
        "FromIssueDate",
        "ToIssueDate",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FromIssueDate": {
          "format": "date-time",
          "description": "Gets or sets from issue date.",
          "type": "string"
        },
        "ToIssueDate": {
          "format": "date-time",
          "description": "Gets or sets to issue date.",
          "type": "string"
        },
        "IdInvoiceCategory": {
          "description": "Id Invoice Category.\r\n            Missing or -1 means all.\r\n            -2 means passive invoices without category.",
          "type": "string"
        },
        "RecipientCode": {
          "description": "Gets or sets RecipientCode",
          "type": "string"
        },
        "IssuerOrRecipientCode": {
          "description": "Gets or sets the Issuer or Recipient Code",
          "type": "string"
        },
        "IsPaid": {
          "description": "Gets or sets Is Paid",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[PassiveInvoiceListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassiveInvoiceListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PassiveInvoiceListDto": {
      "description": "Represents a Passive Invoice",
      "type": "object",
      "properties": {
        "IsCredit": {
          "description": "True means credit (money from issuer to recipient)",
          "type": "boolean"
        },
        "Status": {
          "description": "Status",
          "type": "string"
        },
        "RecipientVatNumber": {
          "description": "Recipient Vat Number",
          "type": "string"
        },
        "RecipientDescription": {
          "description": "Recipient Description",
          "type": "string"
        },
        "IssuerVatNumber": {
          "description": "Issuer Vat Number",
          "type": "string"
        },
        "IssuerDescription": {
          "description": "Issuer Description",
          "type": "string"
        },
        "IssuerAddress": {
          "description": "Issuer Address",
          "type": "string"
        },
        "IssuerZipCode": {
          "description": "Issuer Zip Code",
          "type": "string"
        },
        "IssuerCity": {
          "description": "Issuer City",
          "type": "string"
        },
        "IssuerProvince": {
          "description": "Issuer Province",
          "type": "string"
        },
        "IssuerCountry": {
          "description": "Issuer Country",
          "type": "string"
        },
        "InvoiceNumber": {
          "description": "Invoice Number",
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "Issue Date",
          "type": "string"
        },
        "InvoiceHeading": {
          "description": "Invoice Heading",
          "type": "string"
        },
        "NetAmount": {
          "format": "double",
          "description": "Net Amount",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Tax",
          "type": "number"
        },
        "Total": {
          "format": "double",
          "description": "Total",
          "type": "number"
        },
        "IsToPay": {
          "description": "True if the invoice is to pay",
          "type": "boolean"
        },
        "IsPaid": {
          "description": "True if the invoice is paid",
          "type": "boolean"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "The date of payment, if managed",
          "type": "string"
        },
        "ReceivedDate": {
          "format": "date-time",
          "description": "Received Date",
          "type": "string"
        },
        "IdInvoiceCategory": {
          "format": "int32",
          "description": "Id Invoice Category",
          "type": "integer"
        },
        "InvoiceCategoryName": {
          "description": "Invoice Category",
          "type": "string"
        },
        "SDIDocumentType": {
          "description": "SDI Document type",
          "type": "string"
        },
        "IsSelfInvoice": {
          "description": "True means that can be managed by SDI as self invoice",
          "type": "boolean"
        },
        "ExpiryDates": {
          "description": "Expiry Dates",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "ExpiryDatesMetaData": {
          "description": "Expiry Dates as string",
          "type": "string"
        },
        "Attachments": {
          "description": "Attachments files",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassiveInvoiceAttachmentDto"
          }
        },
        "Medias": {
          "description": "Medias files",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassiveInvoiceMediaDto"
          }
        },
        "IdSDISelfInvoice": {
          "format": "int32",
          "description": "Id SDI Self Invoice",
          "type": "integer"
        },
        "IsValid": {
          "description": "True if the invoice has passed the SDI validation",
          "type": "boolean"
        },
        "IsSent": {
          "description": "True if the invoice has been sento to SDI.\r\n            See HasSentReceipt to check if there is a received notification from SDI.",
          "type": "boolean"
        },
        "SDIIdentifier": {
          "description": "The SDI identifier",
          "type": "string"
        },
        "SDIFileName": {
          "description": "The SDI file name",
          "type": "string"
        },
        "HasSentReceipt": {
          "description": "True if the invoice has a sent receipt from SDI",
          "type": "boolean"
        },
        "HasUnsentReceipt": {
          "description": "True if the invoice has a not sent receipt from SDI",
          "type": "boolean"
        },
        "HasRejectReceipt": {
          "description": "True if the invoice has been rejected from SDI",
          "type": "boolean"
        },
        "HasResultReceipt": {
          "description": "True if the invoice has a result notification from SDI",
          "type": "boolean"
        },
        "HasOverdueReceipt": {
          "description": "True if the invoice has received an overdue notification from SDI",
          "type": "boolean"
        },
        "HasUndeliveryReceipt": {
          "description": "True if the invoice has received an undelivery notification from SDI",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PassiveInvoiceAttachmentDto": {
      "description": "Passive Invoice Attachment",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Attachment file name",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PassiveInvoiceMediaDto": {
      "description": "Passive Invoice Media",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Media file name",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[InvoiceHeaderDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/InvoiceHeaderDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "InvoiceHeaderDto": {
      "description": "Represents an Invoice",
      "type": "object",
      "properties": {
        "IdBillingDriver": {
          "format": "int32",
          "description": "Id Billing Driver",
          "type": "integer"
        },
        "IdIssuer": {
          "description": "The Issuer Id",
          "type": "string"
        },
        "IdRecipient": {
          "description": "The Recipient Id in case it is a Dealer",
          "type": "string"
        },
        "IdRecipientCustomer": {
          "description": "The Recipient Id in case it is a Customer",
          "type": "string"
        },
        "SalesChannel": {
          "description": "The Sales Channel (Dealer to Dealer, Dealer to Customer, ...)",
          "enum": [
            "DealerToDealer",
            "DealerToCustomer"
          ],
          "type": "string"
        },
        "RecipientCountryCode": {
          "description": "The recipient country code.",
          "type": "string"
        },
        "IdRecipientCompany": {
          "description": "The Recipient Id in case it is a Company",
          "type": "string"
        },
        "IdBillTo": {
          "description": "The Recipient Id in case it is a BillTo Company",
          "type": "string"
        },
        "IdIssuerBank": {
          "description": "The Issuer Bank description",
          "type": "string"
        },
        "Issuer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "The dealer Issuer, who supplies the invoice."
        },
        "IssuerLogoUrl": {
          "description": "The dealer Issuer Logo Url, who supplies the invoice.",
          "type": "string"
        },
        "IssuerInfo": {
          "description": "The issuer info (name, address, vat) printed on the invoice",
          "type": "string"
        },
        "IssuerCountryCode": {
          "description": "The issuer country code.",
          "type": "string"
        },
        "Recipient": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "The Recipient of the invoice"
        },
        "RecipientInfo": {
          "description": "The recipient info (name, address, vat) printed on the invoice",
          "type": "string"
        },
        "RecipientPayment": {
          "description": "The recipient payment type and term",
          "type": "string"
        },
        "ProjectDescription": {
          "description": "The project description, in case of B2C invoice",
          "type": "string"
        },
        "BillingServiceCode": {
          "description": "The code of the billed service",
          "type": "string"
        },
        "InvoiceTemplate": {
          "description": "The invoice template",
          "type": "string"
        },
        "IsBilling": {
          "description": "True means a real invoice, false means a Proforma",
          "type": "boolean"
        },
        "IsCredit": {
          "description": "True means a credit note, toatal amount is negative.",
          "type": "boolean"
        },
        "Subject": {
          "description": "The subject of the email when the invoice is sent",
          "type": "string"
        },
        "Email": {
          "description": "The email when the invoice is sent",
          "type": "string"
        },
        "InvoiceHeading": {
          "description": "The main invoice description of services",
          "type": "string"
        },
        "PaymentType": {
          "description": "The payment type",
          "enum": [
            "CashOrder",
            "WireTransfer",
            "SepaDirectDebitCore",
            "PayPal",
            "Stripe"
          ],
          "type": "string"
        },
        "PaymentTerm": {
          "description": "The payment term",
          "enum": [
            "PaymentTerm30E",
            "PaymentTerm30NE",
            "PaymentTerm45E",
            "PaymentTerm45NE",
            "PaymentTerm60E",
            "PaymentTerm60NE",
            "PaymentTerm90E",
            "PaymentTerm90NE",
            "PaymentTerm120E",
            "PaymentTerm120NE",
            "PaymentTerm60E10",
            "PaymentTerm30E10",
            "PaymentTermRF",
            "PaymentTerm90E10",
            "PaymentTerm7NE",
            "PaymentTerm14NE"
          ],
          "type": "string"
        },
        "ReferenceYear": {
          "format": "int32",
          "description": "A reference year of the related services",
          "type": "integer"
        },
        "ReferenceMonth": {
          "format": "int32",
          "description": "A reference month of the related services",
          "type": "integer"
        },
        "ReferenceDay": {
          "format": "int32",
          "description": "A reference day of the related services",
          "type": "integer"
        },
        "InvoiceNumber": {
          "description": "The unique invoice number, in case of real invoice.\r\n            Proforma have no invoice number.",
          "type": "string"
        },
        "Status": {
          "description": "The internal status of the process",
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "The date of th invoice",
          "type": "string"
        },
        "ExpiryDate": {
          "format": "date-time",
          "description": "The expiry date of the invoice.\r\n            It depends on IssueDate and PaymentTerm.",
          "type": "string"
        },
        "SubTotal": {
          "format": "double",
          "description": "The subtotal of the invoice, before discounts and taxes.",
          "type": "number"
        },
        "FinancialDiscountRate": {
          "format": "double",
          "description": "A Financial Discount percentage, if any.",
          "type": "number"
        },
        "FinancialDiscount": {
          "format": "double",
          "description": "A Financial Discount in money, if any.",
          "type": "number"
        },
        "NetAmount": {
          "format": "double",
          "description": "The net amount, before taxes.",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "description": "The tax percentage applied, if any.",
          "type": "number"
        },
        "IsDealerTaxRate": {
          "description": "True if the Tax Rate Code refers to a Dealer Tax Rate Code",
          "type": "boolean"
        },
        "TaxRateCode": {
          "description": "The tax rate code",
          "type": "string"
        },
        "TaxRateReason": {
          "description": "The tax rate reason in case of tax exempt",
          "type": "string"
        },
        "Tax": {
          "format": "double",
          "description": "The tax amount in money",
          "type": "number"
        },
        "Total": {
          "format": "double",
          "description": "The end total of the invoice",
          "type": "number"
        },
        "Language": {
          "description": "The language of the invoice",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "IdCurrency": {
          "description": "The currency id of the invoice",
          "type": "string"
        },
        "CurrencySymbol": {
          "description": "The currency Html Code of the invoice",
          "type": "string"
        },
        "HasDecimalPlaces": {
          "description": "True if the currency has decimal places",
          "type": "boolean"
        },
        "IdAlternativeCurrency": {
          "description": "The alternative currency id of the invoice",
          "type": "string"
        },
        "AlternativeCurrencySymbol": {
          "description": "The alternative currency Html Code of the invoice",
          "type": "string"
        },
        "CultureInfo": {
          "description": "Culture Info for Dates and Numbers",
          "type": "string"
        },
        "IssuerIBAN": {
          "description": "The bank IBAN coordinate of the Issuer",
          "type": "string"
        },
        "RecipientIBAN": {
          "description": "The bank IBAN coordinate of the Recipient",
          "type": "string"
        },
        "RecipientCustomer": {
          "$ref": "#/definitions/CustomerDto",
          "description": "The recipient Customer, in case of B2C invoice"
        },
        "RecipientCompany": {
          "$ref": "#/definitions/CompanyDto",
          "description": "The recipient Company, in case of other recipient invoice"
        },
        "BillTo": {
          "$ref": "#/definitions/CompanyDto",
          "description": "The recipient Company, in case of other BillTo company"
        },
        "RecipientABI": {
          "description": "Used in RiBa",
          "type": "string"
        },
        "RecipientCAB": {
          "description": "Used in RiBa",
          "type": "string"
        },
        "InvoiceRows": {
          "description": "The list of items in the invoice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceRowDto"
          }
        },
        "InvoiceHeaderInfos": {
          "description": "The list of additional infos (key value pairs) of the invoice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceHeaderInfoDto"
          }
        },
        "InvoiceMedias": {
          "description": "The list of invoice medias (pdf, xlsx, xml, ...)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceMediaDto"
          }
        },
        "IsPaymentUnsolved": {
          "description": "True if the Payment is Unsolved",
          "type": "boolean"
        },
        "PaymentReminderDate": {
          "format": "date-time",
          "description": "The Payment Reminder Date",
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "The Payment Date",
          "type": "string"
        },
        "IsSDI": {
          "description": "True if the invoice belongs to Electronic Interchange process",
          "type": "boolean"
        },
        "Note": {
          "description": "Invoice Note",
          "type": "string"
        },
        "IdSalesAgent": {
          "description": "The Sales Agent Id",
          "type": "string"
        },
        "SalesAgent": {
          "$ref": "#/definitions/AccountDto",
          "description": "The sales agent"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "InvoiceRowDto": {
      "description": "Represents an invoice row",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Id of the invoice row",
          "type": "integer"
        },
        "Index": {
          "format": "int32",
          "description": "Index of the invoice row",
          "type": "integer"
        },
        "GroupingTag": {
          "description": "Defines an optional grouping of a set of rows",
          "type": "string"
        },
        "Code": {
          "description": "Code of the item in the invoice row",
          "type": "string"
        },
        "Description": {
          "description": "Description of the item in the invoice row",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "The quantity",
          "type": "number"
        },
        "UnitPrice": {
          "format": "double",
          "description": "The unit price of the item",
          "type": "number"
        },
        "Amount": {
          "format": "double",
          "description": "The amount, that is Quantity * UnitPrice",
          "type": "number"
        },
        "PriceDecimals": {
          "format": "int32",
          "description": "The number of decimals to be printed for the Unit Price in the invoice row",
          "type": "integer"
        },
        "ServiceStartDate": {
          "format": "date-time",
          "description": "Service Start Date",
          "type": "string"
        },
        "ServiceEndDate": {
          "format": "date-time",
          "description": "Service End Date",
          "type": "string"
        },
        "IssuesPerYear": {
          "format": "int32",
          "description": "Number of invoices per year, according to the billing driver months",
          "type": "integer"
        },
        "IsRecurrentBilling": {
          "description": "True if the billed service is recurrent",
          "type": "boolean"
        },
        "InvoiceRowInfoDeviceCounters": {
          "description": "The list of items in the invoice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceRowInfoDeviceCountersDto"
          }
        },
        "InvoiceRowInfos": {
          "description": "The list of additional row info",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceRowInfoDto"
          }
        }
      }
    },
    "InvoiceHeaderInfoDto": {
      "description": "Represents an additional key value pair of the invoice",
      "type": "object",
      "properties": {
        "Key": {
          "description": "Defines the Key of the additional info",
          "type": "string"
        },
        "Value": {
          "description": "Defines the Value of the additional info",
          "type": "string"
        }
      }
    },
    "InvoiceMediaDto": {
      "description": "Invoice Media Dto",
      "type": "object",
      "properties": {
        "MediaType": {
          "description": "The media type (pdf, excel, ...)",
          "type": "string"
        },
        "Name": {
          "description": "The name of the invoice media",
          "type": "string"
        },
        "ContentBase64": {
          "format": "byte",
          "description": "Content bytes",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "InvoiceRowInfoDeviceCountersDto": {
      "description": "Represents counters info for a device in the invoice",
      "type": "object",
      "properties": {
        "Brand": {
          "description": "Brand",
          "type": "string"
        },
        "Model": {
          "description": "Model",
          "type": "string"
        },
        "Type": {
          "description": "Type",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Serial Number",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Asset Number",
          "type": "string"
        },
        "StartCounter": {
          "format": "int32",
          "description": "Start Counter",
          "type": "integer"
        },
        "StartDate": {
          "description": "Start Date",
          "type": "string"
        },
        "EndCounter": {
          "format": "int32",
          "description": "End Counter",
          "type": "integer"
        },
        "EndDate": {
          "description": "End Date",
          "type": "string"
        },
        "LeaseMonths": {
          "format": "int32",
          "description": "Numeber of Lease months",
          "type": "integer"
        },
        "Volume": {
          "format": "int32",
          "description": "Volume",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "InvoiceRowInfoDto": {
      "description": "Represents additional info for an invoice row",
      "type": "object",
      "properties": {
        "Key": {
          "description": "Key",
          "type": "string"
        },
        "Value": {
          "description": "Value",
          "type": "string"
        },
        "GroupingTag": {
          "description": "Groups rows that refer to the same entity",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerInvoiceDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerInvoiceDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerInvoiceDto": {
      "description": "Represents a dealer to dealer Invoice",
      "type": "object",
      "properties": {
        "Status": {
          "description": "The internal status of the process\r\n            NEW = New invoice, in progress, to be computed\r\n            RDY = Ready, the invoice is computed\r\n            MED = Media ready, the invoice media files are ready (pdf, xml, ...)\r\n            SNT = Sent, the invoice is sent to the recipient\r\n            ERR = Error, the invoice has some errors",
          "type": "string"
        },
        "IdInvoicePlan": {
          "format": "int32",
          "description": "Id Invoice Plan",
          "type": "integer"
        },
        "IsBilling": {
          "description": "True means a real invoice, false means a Proforma",
          "type": "boolean"
        },
        "IsCredit": {
          "description": "True means credit (payment from issuer to recipient)",
          "type": "boolean"
        },
        "SalesChannel": {
          "description": "The Sales Channel (Dealer to Dealer, Dealer to Customer, ...)",
          "enum": [
            "DealerToDealer",
            "DealerToCustomer"
          ],
          "type": "string"
        },
        "BillingServiceCode": {
          "description": "The code of the billed service",
          "type": "string"
        },
        "Issuer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "The dealer Issuer, who supplies the invoice."
        },
        "IssuerExternalIdentifier": {
          "description": "The External Identifier of the Issuer",
          "type": "string"
        },
        "Recipient": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "The dealer Recipient of the invoice"
        },
        "RecipientExternalIdentifier": {
          "description": "The External Identifier of the Recipient",
          "type": "string"
        },
        "BillTo": {
          "$ref": "#/definitions/CompanyDto",
          "description": "The recipient Company, in case of other BillTo company"
        },
        "RecipientPayment": {
          "description": "The recipient payment type and term",
          "type": "string"
        },
        "InvoiceTemplate": {
          "description": "The invoice template",
          "type": "string"
        },
        "InvoiceHeading": {
          "description": "The main invoice description of services",
          "type": "string"
        },
        "PaymentType": {
          "description": "The payment type",
          "enum": [
            "CashOrder",
            "WireTransfer",
            "SepaDirectDebitCore",
            "PayPal",
            "Stripe"
          ],
          "type": "string"
        },
        "PaymentTerm": {
          "description": "The payment term",
          "enum": [
            "PaymentTerm30E",
            "PaymentTerm30NE",
            "PaymentTerm45E",
            "PaymentTerm45NE",
            "PaymentTerm60E",
            "PaymentTerm60NE",
            "PaymentTerm90E",
            "PaymentTerm90NE",
            "PaymentTerm120E",
            "PaymentTerm120NE",
            "PaymentTerm60E10",
            "PaymentTerm30E10",
            "PaymentTermRF",
            "PaymentTerm90E10",
            "PaymentTerm7NE",
            "PaymentTerm14NE"
          ],
          "type": "string"
        },
        "ReferenceYear": {
          "format": "int32",
          "description": "A reference year of the related services",
          "type": "integer"
        },
        "ReferenceMonth": {
          "format": "int32",
          "description": "A reference month of the related services",
          "type": "integer"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "The date of the invoice",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "description": "The due date of the invoice.",
          "type": "string"
        },
        "NetAmount": {
          "format": "double",
          "description": "The net amount, before taxes.",
          "type": "number"
        },
        "IsDealerTaxRate": {
          "description": "True if the Tax Rate Code refers to a Dealer Tax Rate Code",
          "type": "boolean"
        },
        "TaxRate": {
          "format": "double",
          "description": "The tax percentage applied, if any.",
          "type": "number"
        },
        "TaxRateCode": {
          "description": "The tax rate code",
          "type": "string"
        },
        "Tax": {
          "format": "double",
          "description": "The tax amount",
          "type": "number"
        },
        "Total": {
          "format": "double",
          "description": "The end total of the invoice",
          "type": "number"
        },
        "Language": {
          "description": "The language of the invoice",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "Currency": {
          "description": "The currency ISO Code of the invoice",
          "type": "string"
        },
        "CultureInfo": {
          "description": "Culture Info for Dates and Numbers",
          "type": "string"
        },
        "SalesAgent": {
          "$ref": "#/definitions/AccountBaseDto",
          "description": "The sales agent"
        },
        "InvoiceRows": {
          "description": "The list of items in the invoice",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceRowDto"
          }
        },
        "ExternalIdentifier": {
          "description": "The External Identifier of the invoice",
          "type": "string"
        },
        "IdInvoiceHeaderParent": {
          "description": "When the invoice is a proforma with customers details, represents the Id of the parent invoice",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "AccountBaseDto": {
      "description": "Represent an account",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[PassiveInvoiceHeaderDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PassiveInvoiceHeaderDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PassiveInvoiceHeaderDto": {
      "description": "Represents a Passive Invoice",
      "type": "object",
      "properties": {
        "IsCredit": {
          "description": "True means credit (money from issuer to recipient)",
          "type": "boolean"
        },
        "Status": {
          "description": "Status",
          "type": "string"
        },
        "IdRecipient": {
          "description": "Id Recipient",
          "type": "string"
        },
        "RecipientCode": {
          "description": "Recipient Code",
          "type": "string"
        },
        "RecipientVatNumber": {
          "description": "Recipient Vat Number",
          "type": "string"
        },
        "RecipientDescription": {
          "description": "Recipient Description",
          "type": "string"
        },
        "IssuerCompany": {
          "$ref": "#/definitions/CompanyDto",
          "description": "The Issuer Company"
        },
        "IssuerVatNumber": {
          "description": "Issuer Vat Number",
          "type": "string"
        },
        "IssuerDescription": {
          "description": "Issuer Description",
          "type": "string"
        },
        "IssuerAddress": {
          "description": "Issuer Address",
          "type": "string"
        },
        "IssuerZipCode": {
          "description": "Issuer Zip Code",
          "type": "string"
        },
        "IssuerCity": {
          "description": "Issuer City",
          "type": "string"
        },
        "IssuerProvince": {
          "description": "Issuer Province",
          "type": "string"
        },
        "IssuerCountry": {
          "$ref": "#/definitions/CountryDto",
          "description": "Issuer Country"
        },
        "InvoiceNumber": {
          "description": "Invoice Number",
          "type": "string"
        },
        "IssueDate": {
          "format": "date-time",
          "description": "Issue Date",
          "type": "string"
        },
        "ReceivedDate": {
          "format": "date-time",
          "description": "Received Date",
          "type": "string"
        },
        "InvoiceHeading": {
          "description": "Invoice Heading",
          "type": "string"
        },
        "NetAmount": {
          "format": "double",
          "description": "Net Amount",
          "type": "number"
        },
        "Tax": {
          "format": "double",
          "description": "Tax",
          "type": "number"
        },
        "Total": {
          "format": "double",
          "description": "Total",
          "type": "number"
        },
        "NetAmountCurrency": {
          "format": "double",
          "description": "Net Amount, in the Currency, if set",
          "type": "number"
        },
        "TaxCurrency": {
          "format": "double",
          "description": "Tax, in the Currency, if set",
          "type": "number"
        },
        "TotalCurrency": {
          "format": "double",
          "description": "Total, in the Currency, if set",
          "type": "number"
        },
        "IsToPay": {
          "description": "True if the invoice is to pay",
          "type": "boolean"
        },
        "IsPaid": {
          "description": "True if the invoice is paid",
          "type": "boolean"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "The date of payment, if managed",
          "type": "string"
        },
        "Currency": {
          "$ref": "#/definitions/CurrencyDto",
          "description": "The invoice currency, if different from Euro"
        },
        "InvoiceCategory": {
          "$ref": "#/definitions/InvoiceCategoryDto",
          "description": "The Invoice Category"
        },
        "AlternativeInvoiceCategory": {
          "$ref": "#/definitions/InvoiceCategoryDto",
          "description": "The Alternative Invoice Category"
        },
        "SDIDocumentType": {
          "description": "The Invoice SDI Document type",
          "type": "string"
        },
        "Attachments": {
          "description": "Attachments files",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassiveInvoiceAttachmentDto"
          }
        },
        "UploadedAttachments": {
          "description": "Gets or sets the uploaded attachments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileInfoDto"
          }
        },
        "PassiveInvoiceRows": {
          "description": "Rows",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassiveInvoiceRowDto"
          }
        },
        "PassiveInvoicePaymentConditions": {
          "description": "Rows",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PassiveInvoicePaymentConditionDto"
          }
        },
        "IssuerInfo": {
          "description": "Issuer Info",
          "type": "string",
          "readOnly": true
        },
        "RecipientInfo": {
          "description": "Recipient Info",
          "type": "string",
          "readOnly": true
        },
        "IdPassiveInvoice": {
          "format": "int32",
          "description": "Reference to the original sdi.PassiveInvoice, if the invoice comes from SDI.",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PassiveInvoiceRowDto": {
      "description": "Represents a Passive Invoice Row",
      "type": "object",
      "properties": {
        "LineNumber": {
          "format": "int32",
          "description": "Line number of the item in the invoice row",
          "type": "integer"
        },
        "Description": {
          "description": "Description of the item in the invoice row",
          "type": "string"
        },
        "ReferenceStartDate": {
          "format": "date-time",
          "description": "Reference Start Date",
          "type": "string"
        },
        "ReferenceEndDate": {
          "format": "date-time",
          "description": "Reference End Date",
          "type": "string"
        },
        "UnitOfMeasure": {
          "description": "The Unit of Measure of the item",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "The Quantity of the item",
          "type": "number"
        },
        "UnitPrice": {
          "format": "double",
          "description": "The Unit Price of the item",
          "type": "number"
        },
        "Amount": {
          "format": "double",
          "description": "The Amount of the item, that is Quantity * UnitPrice",
          "type": "number"
        },
        "TaxRate": {
          "format": "double",
          "description": "The Tax Rate of the item",
          "type": "number"
        },
        "UnitPriceCurrency": {
          "format": "double",
          "description": "The Unit Price of the item, in the currency (not euro)",
          "type": "number"
        },
        "AmountCurrency": {
          "format": "double",
          "description": "The Amount of the item, that is Quantity * UnitPrice, in the currency (not euro)",
          "type": "number"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PassiveInvoicePaymentConditionDto": {
      "description": "Represents a Passive Invoice Payment Condition",
      "type": "object",
      "properties": {
        "PaymentCondition": {
          "description": "Payment Condition",
          "type": "string"
        },
        "PaymentType": {
          "description": "Payment Type",
          "type": "string"
        },
        "PaymentReferenceDate": {
          "format": "date-time",
          "description": "Payment Reference Date",
          "type": "string"
        },
        "PaymentReferenceDays": {
          "format": "int32",
          "description": "Payment Reference Days",
          "type": "integer"
        },
        "ExpiryDate": {
          "format": "date-time",
          "description": "Expiry Date",
          "type": "string"
        },
        "PaymentTotal": {
          "format": "double",
          "description": "Payment Total",
          "type": "number"
        },
        "PaymentTotalCurrency": {
          "format": "double",
          "description": "Payment Total in currency, if currency set",
          "type": "number"
        },
        "IssuerBank": {
          "description": "Issuer Bank",
          "type": "string"
        },
        "IssuerIBAN": {
          "description": "Issuer IBAN",
          "type": "string"
        },
        "IssuerABI": {
          "description": "Issuer ABI",
          "type": "string"
        },
        "IssuerCAB": {
          "description": "Issuer CAB",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetInvoiceMediaRequest": {
      "description": "Represents a request to get an Invoice media",
      "required": [
        "IdInvoiceHeader",
        "MediaType",
        "IdBillingDriver",
        "BillableServiceCode"
      ],
      "type": "object",
      "properties": {
        "IdInvoiceHeader": {
          "description": "Gets or sets IdInvoiceHeader.",
          "type": "string"
        },
        "MediaType": {
          "description": "Gets or sets MediaType (pdf, excel).",
          "type": "string"
        },
        "IdBillingDriver": {
          "description": "Gets or sets IdBillingDriver.",
          "type": "string"
        },
        "BillableServiceCode": {
          "description": "Gets or sets BillableServiceCode.",
          "type": "string"
        }
      }
    },
    "GetCustomerInvoiceMediaRequest": {
      "description": "Represents a request to get an Invoice media",
      "required": [
        "IdInvoiceHeader",
        "MediaType",
        "IdBillingDriver",
        "BillableServiceCode"
      ],
      "type": "object",
      "properties": {
        "IdInvoiceHeader": {
          "description": "Gets or sets IdInvoiceHeader.",
          "type": "string"
        },
        "MediaType": {
          "description": "Gets or sets MediaType (pdf, excel).",
          "type": "string"
        },
        "IdBillingDriver": {
          "description": "Gets or sets IdBillingDriver.",
          "type": "string"
        },
        "BillableServiceCode": {
          "description": "Gets or sets BillableServiceCode.",
          "type": "string"
        }
      }
    },
    "GetByIdAndDateRequest": {
      "description": "Represents a request to retrieve an object by id",
      "required": [
        "Id",
        "Date"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "Date": {
          "format": "date-time",
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[String]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "string"
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[InvoiceHeaderDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/InvoiceHeaderDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "CreateRequest[PassiveInvoiceHeaderDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/PassiveInvoiceHeaderDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "CreateRequest[ContractDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/ContractDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "GetBillableServicesRequest": {
      "description": "Get BillableServices request parameters",
      "type": "object",
      "properties": {
        "IsB2B": {
          "type": "boolean"
        },
        "IsB2C": {
          "type": "boolean"
        },
        "DealerCode": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[BillableServiceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillableServiceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetContractBillableServicesRequest": {
      "description": "Get ContractBillableServices request parameters",
      "type": "object",
      "properties": {
        "HasBillingDriver": {
          "description": "ContractBillableServices with a BillingDriver",
          "type": "boolean"
        }
      }
    },
    "ListResultResponse[ContractBillableServiceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractBillableServiceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateBillingDriverRequest": {
      "description": "Creates or updates request for a Billing Driver",
      "required": [
        "BillingDriver",
        "AdditionalRecipientData"
      ],
      "type": "object",
      "properties": {
        "BillingDriver": {
          "$ref": "#/definitions/BillingDriverDto",
          "description": "Gets or sets the BillingDriver to create or update"
        },
        "AdditionalRecipientData": {
          "$ref": "#/definitions/DealerDto",
          "description": "Gets or sets the AdditionalRecipientData"
        }
      }
    },
    "AddContractBillableServicesToBillingDriverRequest": {
      "description": "Adds ContractBillableServices to a BillingDriver",
      "type": "object",
      "properties": {
        "IdBillingDriver": {
          "description": "Id BillingDriver",
          "type": "string"
        },
        "ContractBillableServices": {
          "description": "ContractBillableServices's Ids",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractBillableServiceDto"
          }
        }
      }
    },
    "PreviewInvoiceRequest": {
      "description": "Represents a request to get an Invoice preview staring from a Billing Driver",
      "required": [
        "IdBillingDriver",
        "BillableServiceCode"
      ],
      "type": "object",
      "properties": {
        "IdBillingDriver": {
          "description": "Gets or sets IdBillingDriver.",
          "type": "string"
        },
        "BillableServiceCode": {
          "description": "Gets or sets BillableServiceCode.",
          "type": "string"
        }
      }
    },
    "BaseRequest": {
      "description": "Represents the base class for all the requests",
      "type": "object",
      "properties": {}
    },
    "ListResultResponse[CodeDesc]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[BillingDriverTimelineDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillingDriverTimelineDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "BillingDriverTimelineDto": {
      "description": "Represents a Billing Driver further execution in the timeline",
      "type": "object",
      "properties": {
        "ReferenceDate": {
          "format": "date-time",
          "description": "The date of further execution",
          "type": "string"
        },
        "BillingServiceCode": {
          "description": "The Billing Service Code that will be invoiced at the Refernce Date",
          "type": "string"
        },
        "Services": {
          "format": "int32",
          "description": "The number of Billing Service Codes that will be invoiced at the Refernce Date",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDealerToDealerInvoicesRequest": {
      "description": "Represents a request to retrieve an object by id",
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "FromDate": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "ToDate": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DealerToDealerInvoiceListDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerToDealerInvoiceListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerToDealerInvoiceListDto": {
      "description": "Represents a Dealer to Dealer invoice",
      "type": "object",
      "properties": {
        "InvoiceId": {
          "description": "Invoice Id.",
          "type": "string"
        },
        "IssuerCode": {
          "description": "Issuer Code.",
          "type": "string"
        },
        "IssuerDescription": {
          "description": "Issuer Description.",
          "type": "string"
        },
        "RecipientCode": {
          "description": "Recipient Code.",
          "type": "string"
        },
        "RecipientDescription": {
          "description": "Recipient Description.",
          "type": "string"
        },
        "IssueDate": {
          "description": "Invoice Issue Date.",
          "type": "string"
        },
        "Currency": {
          "description": "Currency of the invoice.",
          "type": "string"
        },
        "ServiceStartDate": {
          "description": "Service Start date.",
          "type": "string"
        },
        "ServiceEndDate": {
          "description": "Service End date.",
          "type": "string"
        },
        "ServiceCode": {
          "description": "Service Code.",
          "type": "string"
        },
        "ServiceDescription": {
          "description": "Service Description.",
          "type": "string"
        },
        "Quantity": {
          "format": "double",
          "description": "Row Quantity.",
          "type": "number"
        },
        "UnitPrice": {
          "format": "double",
          "description": "Row Unit Price.",
          "type": "number"
        },
        "Amount": {
          "format": "double",
          "description": "Row Amount.",
          "type": "number"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetByBillingDriverRequest": {
      "description": "Represents a request to get a media for an Invoice by its Id or by its Billing Driver",
      "required": [
        "IdBillingDriver",
        "MediaType",
        "Id"
      ],
      "type": "object",
      "properties": {
        "IdBillingDriver": {
          "description": "Gets or sets IdBillingDriver.",
          "type": "string"
        },
        "MediaType": {
          "description": "Gets or sets a MediaType.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[BillBookCustomerDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BillBookCustomerDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "BillBookCustomerDto": {
      "description": "Represents a Customer Project Bill Book with Events",
      "type": "object",
      "properties": {
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "The Customer"
        },
        "ProjectEvents": {
          "description": "The list of Project Events",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectEventDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ProjectEventDto": {
      "description": "Represents a Billbook Project Event",
      "type": "object",
      "properties": {
        "Dates": {
          "description": "The Project Billbook event dates",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "Project": {
          "$ref": "#/definitions/ProjectDto",
          "description": "The Project"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ProjectDto": {
      "description": "",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Start": {
          "format": "date-time",
          "description": "Gets or sets the start.",
          "type": "string"
        },
        "Finish": {
          "format": "date-time",
          "description": "Gets or sets the finish.",
          "type": "string"
        },
        "CustomFieldValues": {
          "description": "Gets or sets the custom fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "ContractFileName": {
          "description": "Contract file name",
          "type": "string"
        },
        "EnableMassiveShipping": {
          "description": "Gets or sets the enable massive shipping.",
          "type": "boolean"
        },
        "MassiveShippingSendNotification": {
          "description": "Gets or sets the enable massive shipping notification",
          "type": "boolean"
        },
        "MassiveShippingSendLogistic": {
          "description": "Gets or sets the enable massive shipping logistic notification",
          "type": "boolean"
        },
        "AlertInformationBox": {
          "description": "Gets or sets the alert information box.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[AccountDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[InvoiceCategoryDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceCategoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerInvoicesInfoDto": {
      "description": "Customer Invoices Info",
      "type": "object",
      "properties": {
        "HasCustomerInvoices": {
          "description": "True if the dealer has issued invoices to customers",
          "type": "boolean"
        },
        "HasSdi": {
          "description": "True if the dealer has issued invoices to customers in the Italian Interchange System",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[FileInfoDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[InvoiceHeaderDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/InvoiceHeaderDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateRequest[PassiveInvoiceHeaderDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/PassiveInvoiceHeaderDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateCustomerInvoiceRequest": {
      "description": "Represents a request to update a Customer Invoice",
      "required": [
        "ExternalIdentifier",
        "Id"
      ],
      "type": "object",
      "properties": {
        "ExternalIdentifier": {
          "description": "Gets or sets ExternalIdentifier\r\n            The ExternalIdentifier to update.\r\n            Pass a valid value or an empty string to clear the ExternalIdentifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerFeaturesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerFeaturesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerFeaturesDto": {
      "description": "Represent a dealer's features",
      "type": "object",
      "properties": {
        "FeaturesMap": {
          "description": "Gets or sets the features map.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasMps": {
          "description": "Gets or sets a value indicating whether this instance has MPS.",
          "type": "boolean",
          "readOnly": true
        },
        "HasHpSds": {
          "description": "Gets or sets a value indicating whether this instance has hp SDS.",
          "type": "boolean",
          "readOnly": true
        },
        "HasZzt": {
          "description": "Gets or sets a value indicating whether this instance has ZZT.",
          "type": "boolean",
          "readOnly": true
        },
        "HasPrintReleaf": {
          "description": "Gets or sets a value indicating whether this instance has print releaf.",
          "type": "boolean",
          "readOnly": true
        },
        "HasSupportTicket": {
          "description": "Gets or sets a value indicating whether this instance has support ticket.",
          "type": "boolean",
          "readOnly": true
        },
        "HasEpsonERS": {
          "description": "Get a value indicating if this Epson ERS feature is enabled",
          "type": "boolean",
          "readOnly": true
        },
        "HasSharpFSS": {
          "description": "",
          "type": "boolean",
          "readOnly": true
        },
        "HasEpsonUSB": {
          "description": "Get a value indicating if this Epson USB feature is enabled",
          "type": "boolean",
          "readOnly": true
        },
        "HasReinstallationTicket": {
          "description": "Gets or sets a value indicating whether this instance has reinstallation ticket.",
          "type": "boolean",
          "readOnly": true
        },
        "IsDemo": {
          "description": "Gets or sets a value indicating whether this instance is demo.",
          "type": "boolean"
        },
        "DemoExpireDate": {
          "format": "date-time",
          "description": "Gets or sets the demo expire date.",
          "type": "string"
        },
        "DemoExpireDays": {
          "format": "int32",
          "description": "Gets or sets the demo expire days.",
          "type": "integer"
        },
        "MaxPostponeDemoDays": {
          "format": "int32",
          "description": "Gets or sets the maximum postpone demo days.",
          "type": "integer"
        },
        "IsDeleted": {
          "description": "True if the dealer was marked for deletion",
          "type": "boolean"
        }
      }
    },
    "ListResultResponse[TimeZoneDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeZoneDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TimeZoneDto": {
      "description": "TimeZone",
      "type": "object",
      "properties": {
        "Value": {
          "description": "Gets or sets the value.",
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "UTC": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[CountryDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CountryDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CountryDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[CurrencyDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetTaxRatesRequest": {
      "description": "Represents a request to get Tax Rates",
      "required": [
        "DealerCode",
        "CountryCode"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets Country Code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[TaxRateDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRateDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TaxRateDto": {
      "description": "Tax Rate",
      "type": "object",
      "properties": {
        "Code": {
          "description": "The code of the tax rate",
          "type": "string"
        },
        "Description": {
          "description": "The description of the tax rate",
          "type": "string"
        },
        "Label": {
          "description": "The label of the tax rate",
          "type": "string"
        },
        "Rate": {
          "format": "double",
          "description": "The tax percentage",
          "type": "number"
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Tha starting date of the tax rate",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Tha ending date of the tax rate",
          "type": "string"
        },
        "IsDealerTaxRate": {
          "description": "True if it is a customer dealer tax rate",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[EntityIdDescIntDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityIdDescIntDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "EntityIdDescIntDto": {
      "description": "Represent the Id Desc dto",
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "description": "Gets or sets the Id",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description",
          "type": "string"
        }
      }
    },
    "ListResultResponse[PortalReleaseNoteDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortalReleaseNoteDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PortalReleaseNoteDto": {
      "type": "object",
      "properties": {
        "Version": {
          "type": "string"
        },
        "Feature": {
          "type": "string"
        },
        "ReleaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCompaniesRequest": {
      "description": "Represents a request to retrieve a pagedlist of companies",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CompanyDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CompanyDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CompanyDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[CompanyDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/CompanyDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "GetConsumablesRequest": {
      "description": "Represents a request to retrieve a list of counters",
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[ConsumablesDeviceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumablesDeviceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ConsumablesDeviceDto": {
      "description": "Device",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Serial Number",
          "type": "string"
        },
        "DeviceId": {
          "description": "DeviceId",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Asset Number",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Last Update",
          "type": "string"
        },
        "Consumables": {
          "description": "Counters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsumableBaseDto"
          }
        }
      }
    },
    "ConsumableBaseDto": {
      "description": "Defines the last value of the consumable by device",
      "type": "object",
      "properties": {
        "LastUpdate": {
          "format": "date-time",
          "description": "Last Update",
          "type": "string"
        },
        "Key": {
          "description": "The name of the consumble",
          "type": "string"
        },
        "Value": {
          "format": "int32",
          "description": "The remaining level of the consumable",
          "type": "integer"
        },
        "SupplyType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "The supply Type."
        },
        "ColorType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "The color Type."
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "The maintenance kit Type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "The maintenance kit Color."
        }
      }
    },
    "GetCostCentersRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "ShowAll": {
          "description": "Gets or sets a value indicating whether [show all].",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CostCenterDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCenterDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CostCenterDto": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "ExternalKey": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CostCenterDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CostCenterDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[CostCenterDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/CostCenterDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[CostCenterDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/CostCenterDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetCountersRequest": {
      "description": "Represents a request to retrieve a list of counters",
      "required": [
        "DealerCode",
        "FromDate",
        "ToDate"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "description": "Gets or sets the from date.",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "Gets or sets the to date.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[CountersDeviceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountersDeviceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CountersDeviceDto": {
      "description": "Device",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Serial Number",
          "type": "string"
        },
        "DeviceId": {
          "description": "DeviceId",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Asset Number",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Last Update in yyyy-MM-dd format",
          "type": "string"
        },
        "Counters": {
          "description": "Counters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountersCounterDto"
          }
        }
      }
    },
    "CountersCounterDto": {
      "description": "Counter",
      "type": "object",
      "properties": {
        "Mono": {
          "format": "int32",
          "description": "Mono counter",
          "type": "integer"
        },
        "Color": {
          "format": "int32",
          "description": "Color counter",
          "type": "integer"
        },
        "MonoA3": {
          "format": "int32",
          "description": "Mono A3 counter",
          "type": "integer"
        },
        "ColorA3": {
          "format": "int32",
          "description": "Color A3 counter",
          "type": "integer"
        },
        "Fax": {
          "format": "int32",
          "description": "Fax counter",
          "type": "integer"
        },
        "Date": {
          "format": "date-time",
          "description": "Date received",
          "type": "string"
        },
        "MonoPagesInPeriod": {
          "format": "int32",
          "description": "Gets or sets the mono pages in period.",
          "type": "integer"
        },
        "ColorPagesInPeriod": {
          "format": "int32",
          "description": "Gets or sets the color pages in period.",
          "type": "integer"
        }
      }
    },
    "GetCountersDetailedRequest": {
      "description": "Represents a request to retrieve a list of counters with details",
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "CounterDetaildTags": {
          "description": "Gets or sets the counter detaild tags.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListResultResponse[CountersDetailedDeviceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountersDetailedDeviceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CountersDetailedDeviceDto": {
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "DeviceId": {
          "description": "Device Id",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Serial Number",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Asset Number",
          "type": "string"
        },
        "CountersDetailed": {
          "description": "Counters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterDetailedDto"
          }
        }
      }
    },
    "CounterDetailedDto": {
      "description": "CounterDetailedDto",
      "type": "object",
      "properties": {
        "Creation": {
          "format": "date-time",
          "description": "Gets or sets the creation.",
          "type": "string"
        },
        "Type": {
          "description": "Gets or sets the type.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Mono": {
          "format": "int32",
          "description": "Gets or sets the mono.",
          "type": "integer"
        },
        "FullColor": {
          "format": "int32",
          "description": "Gets or sets the full color.",
          "type": "integer"
        },
        "SingleColor": {
          "format": "int32",
          "description": "Gets or sets the color of the single.",
          "type": "integer"
        },
        "TwoColor": {
          "format": "int32",
          "description": "Gets or sets the color of the two.",
          "type": "integer"
        },
        "Scans": {
          "format": "int32",
          "description": "Gets or sets the scans.",
          "type": "integer"
        },
        "Tag": {
          "description": "Tag",
          "type": "string"
        },
        "Source": {
          "description": "Gets or sets the source.",
          "enum": [
            "Mps",
            "HpSds"
          ],
          "type": "string"
        },
        "Total": {
          "format": "int32",
          "description": "Gets or sets the total.",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[CountersBlendDeviceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountersBlendDeviceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CountersBlendDeviceDto": {
      "description": "Represent a counters blend object",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Customer Id",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "DeviceId": {
          "description": "DeviceId",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Serial Number",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Asset Number",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Last Update in yyyy-MM-dd format",
          "type": "string"
        },
        "CountersBlend": {
          "description": "CountersBlend",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountersBlendCounterDto"
          }
        }
      }
    },
    "CountersBlendCounterDto": {
      "description": "Counters blend retrieved for the date specified",
      "type": "object",
      "properties": {
        "Date": {
          "format": "date-time",
          "description": "Date received",
          "type": "string"
        },
        "Entries": {
          "description": "Counters blended entries for the date specified",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueDto[String,Decimal]"
          }
        }
      }
    },
    "CodeValueDto[String,Decimal]": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Value": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "GetCountersCatalogRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Brands": {
          "description": "Gets or sets the brand.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsAuto": {
          "description": "Gets or sets the is automatic.",
          "type": "boolean"
        },
        "IsObsolete": {
          "description": "Gets or sets the is obsolete.",
          "type": "boolean"
        },
        "IsDcaCalculated": {
          "description": "Gets or sets the is dca calculated.",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CounterCatalogItemDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterCatalogItemDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CounterCatalogItemDto": {
      "type": "object",
      "properties": {
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "CounterName": {
          "description": "Gets or sets the name of the counter.",
          "type": "string"
        },
        "CounterType": {
          "description": "Gets or sets the type of the counter.",
          "type": "string"
        },
        "Source": {
          "description": "Gets or sets the source.",
          "enum": [
            "Mps",
            "HpSds"
          ],
          "type": "string"
        },
        "TotalCounters": {
          "format": "int32",
          "description": "Gets or sets the total counters.",
          "type": "integer"
        },
        "PaperSize": {
          "description": "Gets or sets the size of the paper.",
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the type of the color.",
          "type": "string"
        },
        "ColorUsage": {
          "description": "Gets or sets the color usage.",
          "type": "string"
        },
        "PageCount": {
          "description": "Gets or sets the page count.",
          "type": "string"
        },
        "Function": {
          "description": "Gets or sets the function.",
          "type": "string"
        },
        "Other": {
          "description": "Gets or sets the other.",
          "type": "string"
        },
        "Destination": {
          "description": "Gets or sets the destination.",
          "type": "string"
        },
        "Duplex": {
          "description": "Gets or sets the duplex.",
          "type": "string"
        },
        "Usage": {
          "description": "Gets or sets the usage.",
          "type": "string"
        },
        "PagesPerSheet": {
          "description": "Gets or sets the pages per sheet.",
          "type": "string"
        },
        "AllowSummarize": {
          "description": "Gets or sets a value indicating whether [allow summarize].",
          "type": "boolean"
        },
        "RowStatus": {
          "description": "Gets or sets the row status.",
          "type": "string"
        },
        "IsObsolete": {
          "description": "Gets or sets a value indicating whether this instance is obsolete.",
          "type": "boolean"
        },
        "IsDcaCalculated": {
          "description": "Gets or sets a value indicating whether this instance is dca calculated.",
          "type": "boolean"
        },
        "Note": {
          "description": "Gets or sets the note.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SaveCountersCatalogRequest": {
      "type": "object",
      "properties": {
        "CounterCatalogItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterCatalogItemDto"
          }
        }
      }
    },
    "SingleResultResponse[CounterCatalogSuggestionsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CounterCatalogSuggestionsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CounterCatalogSuggestionsDto": {
      "type": "object",
      "properties": {
        "PaperSize": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ColorType": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ColorUsage": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PageCount": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Function": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Other": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Destination": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Duplex": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Usage": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PagesPerSheet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetDeviceCountersRequest": {
      "description": "GetDeviceCountersRequest",
      "required": [
        "FromDate",
        "ToDate",
        "Id"
      ],
      "type": "object",
      "properties": {
        "FromDate": {
          "format": "date-time",
          "description": "Gets or sets the from date.",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "Gets or sets the to date.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[CounterDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CounterDto": {
      "description": "Device counter fo pages",
      "type": "object",
      "properties": {
        "Received": {
          "format": "date-time",
          "description": "The date when the counter was metered",
          "type": "string"
        },
        "Mono": {
          "format": "int32",
          "description": "The value of mono counter",
          "type": "integer"
        },
        "Color": {
          "format": "int32",
          "description": "The value of color counter",
          "type": "integer"
        },
        "MonoA3": {
          "format": "int32",
          "description": "The value of A3 mono counter",
          "type": "integer"
        },
        "ColorA3": {
          "format": "int32",
          "description": "The value of A3 color counter",
          "type": "integer"
        },
        "Fax": {
          "format": "int32",
          "description": "The value of fax counter",
          "type": "integer"
        },
        "AccountName": {
          "description": "The account or system name where the counter comes from",
          "type": "string"
        },
        "IdAccount": {
          "format": "int32",
          "description": "The account or system id where the counter comes from",
          "type": "integer"
        },
        "IsFromBlend": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ExportDeviceCountersRequest": {
      "description": "ExportDeviceCountersRequest",
      "required": [
        "FromDate",
        "ToDate",
        "Id"
      ],
      "type": "object",
      "properties": {
        "ExportToCsv": {
          "description": "Gets or sets a value indicating whether [export to CSV] or [export to XSLSX].",
          "type": "boolean"
        },
        "FromDate": {
          "format": "date-time",
          "description": "Gets or sets the from date.",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "Gets or sets the to date.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateDeviceCounterRequest": {
      "description": "UpdateDeviceCounterRequest",
      "required": [
        "DeviceId",
        "Received",
        "Mono"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "the Device Id",
          "type": "string"
        },
        "Received": {
          "format": "date-time",
          "description": "The date when the counter was metered",
          "type": "string"
        },
        "Mono": {
          "format": "int32",
          "description": "The value of mono counter",
          "type": "integer"
        },
        "Color": {
          "format": "int32",
          "description": "The value of color counter",
          "type": "integer"
        },
        "MonoA3": {
          "format": "int32",
          "description": "The value of A3 mono counter",
          "type": "integer"
        },
        "ColorA3": {
          "format": "int32",
          "description": "The value of A3 color counter",
          "type": "integer"
        },
        "Fax": {
          "format": "int32",
          "description": "The value of fax counter",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[CounterDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CounterDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateCounterDetailedTagRequest": {
      "description": "",
      "required": [
        "DeviceId",
        "Description"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "",
          "type": "string"
        },
        "Description": {
          "description": "",
          "type": "string"
        },
        "Tag": {
          "description": "",
          "type": "string"
        }
      }
    },
    "DeleteDeviceCounterRequest": {
      "required": [
        "CounterId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "CounterId": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[BaseResponse]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/BaseResponse",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[MaintenanceKitCounterDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintenanceKitCounterDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "MaintenanceKitCounterDto": {
      "description": "Represent the level of a maintenance kit",
      "type": "object",
      "properties": {
        "Key": {
          "description": "Gets or sets the key.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets the value.",
          "type": "string"
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the maintenance kit Type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the maintenance kit Color."
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Defines the lastupdate date of this maintenance kit",
          "type": "string"
        },
        "Consumable": {
          "description": "Gets or sets the consumable name",
          "type": "string"
        },
        "ResidualLevelPercentage": {
          "description": "Gets or sets the residual level percentage",
          "type": "string"
        }
      }
    },
    "UploadOfflineDeviceCountersRequest": {
      "description": "Upload offline device counters request object",
      "required": [
        "CustomerCode"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "The customer code",
          "type": "string"
        },
        "SerialNumber": {
          "description": "The serial number of the printer",
          "type": "string"
        },
        "AssetNumber": {
          "description": "The asset number of the printer",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "The externalidentifier of the printer",
          "type": "string"
        },
        "Counters": {
          "description": "The list of counter to upload",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterDto"
          }
        }
      }
    },
    "SingleResultResponse[OfflineDeviceCountersResponse]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/OfflineDeviceCountersResponse",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OfflineDeviceCountersResponse": {
      "description": "OfflineDeviceCountersResponse",
      "type": "object",
      "properties": {
        "Device": {
          "$ref": "#/definitions/OfflineCounterDeviceDto",
          "description": "Gets or sets the device."
        },
        "DealerLogo": {
          "description": "Gets or sets the dealer logo.",
          "type": "string"
        },
        "ProductUserGuide": {
          "$ref": "#/definitions/ProductUserGuideDto",
          "description": "Gets or sets the product user guide."
        },
        "Color": {
          "format": "int32",
          "description": "Gets or sets the color.",
          "type": "integer"
        },
        "FormatType": {
          "format": "int32",
          "description": "Gets or sets the type of the format.",
          "type": "integer"
        },
        "LanguageCode": {
          "description": "Gets or sets the language.",
          "type": "string"
        }
      }
    },
    "OfflineCounterDeviceDto": {
      "description": "Model used by the Offline counter device dto without capability privacy filter",
      "type": "object",
      "properties": {
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeCode": {
          "description": "Gets or sets the office code.",
          "type": "string"
        },
        "OfficeDescription": {
          "description": "Gets or sets the office description.",
          "type": "string"
        },
        "Counter": {
          "$ref": "#/definitions/CounterDto",
          "description": "Gets the last counter object."
        },
        "Product": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the product."
        },
        "Install": {
          "format": "date-time",
          "description": "Gets or sets the install.",
          "type": "string"
        },
        "Uninstall": {
          "format": "date-time",
          "description": "Gets or sets the uninstall.",
          "type": "string"
        },
        "MonoInstallCounter": {
          "format": "int32",
          "description": "Gets or sets the mono install counter.",
          "type": "integer"
        },
        "ColorInstallCounter": {
          "format": "int32",
          "description": "Gets or sets the color install counter.",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ProductUserGuideDto": {
      "description": "ProductUserGuideDto",
      "type": "object",
      "properties": {
        "Text": {
          "description": "Gets or sets the text.",
          "type": "string"
        },
        "Attachment": {
          "description": "Gets or sets the attachment.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ProductDto": {
      "description": "Product",
      "type": "object",
      "properties": {
        "Logo": {
          "description": "Gets or sets the logo.",
          "type": "string"
        },
        "Color": {
          "format": "int32",
          "description": "Gets or sets the color.",
          "type": "integer"
        },
        "FormatType": {
          "format": "int32",
          "description": "Gets or sets the type of the format.",
          "type": "integer"
        },
        "HasGapInfo": {
          "description": "Gets or sets a value indicating whether this instance has gap information.",
          "type": "boolean"
        },
        "Model": {
          "description": "Gets or sets the model.",
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SetDeviceCountesRequest": {
      "description": "SetDeviceCountesRequest request object",
      "type": "object",
      "properties": {
        "Identifier": {
          "description": "Device Identifier",
          "type": "string"
        },
        "Token": {
          "description": "Device Customer field security Token",
          "type": "string"
        },
        "Mono": {
          "format": "int32",
          "description": "Mono counter",
          "type": "integer"
        },
        "Color": {
          "format": "int32",
          "description": "Color counter",
          "type": "integer"
        },
        "MonoA3": {
          "format": "int32",
          "description": "Mono A3 counter",
          "type": "integer"
        },
        "ColorA3": {
          "format": "int32",
          "description": "Color A3 counter",
          "type": "integer"
        }
      }
    },
    "CheckCountersRequest": {
      "required": [
        "Brand",
        "MonoCountersDetailed"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "Models": {
          "description": "Gets or sets the models.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "MonoCountersDetailed": {
          "description": "Gets or sets the mono counters detailed.",
          "type": "string"
        },
        "ColorCountersDetailed": {
          "description": "Gets or sets the color counters detailed.",
          "type": "string"
        },
        "MonoThreshold": {
          "format": "int32",
          "description": "Gets or sets the mono threshold.",
          "type": "integer"
        },
        "ColorThreshold": {
          "format": "int32",
          "description": "Gets or sets the color threshold.",
          "type": "integer"
        },
        "SaveReport": {
          "description": "Gets or sets a value indicating whether [save report].",
          "type": "boolean"
        },
        "TableVersionInput": {
          "description": "Gets or sets the table version.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[CheckCountersDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckCountersDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CheckCountersDto": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "Dealer": {
          "type": "string"
        },
        "DeviceId": {
          "type": "string"
        },
        "ParkedProductId": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "Brand": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "Firmware": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "Customer": {
          "type": "string"
        },
        "HasAffinity": {
          "type": "string"
        },
        "IsDca4": {
          "type": "string"
        },
        "CounterMono": {
          "format": "int32",
          "type": "integer"
        },
        "CounterColor": {
          "format": "int32",
          "type": "integer"
        },
        "TotalDetailedCounterMono": {
          "format": "int32",
          "type": "integer"
        },
        "TotalDetailedCounterColor": {
          "format": "int32",
          "type": "integer"
        },
        "DiffMono": {
          "format": "int32",
          "type": "integer"
        },
        "DiffColor": {
          "format": "int32",
          "type": "integer"
        },
        "IsOverMonoThreshold": {
          "format": "int32",
          "type": "integer"
        },
        "IsOverColorThreshold": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SendEXplorerInvitationRequest": {
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "IsReinstallation": {
          "description": "Gets or sets a value indicating whether this instance is reinstallation.",
          "type": "boolean"
        },
        "CustomerNominative": {
          "description": "Gets or sets the customer nominative.",
          "type": "string"
        },
        "CustomerEmail": {
          "description": "Gets or sets the customer email.",
          "type": "string"
        },
        "IsUpdateCustomerData": {
          "description": "Gets or sets a value indicating whether this instance is update customer data.",
          "type": "boolean"
        },
        "Cc": {
          "description": "Gets or sets the CC",
          "type": "string"
        },
        "Bcc": {
          "description": "Gets or sets the BCC",
          "type": "string"
        },
        "NotificationId": {
          "description": "Gets or sets the notification identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomersRequest": {
      "description": "Represents a request to retrieve a pagedlist of customers",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "HasHpSds": {
          "description": "Gets or sets the has hp SDS.",
          "type": "boolean"
        },
        "HasPrintReleaf": {
          "description": "Gets or sets the has PrintReleaf.",
          "type": "boolean"
        },
        "ActiveCustomerFilter": {
          "description": "Gets or sets the active customer filter.",
          "type": "boolean"
        },
        "CommunicationStatus": {
          "description": "Gets or sets the communication status.",
          "enum": [
            "All",
            "LastDay",
            "LastPeriod",
            "OverPeriod"
          ],
          "type": "string"
        },
        "Tags": {
          "description": "Gets or sets the tags (separated by , ).",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerListDto": {
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "TimeZone": {
          "description": "Gets or sets the time zone.",
          "type": "string"
        },
        "TimeZoneIana": {
          "description": "Gets or sets the time zone iana.",
          "type": "string"
        },
        "Tags": {
          "description": "Gets or sets the tag names.",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        },
        "CountryName": {
          "description": "Gets or sets the name of the country.",
          "type": "string"
        },
        "CountryIsEu": {
          "description": "Gets or sets a value indicating whether [country is eu].",
          "type": "boolean"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomerWithMpsDetailsRequest": {
      "description": "GetCustomerWithMpsDetailsRequest",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "ActiveCustomerFilter": {
          "description": "Gets or sets the active customer filter.",
          "type": "boolean"
        },
        "CommunicationStatus": {
          "description": "Gets or sets the communication status.",
          "enum": [
            "All",
            "LastDay",
            "LastPeriod",
            "OverPeriod"
          ],
          "type": "string"
        },
        "SDSOnly": {
          "description": "Gets or sets the filter jam.",
          "type": "boolean"
        },
        "Tags": {
          "description": "Gets or sets the tags (separated by , ).",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerWithMpsDetailsDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerWithMpsDetailsDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerWithMpsDetailsDto": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "PrintersInsideProjects": {
          "format": "int32",
          "type": "integer"
        },
        "PrintersNotInsideProjects": {
          "format": "int32",
          "type": "integer"
        },
        "PrintersNew": {
          "format": "int32",
          "type": "integer"
        },
        "PrintersDisconnected": {
          "format": "int32",
          "type": "integer"
        },
        "ToManageAlerts": {
          "format": "int32",
          "description": "Gets the number of alerts to manage",
          "type": "integer"
        },
        "ManageNotInstalledAlerts": {
          "format": "int32",
          "description": "Gets the number of shipped alerts not yet installed (Excluded shipped as Stock).",
          "type": "integer"
        },
        "InstalledAlerts": {
          "format": "int32",
          "description": "Gets the number of installed alerts.",
          "type": "integer"
        },
        "ShippedAlerts": {
          "format": "int32",
          "description": "Gets the shipped alerts (Excluded shipped as Stock).",
          "type": "integer"
        },
        "MonthlyVolumeManagedMono": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyVolumeManagedColor": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyVolumeNotManagedMono": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyVolumeNotManagedColor": {
          "format": "int32",
          "type": "integer"
        },
        "NoteForHomepage": {
          "type": "string"
        },
        "PrintReleafCreatedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "IdOfOpenedReinstallationTicket": {
          "format": "int32",
          "type": "integer"
        },
        "DealerExplorerCleanupDayLimit": {
          "format": "int32",
          "type": "integer"
        },
        "LastPingDate": {
          "format": "date-time",
          "type": "string"
        },
        "LastUploadDate": {
          "format": "date-time",
          "type": "string"
        },
        "ActiveConfigurationsCount": {
          "format": "int32",
          "type": "integer"
        },
        "PingingExplorersCount": {
          "format": "int32",
          "type": "integer"
        },
        "ExplorerCount": {
          "format": "int32",
          "type": "integer"
        },
        "JamStatus": {
          "format": "int32",
          "type": "integer"
        },
        "ExplorerStatus": {
          "enum": [
            "ExplorerAllOk",
            "ExplorerNoUpload",
            "ExplorerNoConfiguration",
            "ExplorerNotWorking",
            "ExplorerNotFound"
          ],
          "type": "string"
        },
        "SDSTotalDevices": {
          "format": "int32",
          "description": "Number of SDS devices",
          "type": "integer"
        },
        "SDSActionsToComplete": {
          "format": "int32",
          "description": "Number of open SDS actions",
          "type": "integer"
        },
        "SDSDevicesWithAnomalies": {
          "format": "int32",
          "description": "Number of printers with non HP genuine Cartridge or has early toner replacement",
          "type": "integer"
        },
        "Nominative": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Telephone": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "ZipCode": {
          "type": "string"
        },
        "Province": {
          "type": "string"
        },
        "Tags": {
          "type": "string"
        },
        "FullAddress": {
          "type": "string",
          "readOnly": true
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        },
        "CountryName": {
          "description": "Gets or sets the name of the country.",
          "type": "string"
        },
        "CountryIsEu": {
          "description": "Gets or sets a value indicating whether [country is eu].",
          "type": "boolean"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[CreateCustomerDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/CreateCustomerDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "CreateCustomerDto": {
      "description": "Create Customer dto",
      "required": [
        "DealerCode",
        "CustomerDescription",
        "CountryCode"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Sets the Dealer code",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Sets the description",
          "type": "string"
        },
        "TimeZone": {
          "description": "Sets the Time Zone",
          "type": "string"
        },
        "SendExplorerInstallationInvitation": {
          "description": "If true will send the explorer installation invitation (if configured by the dealer)",
          "type": "boolean"
        },
        "NotificationId": {
          "description": "Gets or sets the notification identifier.",
          "type": "string"
        },
        "MailAddress": {
          "description": "Sets the Email address",
          "type": "string"
        },
        "Telephone": {
          "description": "Sets telephone.",
          "type": "string"
        },
        "Address": {
          "description": "Sets the address.",
          "type": "string"
        },
        "City": {
          "description": "Sets the city.",
          "type": "string"
        },
        "ZipCode": {
          "description": "Sets the zip code.",
          "type": "string"
        },
        "Province": {
          "description": "Sets the province (or district).",
          "type": "string"
        },
        "Nominative": {
          "description": "Sets a the nominative of the company manager",
          "type": "string"
        },
        "NoteForHomepage": {
          "description": "Sets the dealer notes (visible only for the dealer).",
          "type": "string"
        },
        "Note": {
          "description": "Sets the customer notes.",
          "type": "string"
        },
        "UseDealerDefaultProjectSettings": {
          "description": "If true, this customer will use the dealer default project settings.",
          "type": "boolean"
        },
        "UseDealerBillBookingSettings": {
          "description": "If true, this customer will use the dealer bill booking settings.",
          "type": "boolean"
        },
        "ProjectSCFirstDate": {
          "format": "date-time",
          "description": "Sets the project SC first date.",
          "type": "string"
        },
        "EnableSDS": {
          "description": "If true, enable the HP SDS.",
          "type": "boolean"
        },
        "ExternalIdentifier": {
          "description": "Sets an external identifier.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Sets the country code.",
          "type": "string"
        },
        "CustomFieldValues": {
          "description": "Sets the custom field values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "NotificationIdReadingProblems": {
          "description": "Gets or sets the notification identifier reading problems.",
          "type": "string"
        },
        "MailAddressesReadingProblems": {
          "description": "Gets or sets the mail addresses reading problems.",
          "type": "string"
        },
        "NotificationIdReadingProblemsExplorer": {
          "description": "Gets or sets the notification identifier reading problems explorer.",
          "type": "string"
        },
        "MailAddressesReadingProblemsExplorer": {
          "description": "Gets or sets the mail addresses reading problems explorer.",
          "type": "string"
        },
        "NotificationIdDelivery": {
          "description": "Gets or sets the notification identifier delivery.",
          "type": "string"
        },
        "MailAddressesDelivery": {
          "description": "Gets or sets the mail addresses delivery.",
          "type": "string"
        },
        "SelectedTagsName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CreateCustomerResponse": {
      "description": "Represent a response for customer creation",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The code of the newly created Customer",
          "type": "string"
        },
        "Code": {
          "description": "The code of the newly created Customer",
          "type": "string"
        },
        "Description": {
          "description": "The description of the newly created Customer",
          "type": "string"
        },
        "ExplorerDownloadUrl": {
          "description": "eXplorer download url",
          "type": "string"
        },
        "SendExplorerInstallationInvitationFailed": {
          "description": "Gets or sets a value indicating whether [send explorer installation invitation failed].",
          "type": "boolean"
        },
        "EnableSDSFailed": {
          "description": "Gets or sets a value indicating whether [enable SDS failed].",
          "type": "boolean"
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[UpdateCustomerDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/UpdateCustomerDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateCustomerDto": {
      "description": "UpdateCustomerDto",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Customer Description",
          "type": "string"
        },
        "VatNumber": {
          "description": "Vat Number",
          "type": "string"
        },
        "FiscalCode": {
          "description": "Fiscal Code",
          "type": "string"
        },
        "TrialEndAt": {
          "format": "date-time",
          "description": "TrialEndAt",
          "type": "string"
        },
        "IsTonerEnabled": {
          "description": "Is Toner Enabled",
          "type": "boolean"
        },
        "IsPhotoEnabled": {
          "description": "Is Photo Enabled",
          "type": "boolean"
        },
        "IsMaintKitEnabled": {
          "description": "Is Maintenance Kit Enabled",
          "type": "boolean"
        },
        "IsWasteTonerBoxEnabled": {
          "description": "Is Waste Toner Box Enabled",
          "type": "boolean"
        },
        "IsTransferKitEnabled": {
          "description": "Is Transfer Kit Enabled",
          "type": "boolean"
        },
        "TimeZone": {
          "description": "CustomerTimeZone",
          "type": "string"
        },
        "CurrencyId": {
          "description": "Gets or sets the currency identifier.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        },
        "Nominative": {
          "description": "Nominative",
          "type": "string"
        },
        "EmailAddress": {
          "description": "EmailAddress",
          "type": "string"
        },
        "Telephone": {
          "description": "Telephone",
          "type": "string"
        },
        "NoteForHomepage": {
          "description": "Dealer Notes For Homepage",
          "type": "string"
        },
        "Note": {
          "description": "Customer notes",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "Note For Homepage",
          "type": "string"
        },
        "CustomFieldValues": {
          "description": "Update Custom field Values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "EnableMassiveShipping": {
          "type": "boolean"
        },
        "MassiveShippingSendNotification": {
          "type": "boolean"
        },
        "MassiveShippingSendLogistic": {
          "type": "boolean"
        },
        "LogisticMails": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "ZipCode": {
          "type": "string"
        },
        "Province": {
          "type": "string"
        },
        "SelectedTagsName": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SingleResultResponse[CustomerAlertSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerAlertSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerAlertSettingsDto": {
      "description": "",
      "type": "object",
      "properties": {
        "IsTonerEnabled": {
          "description": "Gets or set the IsTonerEnabled",
          "type": "boolean"
        },
        "IsPhotoEnabled": {
          "description": "Gets or sets the IsPhotoEnabled",
          "type": "boolean"
        },
        "IsMaintKitEnabled": {
          "description": "Gets or sets the IsMaintKitEnabled",
          "type": "boolean"
        },
        "IsWasteTonerBoxEnabled": {
          "description": "Gets or sets the IsWasteTonerBoxEnabled",
          "type": "boolean"
        },
        "IsTransferKitEnabled": {
          "description": "Gets or sets the  IsTransferKitEnabled",
          "type": "boolean"
        },
        "CustomerCode": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[CustomerAlertSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/CustomerAlertSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[CustomerAccessoriesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerAccessoriesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerAccessoriesDto": {
      "type": "object",
      "properties": {
        "Exclusions": {
          "type": "string"
        },
        "Overrides": {
          "type": "string"
        },
        "OutOfDateLimitDevices": {
          "format": "int32",
          "description": "Out of Date limit for devices in the portal 2.0",
          "type": "integer"
        },
        "OutOfDateLimitConnectors": {
          "format": "int32",
          "description": "Out of Date limit for connectors in the portal 2.0",
          "type": "integer"
        },
        "ExportPreferences": {
          "$ref": "#/definitions/ExportPreferencesDto",
          "description": "Export Preferences"
        }
      }
    },
    "ExportPreferencesDto": {
      "description": "Export Preferences",
      "type": "object",
      "properties": {
        "CsvDelimiter": {
          "description": "Csv Delimiter",
          "type": "string"
        },
        "CsvQualifier": {
          "description": "Csv Qualifier",
          "type": "string"
        },
        "BracketsInColumnName": {
          "description": "Brackets in column names",
          "type": "boolean"
        },
        "CsvDateTimeFormat": {
          "description": "Csv Date Time Format",
          "type": "string"
        }
      }
    },
    "UpdateRequest[UpdateCustomerAccessoriesRequest]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/UpdateCustomerAccessoriesRequest",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateCustomerAccessoriesRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "AccessoryField": {
          "description": "Accessory field value",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerAdvancedOptionsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerAdvancedOptionsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerAdvancedOptionsDto": {
      "description": "Customer advanced options",
      "type": "object",
      "properties": {
        "ExportPreferences": {
          "$ref": "#/definitions/ExportPreferencesDto",
          "description": "Export Preferences"
        },
        "OutOfDateLimitDevices": {
          "format": "int32",
          "description": "Out of Date limit for devices in the portal 2.0",
          "type": "integer"
        },
        "OutOfDateLimitConnectors": {
          "format": "int32",
          "description": "Out of Date limit for connectors in the portal 2.0",
          "type": "integer"
        },
        "Exclusions": {
          "description": "DCA devices exclusions configuration",
          "type": "string"
        },
        "Overrides": {
          "description": "DCA devices overrides configuration",
          "type": "string"
        }
      }
    },
    "UpdateCustomerAdvancedOptionsRequest": {
      "description": "Update customer preferences dynamic object",
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "Options": {
          "description": "Update customer advanced options",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "CustomerDealerAssociationRequest": {
      "type": "object",
      "properties": {
        "SelectedCustomerCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DestinationDealerCode": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[CustomerDealerAssociationDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerDealerAssociationDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerDealerAssociationDto": {
      "description": "Dealer customer field class",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Represent CounterBelnds action",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Represent CounterBelnds action",
          "type": "string"
        },
        "CounterBlends": {
          "description": "Represent CounterBelnds action",
          "type": "boolean"
        },
        "CustomFields": {
          "description": "Represent CustomFieds action",
          "type": "boolean"
        },
        "CustomerNotifications": {
          "description": "Represent CustomerNotifications action",
          "type": "boolean"
        },
        "Contracts": {
          "description": "Represent Contracts action",
          "type": "boolean"
        }
      }
    },
    "UpdateCustomerDealerAssociationRequest": {
      "type": "object",
      "properties": {
        "UseWorkflow": {
          "type": "boolean"
        },
        "ForceDeleteCounterBlends": {
          "type": "boolean"
        },
        "ForceDeleteCustomFields": {
          "type": "boolean"
        },
        "ForceDeleteCustomerNotifications": {
          "format": "int32",
          "type": "integer"
        },
        "ForceDeleteContracts": {
          "type": "boolean"
        },
        "SelectedCustomerCodes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DestinationDealerCode": {
          "type": "string"
        }
      }
    },
    "SingleResultResponse[Nullable[Guid]]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "string"
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerServicesStatusDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerServicesStatusDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerServicesStatusDto": {
      "type": "object",
      "properties": {
        "PrintreleafActive": {
          "description": "Gets or sets a value indicating whether [printreleaf active].",
          "type": "boolean"
        },
        "CanActivatePrintreleaf": {
          "description": "Gets or sets a value indicating whether this instance can activate printreleaf.",
          "type": "boolean"
        },
        "HpSdsActive": {
          "description": "Gets or sets a value indicating whether [hp SDS active].",
          "type": "boolean"
        },
        "CanActivateHpSds": {
          "description": "Gets or sets a value indicating whether this instance can activate hp SDS.",
          "type": "boolean"
        },
        "CanActivatePaperCut": {
          "description": "Gets or sets a value indicating whether this instance can activate paper cut.",
          "type": "boolean"
        },
        "PaperCutActive": {
          "description": "Gets or sets a value indicating whether [paper cut active].",
          "type": "boolean"
        },
        "RemoteWsActive": {
          "description": "Gets or sets a value indicating whether [remote ws active].",
          "type": "boolean"
        },
        "CanActivateSharpFSS": {
          "description": "Gets or sets a value indicating whether this instance can activate Sharp FSS.",
          "type": "boolean"
        },
        "SharpFSSActive": {
          "description": "Gets or sets a value indicating whether [Sharp FSS active].",
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[PaperCutSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PaperCutSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PaperCutSettingsDto": {
      "type": "object",
      "properties": {
        "ConnectorIdentifier": {
          "type": "string"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "FileFolder": {
          "type": "string"
        },
        "AllowedExtensions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "MaxDegreeOfParallelism": {
          "format": "int32",
          "type": "integer"
        },
        "SchedulerIntervalMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "CsvSeparator": {
          "type": "string"
        },
        "CsvTextQualifier": {
          "type": "string"
        },
        "Charset": {
          "type": "string"
        }
      }
    },
    "EnablePaperCutRequest": {
      "type": "object",
      "properties": {
        "ConnectorIdentifier": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "FileFolder": {
          "type": "string"
        },
        "MaxDegreeOfParallelism": {
          "format": "int32",
          "type": "integer"
        },
        "SchedulerIntervalMinutes": {
          "format": "int32",
          "type": "integer"
        },
        "CsvSeparator": {
          "type": "string"
        },
        "CsvTextQualifier": {
          "type": "string"
        },
        "Charset": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[StoredFileDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StoredFileDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "StoredFileDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "CreationDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Size": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "GetCustomerMediaRequest": {
      "required": [
        "MediaFileName",
        "Id"
      ],
      "type": "object",
      "properties": {
        "MediaFileName": {
          "description": "the media file name to retrieve",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerExplorerSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerExplorerSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerExplorerSettingsDto": {
      "type": "object",
      "properties": {
        "Dca4Stack": {
          "description": "Gets or sets the dca4 stack.",
          "enum": [
            "EU",
            "US"
          ],
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[CustomerExplorerSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/CustomerExplorerSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetByIdAndCustomerIdRequest": {
      "required": [
        "CustomerId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetWorkflowOperationsPagedRequest": {
      "required": [
        "Id",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "OperationType": {
          "description": "Gets or sets the type of the operation.",
          "enum": [
            "HPScan",
            "ZebraReboot",
            "ZebraUpdateFw",
            "ZebraSet",
            "EpsonScan",
            "EpsonProcessEmail",
            "SharpFss",
            "HpLfpCollectXml",
            "HpLfpCollectXmlByDeviceId",
            "PortalImportExcelHeader",
            "PortalImportExcelDetail",
            "PortalMoveCustomersToOtherDealer",
            "PortalMoveCustomerToOtherDealer"
          ],
          "type": "string"
        },
        "IsAuto": {
          "description": "Gets or sets a value indicating whether this instance is automatic.",
          "type": "boolean"
        },
        "CreatedDateUtcFrom": {
          "format": "date-time",
          "description": "Gets or sets the created date UTC from.",
          "type": "string"
        },
        "CreatedDateUtcTo": {
          "format": "date-time",
          "description": "Gets or sets the created date UTC to.",
          "type": "string"
        },
        "OperationId": {
          "description": "Gets or sets the operation identifier.",
          "type": "string"
        },
        "ParentOperationId": {
          "description": "Gets or sets the parent operation identifier.",
          "type": "string"
        },
        "HasParentOperation": {
          "description": "Gets or sets the has parent operation.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[WorkflowOperationInfoDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowOperationInfoDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "WorkflowOperationInfoDto": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "ParentOperationId": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "DeviceId": {
          "type": "string"
        },
        "DeviceSerialNumber": {
          "type": "string"
        },
        "IsTicketOperator": {
          "type": "boolean"
        },
        "Account": {
          "type": "string"
        },
        "AccountEmail": {
          "type": "string"
        },
        "CreatedDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ScheduledDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "RunningDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "CompletedDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "OperationType": {
          "enum": [
            "HPScan",
            "ZebraReboot",
            "ZebraUpdateFw",
            "ZebraSet",
            "EpsonScan",
            "EpsonProcessEmail",
            "SharpFss",
            "HpLfpCollectXml",
            "HpLfpCollectXmlByDeviceId",
            "PortalImportExcelHeader",
            "PortalImportExcelDetail",
            "PortalMoveCustomersToOtherDealer",
            "PortalMoveCustomerToOtherDealer"
          ],
          "type": "string"
        },
        "Details": {
          "type": "string"
        },
        "IsAuto": {
          "type": "boolean"
        },
        "Status": {
          "enum": [
            "Scheduled",
            "Created",
            "Running",
            "Success",
            "Failure",
            "PartialSuccess"
          ],
          "type": "string"
        },
        "Result": {
          "type": "string"
        },
        "TechnicalResult": {
          "type": "string"
        },
        "CanDeleteSchedulation": {
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[WorkflowOperationInfoDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/WorkflowOperationInfoDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetByIdAndCustomerIdPagedRequest": {
      "required": [
        "CustomerId",
        "Id",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[WorkflowOperationLogMessageInfoDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowOperationLogMessageInfoDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "WorkflowOperationLogMessageInfoDto": {
      "type": "object",
      "properties": {
        "OperationId": {
          "type": "string"
        },
        "CreatedDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerEpsonSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerEpsonSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerEpsonSettingsDto": {
      "description": "",
      "type": "object",
      "properties": {
        "EpsonERSCustomerId": {
          "description": "Gets or set the ERS Customer ID",
          "type": "string"
        },
        "EpsonUSBCustomerGuid": {
          "description": "Gets or sets the Usb Customer Guid",
          "type": "string"
        },
        "EpsonUSBCustomerDateFormat": {
          "description": "Gets or sets the USB Date Format to use when parsing the CSV",
          "type": "string"
        },
        "EpsonUSBAvailableDateFormats": {
          "description": "Gets or sets the USB Date Format to use when parsing the CSV",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "CustomerCode": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[CustomerEpsonSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/CustomerEpsonSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "CancellationToken": {
      "type": "object",
      "properties": {
        "IsCancellationRequested": {
          "type": "boolean",
          "readOnly": true
        },
        "CanBeCanceled": {
          "type": "boolean",
          "readOnly": true
        },
        "WaitHandle": {
          "$ref": "#/definitions/WaitHandle",
          "readOnly": true
        }
      }
    },
    "WaitHandle": {
      "type": "object",
      "properties": {
        "Handle": {
          "$ref": "#/definitions/Object"
        },
        "SafeWaitHandle": {
          "$ref": "#/definitions/SafeWaitHandle"
        }
      }
    },
    "SafeWaitHandle": {
      "type": "object",
      "properties": {
        "IsInvalid": {
          "type": "boolean",
          "readOnly": true
        },
        "IsClosed": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "ListResultResponse[CustomerCredentialDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerCredentialDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerCredentialDto": {
      "description": "Defines the customercredential object",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Defines the Name of the credential set",
          "type": "string"
        },
        "LastUpdateAt": {
          "format": "date-time",
          "description": "Defines the last update of the set",
          "type": "string"
        },
        "LastUpdateAccount": {
          "description": "Defines the last User has created or updated the set",
          "type": "string"
        },
        "SnmpCredentialType": {
          "description": "Defines the type of the credentials",
          "enum": [
            "SnmpV1V2R",
            "SnmpV1V2RW",
            "SnmpV3"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateCustomerCredentialRequest": {
      "description": "Defines the create customer credential request",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Defines the customer of the credential set",
          "type": "string"
        },
        "Name": {
          "description": "Defines the Name of the credential set",
          "type": "string"
        },
        "SnmpCredentialType": {
          "description": "Defines the type of the credentials you are set",
          "enum": [
            "SnmpV1V2R",
            "SnmpV1V2RW",
            "SnmpV3"
          ],
          "type": "string"
        },
        "SnmpV1V2ReadCredentials": {
          "$ref": "#/definitions/SnmpV1V2ReadCredentialsDto",
          "description": "Defines the SnmpV1V2 Read Credentials object"
        },
        "SnmpV3Credentials": {
          "$ref": "#/definitions/SnmpV3CredentialsDto",
          "description": "Defines the SnmpV3 Credentials object"
        }
      }
    },
    "SnmpV1V2ReadCredentialsDto": {
      "description": "SnmpV1V2 Read Credentials object",
      "type": "object",
      "properties": {
        "ReadPassword": {
          "description": "Defines the Read Password or the community name",
          "type": "string"
        }
      }
    },
    "SnmpV3CredentialsDto": {
      "description": "SnmpV3 Credentials object",
      "type": "object",
      "properties": {
        "UserName": {
          "description": "Username",
          "type": "string"
        },
        "AuthenticationProtocol": {
          "description": "AuthenticationProtocol (usually MD5 or SHA1)",
          "type": "string"
        },
        "AuthenticationPassword": {
          "description": "AuthenticationPassword",
          "type": "string"
        },
        "PrivacyProtocol": {
          "description": "PrivacyProtocol (usually DES or AES128)",
          "type": "string"
        },
        "PrivacyPassword": {
          "description": "PrivacyPassword",
          "type": "string"
        },
        "Context": {
          "description": "Context",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerCredentialDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerCredentialDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateCustomerCredentialRequest": {
      "description": "Defines the update customer credential request",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Defines the Id of the credential set",
          "type": "string"
        },
        "Name": {
          "description": "Defines the Name of the credential set",
          "type": "string"
        },
        "SnmpCredentialType": {
          "description": "Defines the type of the credentials you are set",
          "enum": [
            "SnmpV1V2R",
            "SnmpV1V2RW",
            "SnmpV3"
          ],
          "type": "string"
        },
        "SnmpV1V2ReadCredentials": {
          "$ref": "#/definitions/SnmpV1V2ReadCredentialsDto",
          "description": "Defines the SnmpV1V2 Read Credentials object"
        },
        "SnmpV3Credentials": {
          "$ref": "#/definitions/SnmpV3CredentialsDto",
          "description": "Defines the SnmpV3 Credentials object"
        }
      }
    },
    "SingleResultResponse[CustomerDashboardDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerDashboardDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerDashboardDto": {
      "description": "Represent a customer's dashboard",
      "type": "object",
      "properties": {
        "SdsDashboard": {
          "$ref": "#/definitions/SdsDashboardDto",
          "description": "Gets or sets the SDS dashboard."
        },
        "MpsDashboardCustomer": {
          "$ref": "#/definitions/MpsDashboardCustomerDto",
          "description": "Gets or sets the MPS dashboard."
        },
        "MustShowWelcome": {
          "description": "Gets or sets a value indicating whether [must show welcome].",
          "type": "boolean"
        },
        "ExplorerSetupLink": {
          "description": "Gets or sets the explorer setup link.",
          "type": "string"
        }
      }
    },
    "SdsDashboardDto": {
      "type": "object",
      "properties": {
        "TotalCustomers": {
          "format": "int32",
          "description": "Gets or sets the total customers.",
          "type": "integer"
        },
        "TotalDevices": {
          "format": "int32",
          "description": "Gets or sets the total devices.",
          "type": "integer"
        },
        "TotalConnectors": {
          "format": "int32",
          "description": "Gets or sets the total connectors.",
          "type": "integer"
        },
        "CommonActionsToComplete": {
          "format": "int32",
          "description": "Gets or sets the common actions to complete.",
          "type": "integer"
        },
        "PredictiveActionsToComplete": {
          "format": "int32",
          "description": "Gets or sets the predictive actions to complete.",
          "type": "integer"
        },
        "NonCommunicatingDevices": {
          "format": "int32",
          "description": "Gets or sets the non communicating devices.",
          "type": "integer"
        },
        "NonCommunicatingConnectors": {
          "format": "int32",
          "description": "Gets or sets the non communicating connectors.",
          "type": "integer"
        },
        "NonGenuineHPDevices": {
          "format": "int32",
          "description": "Gets or sets the non genuine hp devices.",
          "type": "integer"
        },
        "EarlyReplacementDevices": {
          "format": "int32",
          "description": "Gets or sets the early replacement devices.",
          "type": "integer"
        },
        "DevicesWithErrors": {
          "format": "int32",
          "description": "Gets or sets the devices with errors.",
          "type": "integer"
        },
        "DevicesWithWarnings": {
          "format": "int32",
          "description": "Gets or sets the devices with warnings.",
          "type": "integer"
        },
        "ConnectorsWithErrors": {
          "format": "int32",
          "description": "Gets or sets the connectors with errors.",
          "type": "integer"
        },
        "ConnectorsWithWarnings": {
          "format": "int32",
          "description": "Gets or sets the connectors with warnings.",
          "type": "integer"
        },
        "CustomerIsEnable": {
          "description": "Gets or sets a value indicating whether [customer is enable].",
          "type": "boolean"
        }
      }
    },
    "MpsDashboardCustomerDto": {
      "description": "MpsDashboardCustomer",
      "type": "object",
      "properties": {
        "EnabledDevicesByContract": {
          "format": "int32",
          "description": "Gets or sets the enabled devices.",
          "type": "integer"
        },
        "TotalConnectors": {
          "format": "int32",
          "description": "Gets or sets the total devices.",
          "type": "integer"
        },
        "TotalManagedDevices": {
          "format": "int32",
          "description": "Gets or sets the total devices.",
          "type": "integer"
        },
        "HasSentExplorerEmail": {
          "description": "Gets or sets a value indicating whether this instance has sent explorer email.",
          "type": "boolean"
        },
        "EmailExplorerInstallationSentAt": {
          "format": "date-time",
          "description": "Gets or sets the email explorer installation sent at.",
          "type": "string"
        },
        "ContactedDevices": {
          "description": "Gets or sets contacted device",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "ToBeUpdated": {
          "description": "Gets or sets to be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ToBeUpdatedDto"
          }
        },
        "Books": {
          "description": "Gets or sets the books.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "SupplyAlerts": {
          "description": "Gets or sets the supply alerts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "Warnings": {
          "description": "Gets or sets the warnings.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WarningDto"
          }
        },
        "SuppliesDelivery": {
          "description": "Gets or sets the supplies delivery.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        }
      }
    },
    "ToBeUpdatedDto": {
      "description": "Represent a customer's number of devices to be updated",
      "type": "object",
      "properties": {
        "Type": {
          "description": "Type",
          "type": "string"
        },
        "Id": {
          "format": "int32",
          "description": "Gets or sets the identifier.",
          "type": "integer"
        },
        "Count": {
          "format": "int32",
          "description": "Gets or sets the count.",
          "type": "integer"
        }
      }
    },
    "WarningDto": {
      "description": "Represent a customer's warning",
      "type": "object",
      "properties": {
        "Key": {
          "description": "Gets or sets the key.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets the value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[MpsDashboardCustomerDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/MpsDashboardCustomerDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerDashboardRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "CustomerTimeZone": {
          "description": "DealerTimeZone",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerDashboardDevicesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerDashboardDevicesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerDashboardDevicesDto": {
      "type": "object",
      "properties": {
        "TotalManaged": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalManaged": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNew": {
          "format": "int32",
          "type": "integer"
        },
        "TotalUnclassified": {
          "format": "int32",
          "type": "integer"
        },
        "TotalUnManaged": {
          "format": "int32",
          "type": "integer"
        },
        "TotalOffline": {
          "format": "int32",
          "type": "integer"
        },
        "LastDay": {
          "format": "int32",
          "type": "integer"
        },
        "LastPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "OverPeriod": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[CustomerDashboardPagesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerDashboardPagesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerDashboardPagesDto": {
      "type": "object",
      "properties": {
        "MonthlyMonoManaged": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyMonoUnManaged": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyColorManaged": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyColorUnManaged": {
          "format": "int32",
          "type": "integer"
        },
        "AnomalousCounters": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[CustomerDashboardConnectorsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerDashboardConnectorsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerDashboardConnectorsDto": {
      "type": "object",
      "properties": {
        "TotalWin": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalWin": {
          "format": "int32",
          "type": "integer"
        },
        "TotalEmbedded": {
          "format": "int32",
          "type": "integer"
        },
        "LastDay": {
          "format": "int32",
          "type": "integer"
        },
        "LastPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "OverPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "TotalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "ClustersLastDay": {
          "format": "int32",
          "type": "integer"
        },
        "ClustersLastPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "ClustersOverPeriod": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetCustomerNotificationListRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "NotificationType": {
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "NotificationMode": {
          "enum": [
            "Email",
            "Callback",
            "Ftp"
          ],
          "type": "string"
        },
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[NotificationListDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "NotificationListDto": {
      "description": "Notification List. Used for dealer and customer",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Get or set if a notification is active or not",
          "type": "boolean"
        },
        "ActivateOnCustomer": {
          "description": "Get or set if a notification is active or not on Customer",
          "type": "boolean"
        },
        "LastNotificationSentAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "NextNotificationSentAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "NotificationType": {
          "description": "",
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "NotificationMode": {
          "description": "",
          "enum": [
            "Email",
            "Callback",
            "Ftp"
          ],
          "type": "string"
        },
        "OwnerCode": {
          "description": "Dealer or Customer code",
          "type": "string"
        },
        "Language": {
          "description": "",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "DealerTemplateId": {
          "type": "string"
        },
        "DealerTemplateName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[NotificationDetailsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/NotificationDetailsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "NotificationDetailsDto": {
      "description": "Response for notification",
      "type": "object",
      "properties": {
        "Origin": {
          "description": "Origin (Dealer/Customer)",
          "type": "string"
        },
        "Callback": {
          "$ref": "#/definitions/NotificationModeWebCallbackDto",
          "description": "Valid for Notification in callback mode"
        },
        "Email": {
          "$ref": "#/definitions/NotificationModeEmailDto",
          "description": "Valid for Notification in email mode"
        },
        "Schedule": {
          "$ref": "#/definitions/ScheduleDto",
          "description": "Valid for Notification with schedule properties"
        },
        "IsActive": {
          "description": "Get or set if a notification is active or not",
          "type": "boolean"
        },
        "Parameters": {
          "description": "Get or set custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "HasOtherActiveNotifications": {
          "type": "boolean"
        },
        "NotificationType": {
          "description": "",
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "NotificationMode": {
          "description": "",
          "enum": [
            "Email",
            "Callback",
            "Ftp"
          ],
          "type": "string"
        },
        "OwnerCode": {
          "description": "Dealer or Customer code",
          "type": "string"
        },
        "Language": {
          "description": "",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "DealerTemplateId": {
          "type": "string"
        },
        "DealerTemplateName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "NotificationModeWebCallbackDto": {
      "description": "",
      "type": "object",
      "properties": {
        "Endpoint": {
          "description": "Gets or sets the endpoint.",
          "type": "string"
        },
        "AuthenticationType": {
          "enum": [
            "None",
            "Basic",
            "Bearer"
          ],
          "type": "string"
        },
        "AuthenticationValue": {
          "type": "string"
        },
        "HttpMethod": {
          "type": "string"
        },
        "Payload": {
          "type": "string"
        }
      }
    },
    "NotificationModeEmailDto": {
      "description": "",
      "type": "object",
      "properties": {
        "Subject": {
          "description": "Gets or sets the Subject.",
          "type": "string"
        },
        "Recipients": {
          "description": "Gets or sets the Recipients.",
          "type": "string"
        },
        "CcRecipients": {
          "description": "Gets or sets the cc recipients.",
          "type": "string"
        },
        "Body": {
          "description": "Gets or sets the Body.",
          "type": "string"
        },
        "SendSampleEmail": {
          "type": "boolean"
        },
        "SampleEmailRecipients": {
          "type": "string"
        },
        "IsHtml": {
          "description": "True means that the email will be in HTML",
          "type": "boolean"
        },
        "HasAttachment": {
          "description": "True means that notification data are in an attachment file",
          "type": "boolean"
        },
        "AttachmentContentType": {
          "description": "Gets or sets the Attachment Content Type.",
          "enum": [
            "Xml",
            "Json",
            "Csv",
            "Xlsx"
          ],
          "type": "string"
        },
        "Payload": {
          "description": "Gets or sets the Payload (xml/json template, csv/xlsx field list)\r\n            May contain placeholders/keywords",
          "type": "string"
        }
      }
    },
    "ScheduleDto": {
      "description": "The schedule information",
      "type": "object",
      "properties": {
        "OptionRecurrence": {
          "description": "Recurrence Options",
          "enum": [
            "WeeklyRecurrence",
            "MonthlyDayOfWeekRecurrence",
            "MonthlyRecurrence",
            "BillBookRecurrence"
          ],
          "type": "string"
        },
        "OptionWeeklyRecurrenceMonday": {
          "description": "Monday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceTuesday": {
          "description": "Tuesday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceWednesday": {
          "description": "Wednesday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceThursday": {
          "description": "Thursday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceFriday": {
          "description": "Friday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceSaturday": {
          "description": "Saturday recurrence",
          "type": "boolean"
        },
        "OptionWeeklyRecurrenceSunday": {
          "description": "Sunday recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceJanuary": {
          "description": "January recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceFebruary": {
          "description": "February recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceMarch": {
          "description": "March recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceApril": {
          "description": "April recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceMay": {
          "description": "May recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceJune": {
          "description": "June recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceJuly": {
          "description": "July recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceAugust": {
          "description": "August recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceSeptember": {
          "description": "September recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceOctober": {
          "description": "October recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceNovember": {
          "description": "November recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDecember": {
          "description": "December recurrence",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDays": {
          "description": "Monthly, Day Of Week Recurrence",
          "enum": [
            "WhichWeek",
            "DaysOfWeek",
            "LastDayOfMonth"
          ],
          "type": "string"
        },
        "WeekNumber": {
          "description": "Week number",
          "enum": [
            "FirstWeek",
            "SecondWeek",
            "ThirdWeek",
            "FourthWeek",
            "LastWeek"
          ],
          "type": "string"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysMonday": {
          "description": "Monthly on Monday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysTuesday": {
          "description": "Monthly on Tuesday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysWednesday": {
          "description": "Monthly on Wednesday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysThursday": {
          "description": "Monthly on Thursday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysFriday": {
          "description": "Monthly on Fruday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysSaturday": {
          "description": "Monthly on Saturday",
          "type": "boolean"
        },
        "OptionMonthlyDayOfWeekRecurrenceDaysSunday": {
          "description": "Monthly on Sunday",
          "type": "boolean"
        },
        "Hour": {
          "format": "int32",
          "description": "Hour when the Export will run",
          "type": "integer"
        },
        "Timezone": {
          "type": "string"
        },
        "MonthlyDayOfWeekDays": {
          "format": "int32",
          "description": "Monthly Day Of Week, number of the day (1-31)",
          "maximum": 31,
          "minimum": 1,
          "type": "integer"
        },
        "BillBooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "BillBook": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetNotificationPlaceholdersRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "NotificationType": {
          "description": "",
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "NotificationMode": {
          "description": "",
          "enum": [
            "Email",
            "Callback",
            "Ftp"
          ],
          "type": "string"
        }
      }
    },
    "ListResultResponse[NotificationPlaceholderDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationPlaceholderDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "NotificationPlaceholderDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "GroupName": {
          "type": "string"
        },
        "SampleValue": {
          "type": "string"
        }
      }
    },
    "UpdateCustomerNotificationRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "Notification": {
          "$ref": "#/definitions/NotificationDetailsDto",
          "description": ""
        }
      }
    },
    "CreateCustomerNotificationRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "Notification": {
          "$ref": "#/definitions/NotificationBaseDto",
          "description": ""
        }
      }
    },
    "NotificationBaseDto": {
      "description": "Notification Base. Used in Dealer and Customer",
      "type": "object",
      "properties": {
        "NotificationType": {
          "description": "",
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "NotificationMode": {
          "description": "",
          "enum": [
            "Email",
            "Callback",
            "Ftp"
          ],
          "type": "string"
        },
        "OwnerCode": {
          "description": "Dealer or Customer code",
          "type": "string"
        },
        "Language": {
          "description": "",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "DealerTemplateId": {
          "type": "string"
        },
        "DealerTemplateName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ApplyDealerTemplateRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerTemplateId": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[CustomFieldDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomFieldDto": {
      "description": "Dealer customer field class",
      "type": "object",
      "properties": {
        "Label": {
          "description": "Represent a Label",
          "type": "string"
        },
        "Placeholder": {
          "description": "Represent a Label",
          "type": "string"
        },
        "FieldType": {
          "description": "Represent a Value",
          "enum": [
            "Text",
            "Number",
            "Date",
            "TextArea",
            "Checkbox",
            "Dropdown"
          ],
          "type": "string"
        },
        "AssignedObject": {
          "description": "Represent a Value",
          "enum": [
            "Dealer",
            "Customer",
            "Project",
            "Office",
            "InstalledProduct",
            "Contract",
            "BillingDriver"
          ],
          "type": "string"
        },
        "IsSystemField": {
          "description": "SystemField is a field for system function, the values are not editable in the portal",
          "type": "boolean"
        },
        "IsHidden": {
          "description": "IsHidden is used to show or hide the field",
          "type": "boolean"
        },
        "DefaultValue": {
          "description": "Represent a Value",
          "type": "string"
        },
        "AllowedValues": {
          "description": "Represent a Allowed Value",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomFieldDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomFieldDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateCustomFieldRequest": {
      "description": "Create a Custom Field request",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Set the dealer",
          "type": "string"
        },
        "Label": {
          "description": "Represent a Label",
          "type": "string"
        },
        "Placeholder": {
          "description": "Represent a Label",
          "type": "string"
        },
        "FieldType": {
          "description": "Represent a Value",
          "enum": [
            "Text",
            "Number",
            "Date",
            "TextArea",
            "Checkbox",
            "Dropdown"
          ],
          "type": "string"
        },
        "AssignedObject": {
          "description": "Represent a Value",
          "enum": [
            "Dealer",
            "Customer",
            "Project",
            "Office",
            "InstalledProduct",
            "Contract",
            "BillingDriver"
          ],
          "type": "string"
        },
        "IsHidden": {
          "description": "IsHidden is used to show or hide the field",
          "type": "boolean"
        },
        "DefaultValue": {
          "description": "Represent a Value",
          "type": "string"
        },
        "AllowedValues": {
          "description": "Represent a Allowed Value",
          "type": "string"
        }
      }
    },
    "UpdateRequest[CustomFieldDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/CustomFieldDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "FilteredPagedRequest": {
      "description": "Represents a paged request with an additional filter text",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerListDto": {
      "type": "object",
      "properties": {
        "AlternativeAssetDescription": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Telephone": {
          "description": "Gets or sets the telephone",
          "type": "string"
        },
        "Address": {
          "description": "Gets or sets the address",
          "type": "string"
        },
        "Vat": {
          "description": "Gets or sets the vat number",
          "type": "string"
        },
        "Abi": {
          "description": "Abi bank coordinate",
          "type": "string"
        },
        "Cab": {
          "description": "Cab bank coordinate",
          "type": "string"
        },
        "ZipCode": {
          "description": "Gets or sets the zipcode",
          "type": "string"
        },
        "Province": {
          "description": "Gets or sets the province",
          "type": "string"
        },
        "City": {
          "description": "Gets or sets the city",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        },
        "CountryName": {
          "description": "Gets or sets the name of the country.",
          "type": "string"
        },
        "CountryIsEu": {
          "description": "Gets or sets a value indicating whether [country is eu].",
          "type": "boolean"
        },
        "Currency": {
          "description": "Gets or sets the currency",
          "type": "string"
        },
        "Token": {
          "description": "Gets or sets the token",
          "type": "string"
        },
        "AccountingEmail": {
          "description": "Gets or sets the accounting email",
          "type": "string"
        },
        "LogoUrl": {
          "description": "Gets or sets the LogoUrl",
          "type": "string"
        },
        "Mailaddress": {
          "description": "Gets or sets mail address",
          "type": "string"
        },
        "ShortLanguage": {
          "description": "Gets or sets the language",
          "type": "string"
        },
        "BusinessNominative": {
          "description": "Gets or sets the business nominative",
          "type": "string"
        },
        "BusinessGsm": {
          "description": "Gets or sets the business gsm",
          "type": "string"
        },
        "BusinessEmail": {
          "description": "Gets or sets the business email",
          "type": "string"
        },
        "TimeZone": {
          "description": "Gets or sets the timezone value",
          "type": "string"
        },
        "TechnicalNominative": {
          "description": "Gets or sets the technical nominative",
          "type": "string"
        },
        "TechnicalGsm": {
          "description": "Gets or sets the technical sgm",
          "type": "string"
        },
        "TechnicalEmail": {
          "description": "Gets or sets the technical email",
          "type": "string"
        },
        "EnableCustomerDefaultProjectSettings": {
          "description": "Gets or sets the Enable customer default project setting",
          "type": "boolean"
        },
        "SCEnableSubscription": {
          "description": "Enable project subscription",
          "type": "boolean"
        },
        "EnableEmailExplorerInstallationToCustomer": {
          "description": "Enable eXplorer email invitation to customer",
          "type": "boolean"
        },
        "IsEnableJam": {
          "description": "Enable SDS",
          "type": "boolean"
        },
        "TrialDemoExpireAt": {
          "format": "date-time",
          "description": "Trial demo expiration",
          "type": "string"
        },
        "EnableExplorerCleanup": {
          "description": "Enable eXplorer cleanup",
          "type": "boolean"
        },
        "ExplorerCleanupDayLimit": {
          "format": "int32",
          "description": "Enable eXplorer cleanup day limit",
          "type": "integer"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerInfoDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerInfoDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerInfoDto": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Features": {
          "$ref": "#/definitions/DealerFeaturesDto"
        },
        "Preferences": {
          "$ref": "#/definitions/DealerPreferencesDto"
        },
        "EnableNotManagedDevicesControl": {
          "type": "boolean"
        },
        "IsGdrpAccepted": {
          "type": "boolean"
        },
        "UseOldNotification": {
          "type": "boolean"
        },
        "UseDca4AsDefault": {
          "type": "boolean"
        },
        "TimeZone": {
          "$ref": "#/definitions/TimeZoneDto"
        },
        "TimeZoneIana": {
          "type": "string"
        },
        "Currency": {
          "description": "Gets or sets the currency",
          "type": "string"
        },
        "CurrencyDescription": {
          "description": "Gets or sets the currency description.",
          "type": "string"
        },
        "LogoUrl": {
          "type": "string"
        },
        "ShortLanguage": {
          "type": "string"
        },
        "AlternativeAssetDescription": {
          "type": "string"
        },
        "CountryIsEu": {
          "type": "boolean"
        },
        "CountryCode": {
          "type": "string"
        },
        "ShowRepeteadAlertManagement": {
          "type": "boolean"
        },
        "CustomFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldDto"
          }
        },
        "IsTicketEnabled": {
          "type": "boolean"
        },
        "Address": {
          "description": "Gets or sets the address",
          "type": "string"
        },
        "Province": {
          "description": "Gets or sets the province",
          "type": "string"
        },
        "City": {
          "description": "Gets or sets the city",
          "type": "string"
        },
        "CountryName": {
          "description": "Gets or sets the name of the country.",
          "type": "string"
        },
        "Settings": {
          "$ref": "#/definitions/DealerSettingsDto",
          "description": "Gets or sets the settings."
        },
        "EnableCustomerDefaultProjectSettings": {
          "description": "Gets or sets the Enable customer default project setting",
          "type": "boolean"
        },
        "SCEnableSubscription": {
          "description": "Enable project subscription",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DealerPreferencesDto": {
      "description": "",
      "type": "object",
      "properties": {
        "PreferencesMap": {
          "description": "Gets or sets the preferences map.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "HasSupplyList": {
          "description": "Gets a value indicating whether this instance has supply list.",
          "type": "boolean",
          "readOnly": true
        },
        "HasManageInk": {
          "description": "Gets a value indicating whether this instance has manage ink.",
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerContract": {
          "description": "Gets a value indicating whether this instance has customer contract.",
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerOffice": {
          "description": "Gets a value indicating whether this instance has customer office.",
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerProject": {
          "description": "Gets a value indicating whether this instance has customer project.",
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerCostCenter": {
          "description": "Gets a value indicating whether this instance has customer cost center.",
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerReport": {
          "description": "Gets a value indicating whether this instance has customer report.",
          "type": "boolean",
          "readOnly": true
        },
        "HasAlertManagement": {
          "description": "Gets a value indicating whether this instance has alert management.",
          "type": "boolean",
          "readOnly": true
        },
        "HasNotificationTemplateBase": {
          "description": "Gets a value indicating whether this instance has notification template base.",
          "type": "boolean",
          "readOnly": true
        },
        "HasNotificationModeCallback": {
          "description": "Gets a value indicating whether this instance has notification mode callback.",
          "type": "boolean",
          "readOnly": true
        },
        "HasDeviceUpdateWithManagedFlag": {
          "description": "Gets a value indicating whether this instance has device update with managed flag.",
          "type": "boolean",
          "readOnly": true
        },
        "HasDetailedCountersTags": {
          "description": "Gets a value indicating whether this instance has detailed counters tags.",
          "type": "boolean",
          "readOnly": true
        },
        "HasProjectBatchDelivery": {
          "description": "Gets a value indicating whether this instance has project batch delivery.",
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerBatchDelivery": {
          "description": "Gets a value indicating whether this instance has customer batch delivery.",
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerBillBook": {
          "description": "Gets a value indicating whether this instance has customer bill book.",
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerProjectVolumes": {
          "description": "Gets a value indicating whether this instance has customer project volumes.",
          "type": "boolean",
          "readOnly": true
        },
        "HasLogisticIntegration": {
          "description": "Gets a value indicating whether this instance has logistic integration.",
          "type": "boolean",
          "readOnly": true
        },
        "HasErpIntegration": {
          "description": "Gets a value indicating whether this instance has erp integration.",
          "type": "boolean",
          "readOnly": true
        },
        "HasWhiteLabel": {
          "description": "Gets a value indicating whether this instance has white label.",
          "type": "boolean",
          "readOnly": true
        },
        "EnablePagesDaysLimits": {
          "description": "Gets a value indicating whether [enable pages days limits].",
          "type": "boolean",
          "readOnly": true
        },
        "HasNewAlertLimits": {
          "description": "Gets a value indicating whether this instance has new alert limits.",
          "type": "boolean",
          "readOnly": true
        },
        "HasDeviceDetailWidget": {
          "description": "Gets a value indicating whether this instance has device detail widget.",
          "type": "boolean",
          "readOnly": true
        },
        "HasFreeSearchOfflineDevices": {
          "description": "Gets a value indicating whether this instance has free search offline devices.",
          "type": "boolean",
          "readOnly": true
        },
        "HasStandardModels": {
          "description": "Gets a value indicating whether this instance has standard models.",
          "type": "boolean",
          "readOnly": true
        },
        "HasRemoteOfflineCounters": {
          "description": "Gets a value indicating whether this instance has remote offline counters.",
          "type": "boolean",
          "readOnly": true
        },
        "HasLAScanPc": {
          "type": "boolean",
          "readOnly": true
        },
        "HasLAHPProxy": {
          "type": "boolean",
          "readOnly": true
        },
        "HasLAKodakAlaris": {
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerDevicesBatchOperations": {
          "type": "boolean",
          "readOnly": true
        },
        "HasSupplySuggestion": {
          "type": "boolean",
          "readOnly": true
        },
        "HasEpsonERS": {
          "type": "boolean",
          "readOnly": true
        },
        "HasEpsonUSB": {
          "type": "boolean",
          "readOnly": true
        },
        "HasSharpFSS": {
          "type": "boolean",
          "readOnly": true
        },
        "HasCustomerGroups": {
          "type": "boolean",
          "readOnly": true
        },
        "HasSpecifyCounterOnShippingCreation": {
          "type": "boolean",
          "readOnly": true
        },
        "HasHpSdsPrintQualityApp": {
          "type": "boolean",
          "readOnly": true
        },
        "AutomaticallyUseStandardModelsSupplySets": {
          "type": "boolean",
          "readOnly": true
        },
        "AutomaticallyAssociateNewDevicesToStandardSupplySets": {
          "type": "boolean",
          "readOnly": true
        },
        "HasSdsMassiveSetDeviceCredentials": {
          "description": "Gets a value indicating whether this instance has SDS massive set device credentials.",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "DealerSettingsDto": {
      "type": "object",
      "properties": {
        "DashboardPreferencesTask": {
          "description": "Gets or sets the dealer dashboard preferences task.",
          "enum": [
            "None",
            "TotalNonStandardProductDevices",
            "TotalToWorkDevices",
            "TotalOpenAlerts",
            "TotalDevicesToAssociate",
            "SdsOpenServiceRequest",
            "SdsOpenPredictiveServiceRequest",
            "All"
          ],
          "type": "string"
        },
        "CustomerDashboardPreferencesTask": {
          "description": "Gets or sets the customer dashboard preferences task.",
          "enum": [
            "None",
            "CustomerTotalOpenAlerts",
            "CustomerSdsOpenServiceRequest",
            "CustomerSdsOpenPredictiveServiceRequest",
            "CustomerShowIPDuplicated",
            "CustomerShowDataAfterUninstall",
            "CustomerShowCounterLess",
            "CustomerShowOfficeNotRelated",
            "All"
          ],
          "type": "string"
        },
        "DealerCreateNewCustomerSettings": {
          "$ref": "#/definitions/DealerCreateNewCustomerSettingsDto",
          "description": "Gets or sets the dealer create new customer settings."
        }
      }
    },
    "DealerCreateNewCustomerSettingsDto": {
      "type": "object",
      "properties": {
        "ActivateHPSds": {
          "type": "boolean"
        },
        "InstallationProposalDefaultSelection": {
          "type": "boolean"
        },
        "InstallationProposalDefaultTemplate": {
          "type": "string"
        },
        "ReadingProblemsDefaultSelection": {
          "type": "boolean"
        },
        "ReadingProblemsDefaultTemplate": {
          "type": "string"
        },
        "ReadingProblemsExplorerDefaultSelection": {
          "type": "boolean"
        },
        "ReadingProblemsExplorerDefaultTemplate": {
          "type": "string"
        },
        "DeliveryDefaultSelection": {
          "type": "boolean"
        },
        "DeliveryDefaultTemplate": {
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerCustomizationsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerCustomizationsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerCustomizationsDto": {
      "type": "object",
      "properties": {
        "AlternativeAssetDescription": {
          "description": "Gets or sets the alternative asset description",
          "type": "string"
        },
        "LogoUrl": {
          "description": "Gets or sets the LogoUrl",
          "type": "string"
        },
        "DeleteLogo": {
          "description": "Gets or sets the DeleteLogo",
          "type": "boolean"
        },
        "LogoFile": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "Gets or sets the  Logo"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerCustomizationsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerCustomizationsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerAccountingSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerAccountingSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerAccountingSettingsDto": {
      "type": "object",
      "properties": {
        "SDICode": {
          "type": "string"
        },
        "SDIPEC": {
          "type": "string"
        },
        "Abi": {
          "type": "string"
        },
        "Cab": {
          "type": "string"
        },
        "Vat": {
          "type": "string"
        },
        "IBAN": {
          "type": "string"
        },
        "PaymentTermOverride": {
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerAccountingSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerAccountingSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerRemoteOfflineCountersSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerRemoteOfflineCountersSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerRemoteOfflineCountersSettingsDto": {
      "type": "object",
      "properties": {
        "IsActive": {
          "type": "boolean"
        },
        "IsTest": {
          "type": "boolean"
        },
        "DeviceWithNoCommunicationDays": {
          "format": "int32",
          "type": "integer"
        },
        "SendReminderDays": {
          "type": "string"
        },
        "AutoCalculateCounters": {
          "type": "boolean"
        },
        "AutoCalculateMonthDay": {
          "format": "int32",
          "type": "integer"
        },
        "EmailTemplate": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        },
        "EmailSubject": {
          "type": "string"
        },
        "EmailBcc": {
          "type": "string"
        },
        "EmailTemplateConfirm": {
          "type": "string"
        },
        "EmailSubjectConfirm": {
          "type": "string"
        },
        "EmailConfirmIsActive": {
          "type": "boolean"
        },
        "OnlyOfflineDevices": {
          "type": "boolean"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerRemoteOfflineCountersSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerRemoteOfflineCountersSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerDistributorSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDistributorSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDistributorSettingsDto": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "FixedNumberToInvoice": {
          "format": "int32",
          "description": "Gets or sets the fixed number to invoice.",
          "type": "integer"
        },
        "IsTicketEnabled": {
          "description": "Gets or sets a value indicating whether this instance is ticket enabled.",
          "type": "boolean"
        },
        "IsActivateTicketOnSubDealers": {
          "description": "Gets or sets a value indicating whether this instance is activate ticket on sub dealers.",
          "type": "boolean"
        },
        "IsSuspended": {
          "description": "Gets or sets a value indicating whether this instance is suspended.",
          "type": "boolean"
        }
      }
    },
    "UpdateRequest[DealerDistributorSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerDistributorSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerStandardProjectSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerStandardProjectSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerStandardProjectSettingsDto": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "EnableCustomerDefaultProjectSettings": {
          "type": "boolean"
        },
        "ProjectDescription": {
          "type": "string"
        },
        "ProjectDurationMonths": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "UpdateRequest[DealerStandardProjectSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerStandardProjectSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerPublicBillBookSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerPublicBillBookSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerPublicBillBookSettingsDto": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "SCAlternateDay": {
          "format": "int32",
          "type": "integer"
        },
        "SCEnableSubscription": {
          "type": "boolean"
        },
        "SCRecurrence": {
          "enum": [
            "Month",
            "Quarter",
            "HalfYear",
            "Yearly",
            "Months24",
            "Months36",
            "Months48"
          ],
          "type": "string"
        },
        "SCRecurrenceType": {
          "enum": [
            "LikeFirstDate",
            "LastMonthDay",
            "DayEqualTo"
          ],
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerPublicBillBookSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerPublicBillBookSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "ListResultResponse[ProjectVolumeDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectVolumeDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ProjectVolumeDto": {
      "description": "Represent a device",
      "type": "object",
      "properties": {
        "Product": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the Product"
        },
        "SupplyType": {
          "description": "Gets or sets the SupplyType.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "SupplyTypeDescription": {
          "description": "Gets or sets the supply type description.",
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the ColorType.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "ColorTypeDescription": {
          "description": "Gets or sets the color type description.",
          "type": "string"
        },
        "SupplyId": {
          "description": "Gets or sets the supply identifier.",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "PriceBid": {
          "format": "float",
          "type": "number"
        },
        "PriceDealer": {
          "format": "float",
          "type": "number"
        },
        "PriceRetailer": {
          "format": "float",
          "type": "number"
        },
        "PriceCustomer": {
          "format": "float",
          "type": "number"
        },
        "BidNumber": {
          "type": "string"
        },
        "ExpiryBid": {
          "format": "date-time",
          "type": "string"
        },
        "UniquePhotoconductor": {
          "type": "boolean"
        },
        "TotalQuantity": {
          "format": "double",
          "type": "number"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DeleteDealerProjectVolumeRequest": {
      "required": [
        "DealerCode",
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SaveDealerProjectVolumeRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "SupplyId": {
          "description": "Gets or sets the supply identifier.",
          "type": "string"
        },
        "ProductId": {
          "description": "Gets or sets the product model identifier.",
          "type": "string"
        },
        "ProjectVolumeId": {
          "description": "Gets or sets the project volume identifier.",
          "type": "string"
        },
        "TotalQuantity": {
          "format": "double",
          "description": "Gets or sets the total quantity.",
          "type": "number"
        },
        "PriceBid": {
          "format": "float",
          "description": "Gets or sets the price bid.",
          "type": "number"
        },
        "PriceDealer": {
          "format": "float",
          "description": "Gets or sets the price dealer.",
          "type": "number"
        },
        "PriceRetailer": {
          "format": "float",
          "description": "Gets or sets the price retailer.",
          "type": "number"
        },
        "PriceCustomer": {
          "format": "float",
          "description": "Gets or sets the price customer.",
          "type": "number"
        },
        "BidNumber": {
          "description": "Gets or sets the bid number.",
          "type": "string"
        },
        "UniquePhotoconductor": {
          "description": "Gets or sets a value indicating whether [unique photoconductor].",
          "type": "boolean"
        },
        "ExpiryBid": {
          "format": "date-time",
          "description": "Gets or sets the expiry bid.",
          "type": "string"
        }
      }
    },
    "GetProjectSuggestedPartNumbersRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ModelId": {
          "description": "Gets or sets the model identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ProjectSuggestedPartnumbersDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ProjectSuggestedPartnumbersDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ProjectSuggestedPartnumbersDto": {
      "type": "object",
      "properties": {
        "Supplies": {
          "description": "Gets or sets the supplies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyDto"
          }
        },
        "SuppliesIceCat": {
          "description": "Gets or sets the supplies ice cat.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyDto"
          }
        }
      }
    },
    "SupplyDto": {
      "description": "Supplies",
      "type": "object",
      "properties": {
        "Translations": {
          "description": "Gets or sets the Translations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyTranslationDto"
          }
        },
        "Duration": {
          "format": "int32",
          "description": "Gets or sets the Duration.",
          "type": "integer"
        },
        "PartNumber": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "DealerSKU": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the Description.",
          "type": "string"
        },
        "DescriptionLocalized": {
          "description": "Gets or sets the DescriptionLocalized.",
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the Color Type.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the Supply Type.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "MaintenanceKitType": {
          "format": "int32",
          "description": "Gets or sets the Maintenance Kit Type.",
          "type": "integer"
        },
        "MaintenanceKitColor": {
          "format": "int32",
          "description": "Gets or sets the Maintenance Kit Color",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SupplyTranslationDto": {
      "description": "Supplies related to Dealer choices",
      "type": "object",
      "properties": {
        "Language": {
          "description": "Gets or sets the Language.",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the Description.",
          "type": "string"
        }
      }
    },
    "InsertSuggestedPartNumberRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ModelId": {
          "description": "Gets or sets the model identifier.",
          "type": "string"
        },
        "SupplyIds": {
          "description": "Gets or sets the supply ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ImportDataWithIdRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Attachment": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "Gets or sets the attachment."
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSuppliesInProjectVolumesRequest": {
      "description": "Represents a paged request with an additional filter text",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code",
          "type": "string"
        },
        "SearchInGenericSuppliesList": {
          "description": "Gets or sets a values to search in generic supplies list",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SupplyDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ReplaceSupplyInProjectVolumesRequest": {
      "description": "Represents a paged request with an additional filter text",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code",
          "type": "string"
        },
        "SupplyIdFrom": {
          "description": "Gets or sets the idSupply origin",
          "type": "string"
        },
        "SupplyIdTo": {
          "description": "Gets or sets the idSupply destination",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerServicesStatusDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerServicesStatusDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerServicesStatusDto": {
      "type": "object",
      "properties": {
        "PrintreleafActive": {
          "description": "Gets or sets a value indicating whether [printreleaf active].",
          "type": "boolean"
        },
        "CanActivatePrintreleaf": {
          "description": "Gets or sets a value indicating whether this instance can activate printreleaf.",
          "type": "boolean"
        },
        "ZzTonerActive": {
          "description": "Gets or sets a value indicating whether [zz toner active].",
          "type": "boolean"
        },
        "CanActivateZzToner": {
          "description": "Gets or sets a value indicating whether this instance can activate zz toner.",
          "type": "boolean"
        },
        "HpSdsActive": {
          "description": "Gets or sets a value indicating whether [hp SDS active].",
          "type": "boolean"
        },
        "CanActivateHpSds": {
          "description": "Gets or sets a value indicating whether this instance can activate hp SDS.",
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[DealerAlertSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerAlertSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerAlertSettingsDto": {
      "description": "",
      "type": "object",
      "properties": {
        "IsTonerEnabled": {
          "description": "Gets or set the IsTonerEnabled",
          "type": "boolean"
        },
        "IsPhotoEnabled": {
          "description": "Gets or sets the IsPhotoEnabled",
          "type": "boolean"
        },
        "IsMaintKitEnabled": {
          "description": "Gets or sets the IsMaintKitEnabled",
          "type": "boolean"
        },
        "IsWasteTonerBoxEnabled": {
          "description": "Gets or sets the IsWasteTonerBoxEnabled",
          "type": "boolean"
        },
        "IsTransferKitEnabled": {
          "description": "Gets or sets the  IsTransferKitEnabled",
          "type": "boolean"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerAlertSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerAlertSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerExplorerSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerExplorerSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerExplorerSettingsDto": {
      "description": "DealerExplorerSettingsDto",
      "type": "object",
      "properties": {
        "ScansNumberMorning": {
          "format": "int32",
          "description": "Gets or set the number of scans between 9-13",
          "type": "integer"
        },
        "ScansNumberAfternoon": {
          "format": "int32",
          "description": "Gets or set the number of scans between 13-16",
          "type": "integer"
        },
        "ScansNumberEvening": {
          "format": "int32",
          "description": "Gets or set the number of scans between 16-20",
          "type": "integer"
        },
        "AutoEnableDefaultConfiguration": {
          "description": "Gets or set the AutoEnableDefaultConfiguration",
          "type": "boolean"
        },
        "AutomaticUpdate": {
          "description": "Gets or sets a value indicating whether [automatic update].",
          "type": "boolean"
        },
        "UseDca4AsDefault": {
          "description": "Gets or sets a value indicating whether [use dca4 as default].\r\n            Used for installation proposal",
          "type": "boolean"
        },
        "Dca4Stack": {
          "description": "Gets or sets the dca4 stack.",
          "enum": [
            "EU",
            "US"
          ],
          "type": "string"
        },
        "ExplorerInterval": {
          "$ref": "#/definitions/ExplorerIntervalDto",
          "description": "Gets or sets the explorer interval."
        },
        "DefaultExplorerInterval": {
          "$ref": "#/definitions/ExplorerIntervalDto",
          "description": "Gets or sets the default explorer interval."
        },
        "ExplorerWorkingDays": {
          "description": "Gets or sets the explorer working days.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerWorkingDayDto"
          }
        },
        "AvailableSNMPDiscoveryBrands": {
          "description": "Gets or sets the available SNMP discovery brands.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "PreferredSNMPDiscoveryBrands": {
          "description": "Gets or sets the preferred SNMP discovery brands.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "ExplorerIntervalDto": {
      "description": "Defines the intervals entity for the DCA4 configuration",
      "type": "object",
      "properties": {
        "Discovery": {
          "format": "int32",
          "description": "Defines the interval minutes between the discovery operations",
          "type": "integer"
        },
        "Meters": {
          "format": "int32",
          "description": "Defines the interval minutes between the meters scan operations",
          "type": "integer"
        },
        "Supplies": {
          "format": "int32",
          "description": "Defines the interval minutes between the supplies scan operations",
          "type": "integer"
        },
        "Errors": {
          "format": "int32",
          "description": "Defines the interval minutes between the errors scan operations",
          "type": "integer"
        },
        "Attributes": {
          "format": "int32",
          "description": "Defines the interval minutes between the attributes scan operations",
          "type": "integer"
        },
        "All": {
          "format": "int32",
          "description": "Defines the interval minutes between the allmeters scan operations",
          "type": "integer"
        }
      }
    },
    "ExplorerWorkingDayDto": {
      "type": "object",
      "properties": {
        "DayOfWeek": {
          "enum": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ],
          "type": "string"
        },
        "IsDayEnabled": {
          "type": "boolean"
        },
        "Range1": {
          "$ref": "#/definitions/ExplorerWorkingDayRangeDto"
        },
        "Range2": {
          "$ref": "#/definitions/ExplorerWorkingDayRangeDto"
        },
        "Range3": {
          "$ref": "#/definitions/ExplorerWorkingDayRangeDto"
        }
      }
    },
    "ExplorerWorkingDayRangeDto": {
      "type": "object",
      "properties": {
        "Active": {
          "type": "boolean"
        },
        "Values": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "UpdateRequest[DealerExplorerSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerExplorerSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerAdvancedOptionsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerAdvancedOptionsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerAdvancedOptionsDto": {
      "description": "Defines the dealer advances options",
      "type": "object",
      "properties": {
        "ShowRepeteadAlertManagement": {
          "description": "Show repeated alerts management",
          "type": "boolean"
        },
        "EnableRepeteadAlertManagementOnNewDevices": {
          "description": "EnableRepeteadAlertManagementOnNewDevices",
          "type": "boolean"
        },
        "DisableAlertGeneratorOnDeviceCreation": {
          "description": "DisableAlertGeneratorOnDeviceCreation",
          "type": "boolean"
        },
        "notInheritSupplies": {
          "description": "Not Inherit Supplies",
          "type": "boolean"
        },
        "notInheritProductReplacement": {
          "description": "notInheritProductReplacement",
          "type": "boolean"
        },
        "AvailablePreferences": {
          "description": "Available Preferences",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SelectedPreferences": {
          "description": "Selected Preferences",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ExportPreferences": {
          "$ref": "#/definitions/ExportPreferencesDto",
          "description": "Export Preferences"
        },
        "OutOfDateLimitDevices": {
          "format": "int32",
          "description": "Out of Date limit for devices in the portal 2.0",
          "type": "integer"
        },
        "OutOfDateLimitConnectors": {
          "format": "int32",
          "description": "Out of Date limit for connectors in the portal 2.0",
          "type": "integer"
        },
        "Settings": {
          "$ref": "#/definitions/DealerSettingsDto",
          "description": "Defines the dealer dashboard preferences"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerAdvancedOptionsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerAdvancedOptionsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerAlertLimitOptionsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerAlertLimitOptionsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerAlertLimitOptionsDto": {
      "type": "object",
      "properties": {
        "AlertLimitLevelEnabled": {
          "description": "Gets or sets a value indicating whether [alert limit level enabled].",
          "type": "boolean"
        },
        "AlertLimitResidualPagesEnabled": {
          "description": "Gets or sets a value indicating whether [alert limit residual pages enabled].",
          "type": "boolean"
        },
        "AlertLimitResidualDaysEnabled": {
          "description": "Gets or sets a value indicating whether [alert limit residual days enabled].",
          "type": "boolean"
        },
        "PostAlertLevelEnabled": {
          "description": "Gets or sets a value indicating whether [post alert level enabled].",
          "type": "boolean"
        },
        "PostAlertResidualPagesEnabled": {
          "description": "Gets or sets a value indicating whether [post alert residual pages enabled].",
          "type": "boolean"
        },
        "PostAlertResidualDaysEnabled": {
          "description": "Gets or sets a value indicating whether [post alert residual days enabled].",
          "type": "boolean"
        },
        "FallbackLevelCreationAlertLimit": {
          "format": "int32",
          "description": "Gets or sets the fallback level creation alert limit.",
          "type": "integer"
        },
        "EnableBatchAlertMode": {
          "description": "Gets or sets the EnableBatchAlertMode",
          "type": "boolean"
        },
        "BatchAlertProximityType": {
          "description": "Gets or sets the BatchAlertProximityType",
          "enum": [
            "None",
            "Customer",
            "Office"
          ],
          "type": "string"
        },
        "BatchAlertScheduledTimes": {
          "description": "Gets or sets the BatchAlertScheduledTimes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "BatchAlertScheduledHistories": {
          "description": "Gets or sets the BatchAlertScheduledHistories",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerAlertLimitOptionsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerAlertLimitOptionsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateDealerAdvancedOptionsRequest": {
      "description": "Update dealer preferences dynamic object",
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "Options": {
          "description": "Update customer advanced options",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerMiniSiteDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerMiniSiteDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerMiniSiteDto": {
      "type": "object",
      "properties": {
        "Url": {
          "description": "Gets or set the Mini site URL",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the Mini site name",
          "type": "string"
        },
        "AutoCloseAlertOfflineDevicesDays": {
          "format": "int32",
          "description": "Gets or sets the Auto close alert offline Devices Days",
          "type": "integer"
        },
        "AllowNoCountersSupplyRequest": {
          "description": "Gets or sets the AllowNoCountersSupplyRequest",
          "type": "boolean"
        },
        "LogoFile": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "Gets or sets the  Logo"
        },
        "DeleteLogo": {
          "description": "Gets or sets the DeleteLogo",
          "type": "boolean"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerMiniSiteDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerMiniSiteDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[DealerInfoDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerInfoDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DealerBankAccountDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerBankAccountDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerHierarchyDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerHierarchyDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerHierarchyDto": {
      "type": "object",
      "properties": {
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerHierarchyDto"
          }
        },
        "Parents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerBaseDto"
          }
        },
        "LogoUrl": {
          "type": "string"
        },
        "AlternativeDealer": {
          "$ref": "#/definitions/DealerBaseDto"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerSupportTicketConfigurationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerSupportTicketConfigurationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerSupportTicketConfigurationDto": {
      "type": "object",
      "properties": {
        "SlaHours": {
          "format": "double",
          "type": "number"
        },
        "TicketPrefix": {
          "type": "string"
        },
        "TicketCounter": {
          "format": "int32",
          "type": "integer"
        },
        "DealerId": {
          "type": "string"
        },
        "EmailNewTicketSubject": {
          "type": "string"
        },
        "EmailNewTicketBody": {
          "type": "string"
        },
        "EmailUpdateTicketSubject": {
          "type": "string"
        },
        "EmailUpdateTicketBody": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DealerMainDataDtoRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the dealer nominative",
          "type": "string"
        },
        "Telephone": {
          "description": "Gets or sets the telephone",
          "type": "string"
        },
        "Address": {
          "description": "Gets or sets the address",
          "type": "string"
        },
        "ZipCode": {
          "description": "Gets or sets the zipcode",
          "type": "string"
        },
        "Province": {
          "description": "Gets or sets the province",
          "type": "string"
        },
        "City": {
          "description": "Gets or sets the City",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the CountryCode",
          "type": "string"
        },
        "CountryName": {
          "description": "Gets or sets the CountryName",
          "type": "string"
        },
        "BusinessNominative": {
          "description": "Gets or sets the business nominative",
          "type": "string"
        },
        "BusinessGsm": {
          "description": "Gets or sets the business gsm",
          "type": "string"
        },
        "BusinessEmail": {
          "description": "Gets or sets the business email",
          "type": "string"
        },
        "TechnicalNominative": {
          "description": "Gets or sets the technical nominative",
          "type": "string"
        },
        "TechnicalGsm": {
          "description": "Gets or sets the technical sgm",
          "type": "string"
        },
        "TechnicalEmail": {
          "description": "Gets or sets the technical email",
          "type": "string"
        },
        "AccountingNominative": {
          "description": "Gets or sets the Accounting nominative",
          "type": "string"
        },
        "AccountingGsm": {
          "description": "Gets or sets the Accounting gsm",
          "type": "string"
        },
        "AccountingEmail": {
          "description": "Gets or sets the Accounting email",
          "type": "string"
        },
        "TimeZone": {
          "description": "Gets or sets the timezone value",
          "type": "string"
        },
        "ShortLanguage": {
          "description": "Gets or sets the language",
          "type": "string"
        },
        "Currency": {
          "description": "Gets or sets the currency",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "CustomFieldValues": {
          "description": "Update Custom field Values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        }
      }
    },
    "UpdateRequest[DealerSupportTicketConfigurationDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerSupportTicketConfigurationDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "CreateRequest[DemoContactDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/DemoContactDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "DemoContactDto": {
      "description": "Represents a request to create a demo Dealer and an associated account",
      "type": "object",
      "properties": {
        "CreatedAt": {
          "format": "date-time",
          "description": "Request date",
          "type": "string"
        },
        "DealerDeletedAt": {
          "format": "date-time",
          "type": "string"
        },
        "SenderIdentifier": {
          "description": "Gets or sets the sender identifier",
          "type": "string"
        },
        "PlatformOriginType": {
          "description": "Gets or sets the originType",
          "enum": [
            "Mps",
            "ZZToner",
            "MpsIt",
            "PoGO"
          ],
          "type": "string"
        },
        "InterestedService": {
          "description": "Gets or sets the InterestedService",
          "type": "string"
        },
        "CompanyName": {
          "description": "Gets or sets the company name.",
          "type": "string"
        },
        "Address": {
          "description": "Gets or sets the address.",
          "type": "string"
        },
        "ZipCode": {
          "description": "Gets or sets the zipcode.",
          "type": "string"
        },
        "City": {
          "description": "Gets or sets the city.",
          "type": "string"
        },
        "Province": {
          "description": "Gets or sets the province.",
          "type": "string"
        },
        "Telephone": {
          "description": "Gets or sets the telephone.",
          "type": "string"
        },
        "Vat": {
          "description": "Gets or sets the vat.",
          "type": "string"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        },
        "TimeZone": {
          "description": "Gets or sets the dealer TimeZone (use WindowsTimeZone Id)",
          "type": "string"
        },
        "Language": {
          "description": "Gets or sets the language of the account that will be create.",
          "type": "string"
        },
        "BusinessType": {
          "description": "Gets or sets the the Business type.",
          "enum": [
            "Reseller",
            "FinalUser"
          ],
          "type": "string"
        },
        "ContractTypes": {
          "description": "Gets or sets the the contract types with the customers.",
          "type": "array",
          "items": {
            "enum": [
              "PageCost",
              "ConsumableSales",
              "Other"
            ],
            "type": "string"
          }
        },
        "ContractTypesOther": {
          "description": "ContractTypeOther",
          "type": "string"
        },
        "ServiceType": {
          "description": "Gets or sets the service.",
          "enum": [
            "MpsMonitor",
            "HpSds"
          ],
          "type": "string"
        },
        "Mif": {
          "description": "Gets or sets the the mif.",
          "type": "string"
        },
        "ApproveInformation": {
          "description": "Gets or sets the the approval information.",
          "type": "boolean"
        },
        "ApproveCommercialInformation": {
          "description": "Gets or sets a value indicating whether [approve commercial information].",
          "type": "boolean"
        },
        "TermsAndConditions": {
          "description": "TermsAndConditions",
          "type": "boolean"
        },
        "Brands": {
          "description": "Gets or sets the the brands.",
          "type": "string"
        },
        "BusinessNominative": {
          "description": "Gets or sets the the Business nominative.",
          "type": "string"
        },
        "BusinessGsm": {
          "description": "Gets or sets the the Business gsm.",
          "type": "string"
        },
        "BusinessEmail": {
          "description": "Gets or sets the the Business email.",
          "type": "string"
        },
        "TechnicalNominative": {
          "description": "Gets or sets the the technical nominative.",
          "type": "string"
        },
        "TechnicalGsm": {
          "description": "Gets or sets the the technical gsm.",
          "type": "string"
        },
        "TechnicalEmail": {
          "description": "Gets or sets the technical email.",
          "type": "string"
        },
        "IsDemo": {
          "description": "Is Demo",
          "type": "boolean"
        },
        "WebSite": {
          "description": "WebSite",
          "type": "string"
        },
        "PackageCode": {
          "description": "Gets or sets the the package code",
          "type": "string"
        },
        "CouponCode": {
          "description": "Gets or sets the the Coupon code.",
          "type": "string"
        },
        "SenderDealerCode": {
          "description": "SenderDealerCode",
          "type": "string"
        },
        "IpAddress": {
          "description": "IpAddress",
          "type": "string"
        },
        "CustomFields": {
          "description": "Gets or sets the custom fields dynamic object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "DisableRequestNotification": {
          "description": "Set to true if you don't want to send the Request Notification to the new subscriber dealer",
          "type": "boolean"
        },
        "Dealer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "Gets or sets the dealer."
        },
        "CanActivate": {
          "type": "boolean"
        },
        "CreatedByAccountName": {
          "type": "string"
        },
        "CreatedByAccountNominative": {
          "type": "string"
        },
        "SenderDealerDescription": {
          "type": "string"
        },
        "SenderDealerAlternativeDealerCode": {
          "type": "string"
        },
        "SenderDealerAlternativeDealerDescription": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "ToActivate",
            "Activated",
            "Declined"
          ],
          "type": "string"
        },
        "DeclinedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "DeclinedReason": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ActivateDemoRequest": {
      "description": "",
      "required": [
        "ActivateDpuAccount",
        "Id"
      ],
      "type": "object",
      "properties": {
        "ActivateDpuAccount": {
          "description": "Defines if the dealer notification is needed",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DeclineDemoRequest": {
      "description": "",
      "required": [
        "DeclinedReason",
        "DealerCode",
        "Id"
      ],
      "type": "object",
      "properties": {
        "DeclinedReason": {
          "description": "Gets or sets the declined reason.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PostponeDemoExpirationRequest": {
      "description": "",
      "required": [
        "PostponeDays",
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "PostponeDays": {
          "format": "int32",
          "description": "Gets or sets the postpone days.",
          "type": "integer"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DemoContactDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DemoContactDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetDemoRequestsRequest": {
      "required": [
        "Code",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Get Demo requests activate or not",
          "type": "boolean"
        },
        "IsDeclined": {
          "description": "Get Demo requests declinated or not",
          "type": "boolean"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DemoContactDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DemoContactDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DemoContactDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DemoContactDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetByDealerCodeRequest": {
      "description": "Represents a request to retrieve an object by code",
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerOnboardingDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerOnboardingDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerOnboardingDto": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "Steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnboardingStepDto"
          }
        }
      }
    },
    "OnboardingStepDto": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnboardingGroupDto"
          }
        }
      }
    },
    "OnboardingGroupDto": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnboardingQuestionDto"
          }
        }
      }
    },
    "OnboardingQuestionDto": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        },
        "Required": {
          "type": "boolean"
        },
        "AnswerType": {
          "enum": [
            "Text",
            "Number",
            "Single",
            "Multi",
            "Boolean"
          ],
          "type": "string"
        },
        "Orientation": {
          "enum": [
            "Horizontal",
            "Vertical"
          ],
          "type": "string"
        },
        "AllowedValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "VisibilityRule": {
          "$ref": "#/definitions/OnboardingVisibilityRuleDto"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "OnboardingVisibilityRuleDto": {
      "type": "object",
      "properties": {
        "QuestionCode": {
          "type": "string"
        },
        "ContainsValue": {
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerOnboardingDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerOnboardingDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "ChangeParentDealerRequest": {
      "required": [
        "NewParentDealerId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "NewParentDealerId": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateRequest[InfoContactDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/InfoContactDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "InfoContactDto": {
      "description": "",
      "type": "object",
      "properties": {
        "CompanyName": {
          "description": "",
          "type": "string"
        },
        "BusinessNominative": {
          "description": "",
          "type": "string"
        },
        "BusinessGsm": {
          "description": "",
          "type": "string"
        },
        "BusinessEmail": {
          "description": "",
          "type": "string"
        },
        "IpAddress": {
          "description": "",
          "type": "string"
        },
        "CreatedAtUtc": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "Language": {
          "description": "",
          "type": "string"
        },
        "InfoContactType": {
          "description": "",
          "type": "string"
        },
        "Message": {
          "description": "",
          "type": "string"
        },
        "ApproveInformation": {
          "description": "Gets or sets the the approval information.",
          "type": "boolean"
        },
        "ApproveCommercialInformation": {
          "description": "Gets or sets a value indicating whether [approve commercial information].",
          "type": "boolean"
        },
        "CountryCode": {
          "description": "Gets or sets the country code.",
          "type": "string"
        }
      }
    },
    "SearchBusinessCreditRequest": {
      "description": "",
      "required": [
        "Country",
        "CompanyName",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "VatNumber": {
          "description": "Gets or sets the Vat Number.",
          "type": "string"
        },
        "Country": {
          "description": "Gets or sets the Country.",
          "type": "string"
        },
        "CompanyName": {
          "description": "Gets or sets the Company Name.",
          "type": "string"
        },
        "City": {
          "description": "Gets or sets the City.",
          "type": "string"
        },
        "ZipCode": {
          "description": "Gets or sets the ZipCode.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[BusinessCreditDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BusinessCreditDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "BusinessCreditDto": {
      "type": "object",
      "properties": {
        "VatNo": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RegNo": {
          "type": "string"
        },
        "SafeNo": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        },
        "Status": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "SimpleValue": {
          "type": "string"
        },
        "Street": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Province": {
          "type": "string"
        },
        "PostCode": {
          "type": "string"
        },
        "HouseNo": {
          "type": "string"
        }
      }
    },
    "GetBusinessCreditRequest": {
      "description": "",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the Id.",
          "type": "string"
        }
      }
    },
    "CreateRequest[EpsonErsDetailsDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/EpsonErsDetailsDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "EpsonErsDetailsDto": {
      "description": "",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "",
          "type": "string"
        },
        "Id": {
          "description": "",
          "type": "string"
        },
        "Secret": {
          "description": "",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[EpsonErsDetailsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/EpsonErsDetailsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[EpsonUsbDetailsDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/EpsonUsbDetailsDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "EpsonUsbDetailsDto": {
      "description": "",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "",
          "type": "string"
        },
        "UsbEnabled": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[EpsonUsbDetailsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/EpsonUsbDetailsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetByIdAndDealerIdRequest": {
      "required": [
        "DealerId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDealerWorkflowOperationsPagedRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "OperationType": {
          "description": "Gets or sets the type of the operation.",
          "enum": [
            "HPScan",
            "ZebraReboot",
            "ZebraUpdateFw",
            "ZebraSet",
            "EpsonScan",
            "EpsonProcessEmail",
            "SharpFss",
            "HpLfpCollectXml",
            "HpLfpCollectXmlByDeviceId",
            "PortalImportExcelHeader",
            "PortalImportExcelDetail",
            "PortalMoveCustomersToOtherDealer",
            "PortalMoveCustomerToOtherDealer"
          ],
          "type": "string"
        },
        "IsAuto": {
          "description": "Gets or sets a value indicating whether this instance is automatic.",
          "type": "boolean"
        },
        "CreatedDateUtcFrom": {
          "format": "date-time",
          "description": "Gets or sets the created date UTC from.",
          "type": "string"
        },
        "CreatedDateUtcTo": {
          "format": "date-time",
          "description": "Gets or sets the created date UTC to.",
          "type": "string"
        },
        "OperationId": {
          "description": "Gets or sets the operation identifier.",
          "type": "string"
        },
        "ParentOperationId": {
          "description": "Gets or sets the parent operation identifier.",
          "type": "string"
        },
        "HasParentOperation": {
          "description": "Gets or sets the has parent operation.",
          "type": "boolean"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "GetByIdAndDealerIdPagedRequest": {
      "required": [
        "DealerId",
        "Id",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SharpFssDetailsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SharpFssDetailsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SharpFssDetailsDto": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "IsRegisteredWithFss": {
          "type": "boolean"
        },
        "BaseRequestUri": {
          "type": "string"
        },
        "SharpDealerId": {
          "type": "string"
        },
        "SharpDealerName": {
          "type": "string"
        },
        "Registered": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DealerSharpFSSRegisterRequest": {
      "required": [
        "SharpFSSCode",
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "SharpFSSCode": {
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SharpFSSModelDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SharpFSSModelDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SharpFSSModelDto": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int32",
          "type": "integer"
        },
        "ModelName": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "Monochrome": {
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[DealerTagHierarchyDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerTagHierarchyDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerTagHierarchyDto": {
      "type": "object",
      "properties": {
        "TagName": {
          "type": "string"
        },
        "OriginalTagName": {
          "type": "string"
        },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerTagHierarchyDto"
          }
        }
      }
    },
    "SaveDealerTagsHierarchyRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "DealerTag": {
          "$ref": "#/definitions/DealerTagHierarchyDto"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerBillingConfigurationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerBillingConfigurationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerBillingConfigurationDto": {
      "type": "object",
      "properties": {
        "BillableServicesOverridable": {
          "description": "Gets or sets the billable services overridable.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DeviceIdentifier": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "DeviceIdentifierPlaceholders": {
          "description": "Gets or sets the device identifier placeholders.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "InvoiceNumber": {
          "description": "Gets or sets the invoice number.",
          "type": "string"
        },
        "InvoiceNumberPlaceholders": {
          "description": "Gets or sets the invoice number placeholders.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "EnableInvoiceNumbering": {
          "description": "Gets or sets a value indicating whether [enable invoice numbering].",
          "type": "boolean"
        },
        "BillableServiceOverrides": {
          "description": "Gets or sets the billable service overrides.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "BillableServiceOverridePlaceholders": {
          "description": "Gets or sets the billable service override placeholders.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueDto[String,IEnumerable[String]]"
          }
        },
        "DocumentNameInvoice": {
          "description": "Gets or sets the Document name in case of Invoice.",
          "type": "string"
        },
        "DocumentNameInvoiceProforma": {
          "description": "Gets or sets the Document name in case of Invoice Proforma.",
          "type": "string"
        },
        "DocumentNameCreditNote": {
          "description": "Gets or sets the Document name in case of Credit Note.",
          "type": "string"
        },
        "DocumentNameCreditNoteProforma": {
          "description": "Gets or sets the Document name in case of Credit Note Proforma.",
          "type": "string"
        },
        "MeterReadingDatesType": {
          "description": "Gets or sets the Meter Reading Dates Type for the timeframe start date and finish date.",
          "type": "string"
        },
        "InvoiceRowsSorting": {
          "description": "Defines how to sort invoice rows\r\n            0: by billable service then by device identifier\r\n            1: by device identifier and then by billable service\r\n            Default is 0",
          "type": "string"
        },
        "InvoiceCultureInfo": {
          "description": "The culture info for dates and numbers formatting",
          "type": "string"
        },
        "AvailableCultureInfos": {
          "description": "The available culture info",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueDto[String,String]"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CodeValueDto[String,IEnumerable[String]]": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CodeValueDto[String,String]": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerBillingConfigurationDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerBillingConfigurationDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetDealerCounterBlendListRequest": {
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "Source": {
          "description": "Gets or sets the source.",
          "enum": [
            "Mps",
            "HpSds"
          ],
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerCounterBlendListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerCounterBlendListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerCounterBlendListDto": {
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Sequence": {
          "format": "int32",
          "type": "integer"
        },
        "Brands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerCounterBlendListBrandDto"
          }
        },
        "Source": {
          "enum": [
            "Mps",
            "HpSds"
          ],
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "DealerCounterBlendListBrandDto": {
      "type": "object",
      "properties": {
        "Brand": {
          "type": "string"
        },
        "Descriptions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerCounterBlendDetailBrandDto"
          }
        }
      }
    },
    "DealerCounterBlendDetailBrandDto": {
      "type": "object",
      "properties": {
        "CounterDescription": {
          "type": "string"
        },
        "CounterType": {
          "type": "string"
        },
        "ColumnOperator": {
          "enum": [
            "Add",
            "Subtract"
          ],
          "type": "string"
        },
        "RowOperator": {
          "enum": [
            "Add",
            "Subtract",
            "Multiply",
            "Divide"
          ],
          "type": "string"
        },
        "RowOperatorValue": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SingleResultResponse[DealerCounterBlendDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerCounterBlendDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerCounterBlendDto": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "HasCounters": {
          "type": "boolean"
        },
        "Brands": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerCounterBlendBrandDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DealerCounterBlendBrandDto": {
      "type": "object",
      "properties": {
        "Brand": {
          "type": "string"
        },
        "HasCounters": {
          "type": "boolean"
        },
        "HasCounterBlendToStandardCounter": {
          "type": "boolean"
        },
        "Descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerCounterBlendDescriptionDto"
          }
        }
      }
    },
    "DealerCounterBlendDescriptionDto": {
      "type": "object",
      "properties": {
        "CounterDescription": {
          "type": "string"
        },
        "CounterType": {
          "type": "string"
        },
        "ColumnOperator": {
          "enum": [
            "Add",
            "Subtract"
          ],
          "type": "string"
        },
        "RowOperator": {
          "enum": [
            "Add",
            "Subtract",
            "Multiply",
            "Divide"
          ],
          "type": "string"
        },
        "RowOperatorValue": {
          "format": "double",
          "type": "number"
        },
        "IsRequired": {
          "type": "boolean"
        },
        "Source": {
          "enum": [
            "Mps",
            "HpSds"
          ],
          "type": "string"
        }
      }
    },
    "SearchCounterDetailedRequest": {
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Brand": {
          "type": "string"
        },
        "Source": {
          "enum": [
            "Mps",
            "HpSds"
          ],
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CounterDetailedAssociableListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterDetailedAssociableListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CounterDetailedAssociableListDto": {
      "type": "object",
      "properties": {
        "Brand": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Source": {
          "enum": [
            "Mps",
            "HpSds"
          ],
          "type": "string"
        }
      }
    },
    "CreateRequest[DealerCounterBlendDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/DealerCounterBlendDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "SingleResultResponse[DealerCounterBlendListDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerCounterBlendListDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerCounterBlendDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerCounterBlendDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "ClearCounterRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Brand": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDealerCountersBlendedToStandardListRequest": {
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerCounterBlendToStandardListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerCounterBlendToStandardListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerCounterBlendToStandardListDto": {
      "type": "object",
      "properties": {
        "IdDealer": {
          "type": "string"
        },
        "Brand": {
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto"
        },
        "IsHpWpp": {
          "type": "boolean"
        },
        "UseCounterStandard": {
          "type": "boolean"
        },
        "MonoId": {
          "type": "string"
        },
        "MonoDescription": {
          "type": "string"
        },
        "ColorId": {
          "type": "string"
        },
        "ColorDescription": {
          "type": "string"
        },
        "MonoA3Id": {
          "type": "string"
        },
        "MonoA3Description": {
          "type": "string"
        },
        "ColorA3Id": {
          "type": "string"
        },
        "ColorA3Description": {
          "type": "string"
        },
        "FaxId": {
          "type": "string"
        },
        "FaxDescription": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerCounterBlendToStandardListDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerCounterBlendToStandardListDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DeviceCounterBlendToStandardDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DeviceCounterBlendToStandardDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceCounterBlendToStandardDto": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "UseCounterStandard": {
          "description": "Gets or sets a value indicating whether [use counter standard].",
          "type": "boolean"
        },
        "MonoId": {
          "description": "Gets or sets the mono identifier.",
          "type": "string"
        },
        "MonoDescription": {
          "description": "Gets or sets the mono description.",
          "type": "string"
        },
        "ColorId": {
          "description": "Gets or sets the color identifier.",
          "type": "string"
        },
        "ColorDescription": {
          "description": "Gets or sets the color description.",
          "type": "string"
        },
        "MonoA3Id": {
          "description": "Gets or sets the mono a3 identifier.",
          "type": "string"
        },
        "MonoA3Description": {
          "description": "Gets or sets the mono a3 description.",
          "type": "string"
        },
        "ColorA3Id": {
          "description": "Gets or sets the color a3 identifier.",
          "type": "string"
        },
        "ColorA3Description": {
          "description": "Gets or sets the color a3 description.",
          "type": "string"
        },
        "FaxId": {
          "description": "Gets or sets the fax identifier.",
          "type": "string"
        },
        "FaxDescription": {
          "description": "Gets or sets the fax description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateDealerCountersBlendedToStandardRequest": {
      "type": "object",
      "properties": {
        "UseCounterStandard": {
          "type": "boolean"
        },
        "DealerCode": {
          "type": "string"
        },
        "Brand": {
          "type": "string"
        },
        "IdProduct": {
          "type": "string"
        },
        "IsHpWpp": {
          "type": "boolean"
        },
        "MonoId": {
          "type": "string"
        },
        "ColorId": {
          "type": "string"
        },
        "MonoA3Id": {
          "type": "string"
        },
        "ColorA3Id": {
          "type": "string"
        },
        "FaxId": {
          "type": "string"
        }
      }
    },
    "UpdateDealerCountersBlendedToStandardRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "UseCounterStandard": {
          "type": "boolean"
        },
        "DealerCode": {
          "type": "string"
        },
        "Brand": {
          "type": "string"
        },
        "IdProduct": {
          "type": "string"
        },
        "IsHpWpp": {
          "type": "boolean"
        },
        "MonoId": {
          "type": "string"
        },
        "ColorId": {
          "type": "string"
        },
        "MonoA3Id": {
          "type": "string"
        },
        "ColorA3Id": {
          "type": "string"
        },
        "FaxId": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[DealerCounterMapListDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerCounterMapListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerCounterMapListDto": {
      "description": "The object represents the counter map for a standard conters",
      "type": "object",
      "properties": {
        "Brand": {
          "description": "The printer Brand",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "The printer Model"
        },
        "CounterBlendMonoId": {
          "description": "The counter blend Id choosed for Mono",
          "type": "string"
        },
        "CounterBlendMonoName": {
          "description": "The counter blend Name choosed for Mono",
          "type": "string"
        },
        "CounterBlendColorId": {
          "description": "The counter blend Id choosed for Color",
          "type": "string"
        },
        "CounterBlendColorName": {
          "description": "The counter blend Name choosed for Color",
          "type": "string"
        },
        "CounterBlendMonoA3Id": {
          "description": "The counter blend Id choosed for Mono A3",
          "type": "string"
        },
        "CounterBlendMonoA3Name": {
          "description": "The counter blend Name choosed for Mono A3",
          "type": "string"
        },
        "CounterBlendColorA3Id": {
          "description": "The counter blend Id choosed for Color A3",
          "type": "string"
        },
        "CounterBlendColorA3Name": {
          "description": "The counter blend Name choosed for Color A3",
          "type": "string"
        },
        "CounterBlendFaxId": {
          "description": "The counter blend Id choosed for Fax",
          "type": "string"
        },
        "CounterBlendFaxName": {
          "description": "The counter blend Name choosed for Fax",
          "type": "string"
        }
      }
    },
    "DealerCounterMapCreateRequest": {
      "description": "Create a new counter map definitions",
      "required": [
        "DealerCode",
        "Brand",
        "CounterBlendMonoId"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "the dealer code",
          "type": "string"
        },
        "Brand": {
          "description": "the printer brand",
          "type": "string"
        },
        "ProductModelIds": {
          "description": "The ids of the models associated",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CounterBlendMonoId": {
          "description": "The counter blend Id choosed for Mono",
          "type": "string"
        },
        "CounterBlendColorId": {
          "description": "The counter blend Id choosed for Color",
          "type": "string"
        },
        "CounterBlendMonoA3Id": {
          "description": "The counter blend Id choosed for Mono A3",
          "type": "string"
        },
        "CounterBlendColorA3Id": {
          "description": "The counter blend Id choosed for Color A3",
          "type": "string"
        },
        "CounterBlendFaxId": {
          "description": "The counter blend Id choosed for Fax",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerDashboardDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDashboardDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDashboardDto": {
      "description": "DealerDashboardDto",
      "type": "object",
      "properties": {
        "SdsDashboard": {
          "$ref": "#/definitions/SdsDashboardDto",
          "description": "Gets or sets the SDS dashboard."
        },
        "MpsDashboard": {
          "$ref": "#/definitions/MpsDashboardDto",
          "description": "Gets or sets the MPS dashboard."
        },
        "MustShowWelcome": {
          "description": "Gets or sets a value indicating whether [must show welcome].",
          "type": "boolean"
        }
      }
    },
    "MpsDashboardDto": {
      "type": "object",
      "properties": {
        "TotalCustomers": {
          "format": "int32",
          "description": "Gets or sets the total customers.",
          "type": "integer"
        },
        "TotalDevices": {
          "format": "int32",
          "description": "Gets or sets the total devices.",
          "type": "integer"
        },
        "TotalConnectors": {
          "format": "int32",
          "description": "Gets or sets the total connectors.",
          "type": "integer"
        },
        "HasSentExplorerEmail": {
          "description": "Gets or sets a value indicating whether this instance has sent explorer email.",
          "type": "boolean"
        },
        "EmailExplorerInstallationSentAt": {
          "format": "date-time",
          "description": "Gets or sets the email explorer installation sent at.",
          "type": "string"
        }
      }
    },
    "DealerDashboardRequest": {
      "description": "",
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "DealerTimeZone": {
          "description": "DealerTimeZone",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerDashboardCustomersDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDashboardCustomersDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDashboardCustomersDto": {
      "type": "object",
      "properties": {
        "TotalActive": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalActive": {
          "format": "int32",
          "type": "integer"
        },
        "TotalInactive": {
          "format": "int32",
          "type": "integer"
        },
        "LastDay": {
          "format": "int32",
          "type": "integer"
        },
        "LastPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "OverPeriod": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[DealerDashboardDevicesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDashboardDevicesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDashboardDevicesDto": {
      "type": "object",
      "properties": {
        "TotalManaged": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalManaged": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNew": {
          "format": "int32",
          "type": "integer"
        },
        "TotalUnclassified": {
          "format": "int32",
          "type": "integer"
        },
        "TotalUnManaged": {
          "format": "int32",
          "type": "integer"
        },
        "TotalOffline": {
          "format": "int32",
          "type": "integer"
        },
        "LastDay": {
          "format": "int32",
          "type": "integer"
        },
        "LastPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "OverPeriod": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[DealerDashboardConnectorsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDashboardConnectorsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDashboardConnectorsDto": {
      "type": "object",
      "properties": {
        "TotalWin": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalWin": {
          "format": "int32",
          "type": "integer"
        },
        "TotalEmbedded": {
          "format": "int32",
          "type": "integer"
        },
        "LastDay": {
          "format": "int32",
          "type": "integer"
        },
        "LastPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "OverPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "TotalClusters": {
          "format": "int32",
          "type": "integer"
        },
        "ClustersLastDay": {
          "format": "int32",
          "type": "integer"
        },
        "ClustersLastPeriod": {
          "format": "int32",
          "type": "integer"
        },
        "ClustersOverPeriod": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "DealerDashboardTasksRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "CanShowTotalNonStandardProductDevices": {
          "description": "Gets or sets a value indicating whether this instance can show total non standard product devices.",
          "type": "boolean"
        },
        "CanShowTotalToWorkDevices": {
          "description": "Gets or sets a value indicating whether this instance can show total to work devices.",
          "type": "boolean"
        },
        "CanShowTotalDevicesToAssociate": {
          "description": "Gets or sets a value indicating whether this instance can show total devices to associate.",
          "type": "boolean"
        },
        "CanShowTotalOpenAlerts": {
          "description": "Gets or sets a value indicating whether this instance can show total open alerts.",
          "type": "boolean"
        },
        "CanShowTotalShippedAlerts": {
          "description": "Gets or sets a value indicating whether this instance can show total shipped alerts.",
          "type": "boolean"
        },
        "CanShowSdsOpenServiceRequest": {
          "description": "Gets or sets a value indicating whether this instance can show SDS open service request.",
          "type": "boolean"
        },
        "CanShowSdsOpenPredictiveServiceRequest": {
          "description": "Gets or sets a value indicating whether this instance can show SDS open predictive service request.",
          "type": "boolean"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerDashboardTasksDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDashboardTasksDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDashboardTasksDto": {
      "type": "object",
      "properties": {
        "TotalNonStandardProductDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalToWorkDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalOpenAlerts": {
          "format": "int32",
          "type": "integer"
        },
        "TotalShippedAlerts": {
          "format": "int32",
          "type": "integer"
        },
        "TotalDevicesToAssociate": {
          "format": "int32",
          "type": "integer"
        },
        "SdsOpenServiceRequest": {
          "format": "int32",
          "type": "integer"
        },
        "SdsOpenPredictiveServiceRequest": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalDisconnectedDevices": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalDisconnectedConnectors": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalChangedDevices": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[DealerDashboardPagesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDashboardPagesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDashboardPagesDto": {
      "type": "object",
      "properties": {
        "MonthlyMonoManaged": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyMonoUnManaged": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyColorManaged": {
          "format": "int32",
          "type": "integer"
        },
        "MonthlyColorUnManaged": {
          "format": "int32",
          "type": "integer"
        },
        "AnomalousCounters": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[DealerDashboardConsumablesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDashboardConsumablesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDashboardConsumablesDto": {
      "type": "object",
      "properties": {
        "SdsTotalEarlyReplacements": {
          "format": "int32",
          "type": "integer"
        },
        "SdsTotalDeviceWithNotGenuineHPCartridge": {
          "format": "int32",
          "type": "integer"
        },
        "AnomalousLevels": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetDevicesSdsAssessAndRemediateRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ProductModel": {
          "description": "Gets or sets the product model.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterDealerCode": {
          "description": "Gets or sets the filter dealer code.",
          "type": "string"
        },
        "FilterCustomerCode": {
          "description": "Filter by a string contained in CustomerCode or CustomerDescription",
          "type": "string"
        },
        "LastAssessRemediateOperationPolicyName": {
          "type": "string"
        },
        "LastAssessRemediateOperationResult": {
          "enum": [
            "All",
            "Passed",
            "Failed",
            "NotVerified"
          ],
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerDashboardAssesmentStatusDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerDashboardAssesmentStatusDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerDashboardAssesmentStatusDto": {
      "type": "object",
      "properties": {
        "TotalDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalPassedDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNotPassedDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNotVerifiedDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNotPassedResultsDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueDto[Nullable[JamOperationResultEnum],Int32]"
          }
        }
      }
    },
    "CodeValueDto[Nullable[JamOperationResultEnum],Int32]": {
      "type": "object",
      "properties": {
        "Code": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "Value": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[DealerNotificationTemplateDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerNotificationTemplateDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerNotificationTemplateDto": {
      "type": "object",
      "properties": {
        "EmailTemplateBase": {
          "description": "Gets or sets the EmailTemplateBase.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerNotificationTemplateDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerNotificationTemplateDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "DealerRemoveMailAddressFromCustomersRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "Emails": {
          "description": "Gets or sets the Email.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ReplaceHpSdsServiceRequest": {
          "type": "boolean"
        },
        "ReplaceDealerDashboard": {
          "type": "boolean"
        },
        "ReplaceAlert": {
          "type": "boolean"
        },
        "ReplaceDelivery": {
          "type": "boolean"
        },
        "ReplaceLogistic": {
          "type": "boolean"
        },
        "ReplacedConsumables": {
          "type": "boolean"
        },
        "ReplaceReadingProblems": {
          "type": "boolean"
        },
        "ReplaceInstallationProposal": {
          "type": "boolean"
        },
        "ReplaceReInstallationProposal": {
          "type": "boolean"
        },
        "ReplaceReadingProblemsExplorer": {
          "type": "boolean"
        },
        "ReplacePanelMessage": {
          "type": "boolean"
        },
        "ReplaceTraceVolume": {
          "type": "boolean"
        },
        "UpdateRows": {
          "type": "boolean"
        }
      }
    },
    "GetDealerNotificationListRequest": {
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "NotificationType": {
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "NotificationMode": {
          "enum": [
            "Email",
            "Callback",
            "Ftp"
          ],
          "type": "string"
        },
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerNotificationDto2]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerNotificationDto2",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerNotificationDto2": {
      "description": "Manage the 5 type of dealer notifications preferences",
      "type": "object",
      "properties": {
        "ActivateOnCustomer": {
          "description": "Get or set if a notification is active or not on Customer",
          "type": "boolean"
        },
        "HasOtherActiveNotifications": {
          "type": "boolean"
        },
        "Origin": {
          "description": "Origin (Dealer/Customer)",
          "type": "string"
        },
        "Callback": {
          "$ref": "#/definitions/NotificationModeWebCallbackDto",
          "description": "Valid for Notification in callback mode"
        },
        "Email": {
          "$ref": "#/definitions/NotificationModeEmailDto",
          "description": "Valid for Notification in email mode"
        },
        "Schedule": {
          "$ref": "#/definitions/ScheduleDto",
          "description": "Valid for Notification with schedule properties"
        },
        "IsActive": {
          "description": "Get or set if a notification is active or not",
          "type": "boolean"
        },
        "Parameters": {
          "description": "Get or set custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "NotificationType": {
          "description": "",
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "NotificationMode": {
          "description": "",
          "enum": [
            "Email",
            "Callback",
            "Ftp"
          ],
          "type": "string"
        },
        "OwnerCode": {
          "description": "Dealer or Customer code",
          "type": "string"
        },
        "Language": {
          "description": "",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "DealerTemplateId": {
          "type": "string"
        },
        "DealerTemplateName": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateDealerNotificationRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "Notification": {
          "$ref": "#/definitions/DealerNotificationDto2",
          "description": ""
        }
      }
    },
    "CreateDealerNotificationRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "Notification": {
          "$ref": "#/definitions/NotificationBaseDto",
          "description": ""
        }
      }
    },
    "CreateDealerProductReplacementRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "IdProductFrom": {
          "description": "Product from",
          "type": "string"
        },
        "UseStandardModel": {
          "description": "Gets or sets a value indicating whether [use standard model].",
          "type": "boolean"
        },
        "ProductTo": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Product to"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerProductReplacementDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerProductReplacementDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerProductReplacementDto": {
      "type": "object",
      "properties": {
        "ProductFrom": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the Product From."
        },
        "ProductTo": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the Product To"
        },
        "IsInherited": {
          "description": "Get if is inerited from super dealer",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "EditDealerProductReplacementRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Id",
          "type": "string"
        },
        "IdProductFrom": {
          "description": "Product from",
          "type": "string"
        },
        "UseStandardModel": {
          "description": "Gets or sets a value indicating whether [use standard model].",
          "type": "boolean"
        },
        "ProductTo": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Product to"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "DealerFilteredPagedRequest": {
      "description": "DealerFilteredPaged Request",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerProductReplacementDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerProductReplacementDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetDealerProductFirmwaresRequest": {
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerProductFirmwareDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerProductFirmwareDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerProductFirmwareDto": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "ProductId": {
          "type": "string"
        },
        "ProductBrand": {
          "type": "string"
        },
        "ProductModel": {
          "type": "string"
        },
        "Folder": {
          "type": "string"
        },
        "Filename": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerProductFirmwareDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerProductFirmwareDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[DealerProductFirmwareDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/DealerProductFirmwareDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[DealerProductFirmwareDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerProductFirmwareDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetDealerProductSettingsRequest": {
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerProductSettingsDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerProductSettingsDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerProductSettingsDto": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "ProductId": {
          "type": "string"
        },
        "ProductBrand": {
          "type": "string"
        },
        "ProductModel": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Settings": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerProductSettingsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerProductSettingsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[DealerProductSettingsDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/DealerProductSettingsDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[DealerProductSettingsDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerProductSettingsDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetDealerSuppliesRequest": {
      "required": [
        "Code",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Mono",
            "Colored"
          ],
          "type": "string"
        },
        "Color": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerSupplyListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplyListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerSupplyListDto": {
      "description": "Supplies related to Dealer choices",
      "type": "object",
      "properties": {
        "PartNumber": {
          "description": "Gets the PartNumber.",
          "type": "string"
        },
        "DealerSKU": {
          "description": "Gets the PartNumber.",
          "type": "string"
        },
        "Description": {
          "description": "Gets the consumable description.",
          "type": "string"
        },
        "DescriptionLocalized": {
          "description": "Gets the DescriptionLocalized.",
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets the Supply Type.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "description": "Gets the Color Type.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets the MaintenanceKit Type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Getsthe MaintenanceKit Color."
        },
        "Duration": {
          "format": "int32",
          "description": "Gets consumable duration in pages",
          "type": "integer"
        },
        "IsInherited": {
          "description": "Get if the supply is inherited from super dealer",
          "type": "boolean"
        },
        "Value": {
          "format": "double",
          "description": "Gets the consumable values",
          "type": "number"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSuggestedStandardSuppliesRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "ProductIds": {
          "description": "Gets or sets the product ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[StandardSupplyDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandardSupplyDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "StandardSupplyDto": {
      "type": "object",
      "properties": {
        "SupplyDefId": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets the PartNumber.",
          "type": "string"
        },
        "Description": {
          "description": "Gets the consumable description.",
          "type": "string"
        },
        "IdSupplyType": {
          "description": "Gets the Supply Type.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "IdColorType": {
          "description": "Gets the Color Type.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "IdMaintenanceKitType": {
          "format": "int32",
          "description": "Gets the MaintenanceKit Type.",
          "type": "integer"
        },
        "IdMaintenanceKitColor": {
          "format": "int32",
          "description": "Getsthe MaintenanceKit Color.",
          "type": "integer"
        },
        "Duration": {
          "format": "int32",
          "description": "Gets consumable duration in pages",
          "type": "integer"
        },
        "Value": {
          "format": "double",
          "description": "Gets the consumable values",
          "type": "number"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDealerSupplyRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerSupplyDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerSupplyDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerSupplyDto": {
      "description": "Supplies related to Dealer choices",
      "type": "object",
      "properties": {
        "PartNumber": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "DealerSKU": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the Description.",
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the Supply Type.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the Color Type.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the Maintenance Kit Type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the Maintenance Kit Color"
        },
        "Duration": {
          "format": "int32",
          "description": "Gets or sets the consumable duration pages",
          "type": "integer"
        },
        "DescriptionLocalized": {
          "description": "Gets or sets the Description localized.",
          "type": "string"
        },
        "Value": {
          "format": "double",
          "description": "The consumable value",
          "type": "number"
        },
        "Translations": {
          "description": "Gets or sets the Translations.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyTranslationDto"
          }
        },
        "DealerCode": {
          "type": "string"
        },
        "IsInherited": {
          "description": "Get if the supply is inherited from super dealer",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateRequest[DealerSupplyDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/DealerSupplyDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "CreateFromStandardSupplyRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "StandardSupplyId": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerSupplyDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerSupplyDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UploadSuppliesRequest": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Attachment": {
          "$ref": "#/definitions/FileInfoDto"
        }
      }
    },
    "SingleResultResponse[DealerSupplyPriceListingDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerSupplyPriceListingDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerSupplyPriceListingDto": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the Id.",
          "type": "string"
        },
        "TradingPartner": {
          "$ref": "#/definitions/TradingPartnerDto",
          "description": "Gets or sets the TradingPartner."
        },
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "Gets or sets the Customer"
        },
        "Dealer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "Gets or sets the Dealer"
        },
        "Name": {
          "description": "Gets or sets the name",
          "type": "string"
        },
        "Identifier": {
          "description": "Gets or sets the identifier",
          "type": "string"
        },
        "Currency": {
          "$ref": "#/definitions/CurrencyDto",
          "description": "The invoice currency"
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Gets or sets the validFrom",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Gets or sets the ValidTo",
          "type": "string"
        },
        "SuppliesPrices": {
          "description": "Gets or sets the Supplies prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyPriceDto"
          }
        }
      }
    },
    "TradingPartnerDto": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the Id.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the Name.",
          "type": "string"
        }
      }
    },
    "SupplyPriceDto": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the Id.",
          "type": "string"
        },
        "Supply": {
          "$ref": "#/definitions/SupplyBaseDto",
          "description": "Gets or sets the PartNumber."
        },
        "Price": {
          "format": "double",
          "description": "Gets or sets the price",
          "type": "number"
        },
        "SellPrice": {
          "format": "double",
          "description": "Gets or sets the sell price.",
          "type": "number"
        },
        "ExternalPartNumber": {
          "description": "Gets or sets the external part number.",
          "type": "string"
        }
      }
    },
    "SupplyBaseDto": {
      "type": "object",
      "properties": {
        "PartNumber": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "DealerSKU": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the Description.",
          "type": "string"
        },
        "DescriptionLocalized": {
          "description": "Gets or sets the DescriptionLocalized.",
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the Color Type.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the Supply Type.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "MaintenanceKitType": {
          "format": "int32",
          "description": "Gets or sets the Maintenance Kit Type.",
          "type": "integer"
        },
        "MaintenanceKitColor": {
          "format": "int32",
          "description": "Gets or sets the Maintenance Kit Color",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDealerSupplyPriceListingListRequest": {
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "type": "string"
        },
        "PartNumber": {
          "type": "string"
        },
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "ShowOnlyActive": {
          "type": "boolean"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerSupplyPriceListingDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplyPriceListingDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerSupplyPriceListingToCreateRequest": {
      "type": "object",
      "properties": {
        "TradingPartner": {
          "$ref": "#/definitions/TradingPartnerDto",
          "description": "Gets or sets the TradingPartner."
        },
        "NewTradingPartnerName": {
          "description": "Creates new tradingpartnername.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the Dealer code.",
          "type": "string"
        },
        "Identifier": {
          "description": "Gets or sets the identifier",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "Currency": {
          "$ref": "#/definitions/CurrencyDto",
          "description": "Gets or sets the currency."
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Gets or sets the validFrom",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Gets or sets the ValidTo",
          "type": "string"
        },
        "SuppliesPrices": {
          "description": "Gets or sets the Supplies prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyPriceCreateUpdateRequest"
          }
        }
      }
    },
    "SupplyPriceCreateUpdateRequest": {
      "type": "object",
      "properties": {
        "IdSupply": {
          "description": "Gets or sets the IdSupply .",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the PartNumber.",
          "type": "string"
        },
        "ExternalPartNumber": {
          "description": "Gets or sets the external part number.",
          "type": "string"
        },
        "Price": {
          "format": "double",
          "description": "Gets or sets the price",
          "type": "number"
        },
        "SellPrice": {
          "format": "double",
          "description": "Gets or sets the sell price.",
          "type": "number"
        }
      }
    },
    "DealerSupplyPriceListingToCreateByCustomerRequest": {
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the Customer",
          "type": "string"
        },
        "TradingPartner": {
          "$ref": "#/definitions/TradingPartnerDto",
          "description": "Gets or sets the TradingPartner."
        },
        "NewTradingPartnerName": {
          "description": "Creates new tradingpartnername.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the Dealer code.",
          "type": "string"
        },
        "Identifier": {
          "description": "Gets or sets the identifier",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "Currency": {
          "$ref": "#/definitions/CurrencyDto",
          "description": "Gets or sets the currency."
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Gets or sets the validFrom",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Gets or sets the ValidTo",
          "type": "string"
        },
        "SuppliesPrices": {
          "description": "Gets or sets the Supplies prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyPriceCreateUpdateRequest"
          }
        }
      }
    },
    "DealerSupplyPriceListingToUpdateRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the Id.",
          "type": "string"
        },
        "TradingPartner": {
          "$ref": "#/definitions/TradingPartnerDto",
          "description": "Gets or sets the TradingPartner."
        },
        "NewTradingPartnerName": {
          "description": "Creates new tradingpartnername.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the Dealer code.",
          "type": "string"
        },
        "Identifier": {
          "description": "Gets or sets the identifier",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the identifier",
          "type": "string"
        },
        "Currency": {
          "$ref": "#/definitions/CurrencyDto",
          "description": "The invoice currency"
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Gets or sets the validFrom",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Gets or sets the ValidTo",
          "type": "string"
        },
        "SuppliesPrices": {
          "description": "Gets or sets the Supplies prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyPriceCreateUpdateRequest"
          }
        }
      }
    },
    "DealerSupplyPriceListingToRequestByCustomerRequest": {
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the Customer",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the Id.",
          "type": "string"
        },
        "TradingPartner": {
          "$ref": "#/definitions/TradingPartnerDto",
          "description": "Gets or sets the TradingPartner."
        },
        "NewTradingPartnerName": {
          "description": "Creates new tradingpartnername.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the Dealer code.",
          "type": "string"
        },
        "Identifier": {
          "description": "Gets or sets the identifier",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the identifier",
          "type": "string"
        },
        "Currency": {
          "$ref": "#/definitions/CurrencyDto",
          "description": "The invoice currency"
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Gets or sets the validFrom",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Gets or sets the ValidTo",
          "type": "string"
        },
        "SuppliesPrices": {
          "description": "Gets or sets the Supplies prices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyPriceCreateUpdateRequest"
          }
        }
      }
    },
    "GetDealerSuppliesSetRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "Model": {
          "description": "Gets or sets the model.",
          "type": "string"
        },
        "HasDevicesToAssociate": {
          "description": "Gets or sets Has Devices To Associate flag.",
          "type": "boolean"
        },
        "IsStandard": {
          "description": "Gets or sets Is standard flag.",
          "type": "boolean"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DealerSupplySetForListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplySetForListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerSupplySetForListDto": {
      "description": "DealerProduct",
      "type": "object",
      "properties": {
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductBaseDto"
          }
        },
        "Supplies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyBaseDto"
          }
        },
        "AssociableDevices": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description",
          "type": "string"
        },
        "IsForDeviceOnly": {
          "description": "Gets or sets a value indicating whether this instance is for device only.",
          "type": "boolean"
        },
        "HasInk": {
          "description": "Gets or sets a value indicating whether this instance has ink.",
          "type": "boolean"
        },
        "IsStandard": {
          "description": "Gets or sets a value indicating whether this instance is a standard supply set.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerSupplySetDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerSupplySetDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerSupplySetDto": {
      "description": "Represent an supply",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Dealer code",
          "type": "string"
        },
        "Supplies": {
          "description": "Gets or sets the supplies associated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplyDto"
          }
        },
        "Products": {
          "description": "Gets or sets the products associated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDto"
          }
        },
        "Description": {
          "description": "Gets or sets the description",
          "type": "string"
        },
        "IsForDeviceOnly": {
          "description": "Gets or sets a value indicating whether this instance is for device only.",
          "type": "boolean"
        },
        "HasInk": {
          "description": "Gets or sets a value indicating whether this instance has ink.",
          "type": "boolean"
        },
        "IsStandard": {
          "description": "Gets or sets a value indicating whether this instance is a standard supply set.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[DealerSupplySetDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DealerSupplySetDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UploadSupplySetRequest": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Attachment": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "ImportOptions": {
          "enum": [
            "IgnoreExist",
            "Append",
            "Overwrite"
          ],
          "type": "string"
        }
      }
    },
    "AssociateByIdAndProductRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "IdDealerSupplySet": {
          "type": "string"
        },
        "IdCustomer": {
          "type": "string"
        }
      }
    },
    "SetInkAttributeRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "IdDealerSupplySet": {
          "type": "string"
        },
        "HasInk": {
          "type": "boolean"
        }
      }
    },
    "ListResultResponse[DealerSupplySetFromStandardModelDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplySetFromStandardModelDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerSupplySetFromStandardModelDto": {
      "type": "object",
      "properties": {
        "DealerSupplySetDescription": {
          "type": "string"
        },
        "PartNumbers": {
          "type": "string"
        },
        "GroupName": {
          "format": "int32",
          "type": "integer"
        },
        "Details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplySetFromStandardModelDetailsDto"
          }
        }
      }
    },
    "DealerSupplySetFromStandardModelDetailsDto": {
      "type": "object",
      "properties": {
        "Product": {
          "$ref": "#/definitions/ProductBaseDto"
        },
        "NrOfMangedDevices": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateDealerSupplySetFromStandardModelsRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "Details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateDealerSupplySetFromStandardModelsDetailsRequest"
          }
        }
      }
    },
    "CreateDealerSupplySetFromStandardModelsDetailsRequest": {
      "type": "object",
      "properties": {
        "DealerSupplySetDescription": {
          "type": "string"
        },
        "ProductIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListResultResponse[DealerTaxRateDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerTaxRateDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerTaxRateDto": {
      "description": "Defines the dealer tax rate object",
      "type": "object",
      "properties": {
        "Country": {
          "$ref": "#/definitions/CountryDto",
          "description": "The dealer code"
        },
        "Code": {
          "description": "An internal code of the tax rate used by the portal UI",
          "type": "string"
        },
        "Description": {
          "description": "An internal description of the tax rate used by the portal UI",
          "type": "string"
        },
        "Label": {
          "description": "The label of the tax rate used in the invoice totals",
          "type": "string"
        },
        "AdditionalNotes": {
          "description": "Additional notes printed in the invoice",
          "type": "string"
        },
        "Definitions": {
          "description": "The rates definitions by validity dates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerTaxRateDefinitionDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DealerTaxRateDefinitionDto": {
      "description": "Defines a tax rate definition",
      "required": [
        "Rate",
        "ValidFrom"
      ],
      "type": "object",
      "properties": {
        "Rate": {
          "format": "double",
          "description": "The tax percentage",
          "type": "number"
        },
        "ValidFrom": {
          "format": "date-time",
          "description": "Tha starting date of the tax rate",
          "type": "string"
        },
        "ValidTo": {
          "format": "date-time",
          "description": "Tha ending date of the tax rate",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerTaxRateDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerTaxRateDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateDealerTaxRateRequest": {
      "description": "Create a new dealer tax rate definition",
      "required": [
        "DealerCode",
        "CountryId",
        "Code",
        "Description",
        "Label",
        "Definitions"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "The dealer code",
          "type": "string"
        },
        "CountryId": {
          "description": "The dealer code",
          "type": "string"
        },
        "Code": {
          "description": "An internal code of the tax rate used by the portal UI",
          "type": "string"
        },
        "Description": {
          "description": "An internal description of the tax rate used by the portal UI",
          "type": "string"
        },
        "Label": {
          "description": "The label of the tax rate used in the invoice totals",
          "type": "string"
        },
        "AdditionalNotes": {
          "description": "Additional notes printed in the invoice",
          "type": "string"
        },
        "Definitions": {
          "description": "The rates definitions by validity dates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerTaxRateDefinitionDto"
          }
        }
      }
    },
    "UpdateDealerTaxRateRequest": {
      "description": "Update a dealer tax rate definition",
      "required": [
        "Id",
        "DealerCode",
        "CountryId",
        "Code",
        "Description",
        "Label",
        "Definitions"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "The id of the dealer tax rate definition",
          "type": "string"
        },
        "DealerCode": {
          "description": "The dealer code",
          "type": "string"
        },
        "CountryId": {
          "description": "The dealer code",
          "type": "string"
        },
        "Code": {
          "description": "An internal code of the tax rate used by the portal UI",
          "type": "string"
        },
        "Description": {
          "description": "An internal description of the tax rate used by the portal UI",
          "type": "string"
        },
        "Label": {
          "description": "The label of the tax rate used in the invoice totals",
          "type": "string"
        },
        "AdditionalNotes": {
          "description": "Additional notes printed in the invoice",
          "type": "string"
        },
        "Definitions": {
          "description": "The rates definitions by validity dates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerTaxRateDefinitionDto"
          }
        }
      }
    },
    "SingleResultResponse[DeviceDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DeviceDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceDto": {
      "description": "Represent a device",
      "type": "object",
      "properties": {
        "CustomFieldValues": {
          "description": "Gets or sets the custom field values.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets or sets the customer id.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "CustomerAssessAndRemediateTemplatedId": {
          "type": "string"
        },
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeCode": {
          "description": "Gets or sets the office code.",
          "type": "string"
        },
        "OfficeDescription": {
          "description": "Gets or sets the office description.",
          "type": "string"
        },
        "OfficeAddress": {
          "description": "Gets or sets the office address.",
          "type": "string"
        },
        "OfficeZipCode": {
          "description": "Gets or sets the office zip code.",
          "type": "string"
        },
        "OfficeProvince": {
          "description": "Gets or sets the office province.",
          "type": "string"
        },
        "OfficeCity": {
          "description": "Gets or sets the office city.",
          "type": "string"
        },
        "OfficeCountry": {
          "description": "Gets or sets the office country.",
          "type": "string"
        },
        "OfficeFloorPinId": {
          "type": "string"
        },
        "OfficeFloorDescription": {
          "type": "string"
        },
        "ProjectId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "ProjectDescription": {
          "description": "Gets or sets the project description.",
          "type": "string"
        },
        "ProjectAlertInformationBox": {
          "description": "Gets or sets the project alert information box.",
          "type": "string"
        },
        "ProjectSupplies": {
          "description": "Gets or sets the projects Supplies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectVolumeDto"
          }
        },
        "CostCenterId": {
          "description": "Gets or sets the costcenter id.",
          "type": "string"
        },
        "CostCenterDescription": {
          "description": "Gets or sets the costcenter description.",
          "type": "string"
        },
        "CostCenterIsDefault": {
          "description": "Gets or sets a value indicating whether [cost center is default].",
          "type": "boolean"
        },
        "Product": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the product."
        },
        "DealerSupplySet": {
          "$ref": "#/definitions/DealerSupplySetBaseDto",
          "description": "Gets or sets the dealer product supply set."
        },
        "ManageConsumables": {
          "description": "Gets a value indicating whether [manage consumables].",
          "type": "boolean",
          "readOnly": true
        },
        "MailDeliveryToner": {
          "description": "Gets or sets the MailDeliveryToner.",
          "type": "string"
        },
        "IsEsprinetLogisticEnabled": {
          "description": "Gets or sets the use Esprinet logistic.",
          "type": "boolean"
        },
        "IsAlsoLogisticEnabled": {
          "description": "Gets or sets the use ALSO logistic.",
          "type": "boolean"
        },
        "IsAdvLogisticEnabled": {
          "description": "Gets or sets the use ADV logistic.",
          "type": "boolean"
        },
        "Firmware": {
          "description": "Gets or sets the firmware.",
          "type": "string"
        },
        "Department": {
          "description": "Department",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "Note": {
          "description": "Gets or sets the note.",
          "type": "string"
        },
        "Install": {
          "format": "date-time",
          "description": "Gets or sets the install.",
          "type": "string"
        },
        "Uninstall": {
          "format": "date-time",
          "description": "Gets or sets the uninstall.",
          "type": "string"
        },
        "MonoInstallCounter": {
          "format": "int32",
          "description": "Gets or sets the mono install counter.",
          "type": "integer"
        },
        "ColorInstallCounter": {
          "format": "int32",
          "description": "Gets or sets the color install counter.",
          "type": "integer"
        },
        "HardwareOrderNumber": {
          "description": "Gets or sets the HardwareOrderNumber.",
          "type": "string"
        },
        "TonerOrderNumber": {
          "description": "Gets or sets the TonerOrderNumber.",
          "type": "string"
        },
        "ContractExpiration": {
          "format": "date-time",
          "description": "Gets or sets the ContractExpiration",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Gets or sets the last update.",
          "type": "string"
        },
        "IsOnline": {
          "description": "Gets or sets a value indicating whether this instance is online.",
          "type": "boolean"
        },
        "BlackToner": {
          "format": "int32",
          "description": "Gets or sets the black toner.",
          "type": "integer"
        },
        "BlackToner1": {
          "format": "int32",
          "description": "Gets or sets the black toner1.",
          "type": "integer"
        },
        "BlackToner1Desc": {
          "description": "Gets or sets the black toner1 desc.",
          "type": "string"
        },
        "BlackToner2": {
          "format": "int32",
          "description": "Gets or sets the black toner2.",
          "type": "integer"
        },
        "BlackToner2Desc": {
          "description": "Gets or sets the black toner2 desc.",
          "type": "string"
        },
        "BlackToner3": {
          "format": "int32",
          "description": "Gets or sets the black toner3.",
          "type": "integer"
        },
        "BlackToner3Desc": {
          "description": "Gets or sets the black toner3 desc.",
          "type": "string"
        },
        "BlackPhoto": {
          "format": "int32",
          "description": "Gets or sets the black photo.",
          "type": "integer"
        },
        "CyanToner": {
          "format": "int32",
          "description": "Gets or sets the cyan toner.",
          "type": "integer"
        },
        "CyanPhoto": {
          "format": "int32",
          "description": "Gets or sets the cyan photo.",
          "type": "integer"
        },
        "MagentaToner": {
          "format": "int32",
          "description": "Gets or sets the magenta toner.",
          "type": "integer"
        },
        "MagentaPhoto": {
          "format": "int32",
          "description": "Gets or sets the magenta photo.",
          "type": "integer"
        },
        "YellowToner": {
          "format": "int32",
          "description": "Gets or sets the yellow toner.",
          "type": "integer"
        },
        "YellowPhoto": {
          "format": "int32",
          "description": "Gets or sets the yellow photo.",
          "type": "integer"
        },
        "IsAlertGenerator": {
          "description": "Gets or sets the is alert generator.",
          "type": "boolean"
        },
        "IsInsideProject": {
          "description": "Gets or sets the IsInsideProject.",
          "type": "boolean"
        },
        "IsClassified": {
          "description": "Gets or sets a value indicating whether this instance is manage supplies.",
          "type": "boolean"
        },
        "IsManageSupplies": {
          "description": "Calculated from.",
          "type": "boolean"
        },
        "MonoCoverage": {
          "format": "double",
          "description": "Gets or sets the Mono Coverage.",
          "type": "number"
        },
        "ColorCoverage": {
          "format": "double",
          "description": "Gets or sets the Color Coverage.",
          "type": "number"
        },
        "MonthlyMonoVolume": {
          "format": "int32",
          "description": "Gets or sets the MonthlyMonoVolume .",
          "type": "integer"
        },
        "MonthlyColorVolume": {
          "format": "int32",
          "description": "Gets or sets the MonthlyColorVolume .",
          "type": "integer"
        },
        "MonthlyMonoVolumeByContract": {
          "format": "int32",
          "description": "Gets or sets the MonthlyMonoVolumeByContract.",
          "type": "integer"
        },
        "MonthlyColorVolumeByContract": {
          "format": "int32",
          "description": "Gets or sets the MonthlyMonoVolumeByContract.",
          "type": "integer"
        },
        "IsOffline": {
          "description": "Gets if the printer is an offline device.",
          "type": "boolean"
        },
        "IsOfflineColoredDevice": {
          "description": "Gets if the printer is a colored printer based on the SupplySet or previous counters.",
          "type": "boolean"
        },
        "ParkedSerialNumber": {
          "description": "Gets or sets the parked serial number, this field is set when the printer change its serial number",
          "type": "string"
        },
        "Counter": {
          "$ref": "#/definitions/CounterDto",
          "description": "Gets the last counter object."
        },
        "CountersDetailed": {
          "description": "Gets the latest counters detailed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterDetailedDto"
          }
        },
        "CountersBlend": {
          "description": "Gets the latest blended counters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountersBlendCounterDto"
          }
        },
        "HasBlendToStandard": {
          "description": "Gets or sets a value indicating whether this instance has blend to standard.",
          "type": "boolean"
        },
        "SdsDevice": {
          "$ref": "#/definitions/SdsDeviceDto",
          "description": "Gets or sets the counter."
        },
        "AnomalousLevels": {
          "description": "Gets or sets anomalous toner and photo levels",
          "type": "string"
        },
        "MaintenanceAlerts": {
          "description": "Gets or sets the maintenance alerts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintenanceAlertDto"
          }
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "MonoPartialCounter": {
          "format": "int32",
          "description": "Gets or sets the mono partial counter.",
          "type": "integer"
        },
        "ColorPartialCounter": {
          "format": "int32",
          "description": "Gets or sets the color partial counter.",
          "type": "integer"
        },
        "ManageRepeatedAlerts": {
          "description": "Get if the device manage repeated alerts",
          "type": "boolean"
        },
        "WalkStatus": {
          "description": "Gets or sets the walk status.",
          "enum": [
            "ForceDisabled",
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "OpenPorts": {
          "description": "Gets or sets the open ports.",
          "type": "string"
        },
        "SnmpProtocols": {
          "description": "Gets or sets the SNMP protocols.",
          "type": "string"
        },
        "HasDca4Affinity": {
          "description": "Gets or sets a value indicating whether this instance has dca4 affinity.",
          "type": "boolean"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DealerSupplySetBaseDto": {
      "description": "Represent an supply",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Gets or sets the description",
          "type": "string"
        },
        "IsForDeviceOnly": {
          "description": "Gets or sets a value indicating whether this instance is for device only.",
          "type": "boolean"
        },
        "HasInk": {
          "description": "Gets or sets a value indicating whether this instance has ink.",
          "type": "boolean"
        },
        "IsStandard": {
          "description": "Gets or sets a value indicating whether this instance is a standard supply set.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsDeviceDto": {
      "description": "The jam device",
      "type": "object",
      "properties": {
        "LastContactTimeUtc": {
          "format": "date-time",
          "description": "LastTime JAMC contacted the printer",
          "type": "string"
        },
        "LastMpsContactTimeUtc": {
          "format": "date-time",
          "description": "LastTime eXplorerJam contacted the printer",
          "type": "string"
        },
        "LastScanTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the last scan time UTC.",
          "type": "string"
        },
        "LastOperationsScanTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the last operations scan time UTC.",
          "type": "string"
        },
        "LastEventsScanTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the last events scan time UTC.",
          "type": "string"
        },
        "IsHpManagedDevice": {
          "description": "Gets or sets a value indicating whether this instance is hp managed device.",
          "type": "boolean"
        },
        "GenuineHPCartridgeStatus": {
          "description": "Gets or sets the genuine hp cartridge status.",
          "type": "string"
        },
        "HasGenuineHpCartridges": {
          "description": "Gets if the device has genuine hp cartridge installed.",
          "type": "boolean"
        },
        "FirmwareVersion": {
          "description": "Gets or sets the firmware version.",
          "type": "string"
        },
        "FirmwareDateCodeUtc": {
          "format": "date-time",
          "description": "Gets or sets the firmware date code UTC.",
          "type": "string"
        },
        "FirmawareVersionUpgradeAvailable": {
          "description": "Gets or sets the firmaware version upgrade available.",
          "type": "string"
        },
        "CustomerJamEnabled": {
          "description": "Gets or sets a value indicating whether [customer jam enabled].",
          "type": "boolean"
        },
        "DealerJamEnabled": {
          "description": "Gets or sets a value indicating whether [dealer jam enabled].",
          "type": "boolean"
        },
        "IsInsideProject": {
          "description": "Gets or sets a value indicating whether this instance is inside project.",
          "type": "boolean"
        },
        "InstalledProductEventsCount": {
          "format": "int32",
          "description": "Gets or sets the installed product events count.",
          "type": "integer"
        },
        "InstalledProductPendingOperationsCount": {
          "format": "int32",
          "description": "Gets or sets the installed product pending operations count.",
          "type": "integer"
        },
        "OperationResults": {
          "description": "Gets or sets the operation results.",
          "type": "string"
        },
        "SupportedFeatures": {
          "description": "Gets or sets the supported features.",
          "type": "string"
        },
        "FeaturesAvailability": {
          "$ref": "#/definitions/SdsDeviceFeatureAvailability"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "enum": [
            "Ok",
            "Warning",
            "Error"
          ],
          "type": "string"
        },
        "CartridgeStatus": {
          "description": "Gets or sets the cartridge status.",
          "enum": [
            "Ok",
            "Warning",
            "Error"
          ],
          "type": "string"
        },
        "ManagedStatus": {
          "description": "Gets or sets the managed status.",
          "enum": [
            "Ok",
            "Warning",
            "Error"
          ],
          "type": "string"
        },
        "Firmwares": {
          "description": "Gets or sets the firmwares.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceFirmwareImageInfoDto"
          }
        },
        "Supplies": {
          "description": "Gets or sets the supplies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceSupplyDto"
          }
        },
        "CanPowerCycleReset": {
          "description": "Gets or sets a value indicating whether this instance can power cycle reset.",
          "type": "boolean"
        },
        "CanSetConfigItems": {
          "description": "Gets or sets a value indicating whether this instance can set configuration items.",
          "type": "boolean"
        },
        "CanGetConfigItems": {
          "description": "Gets or sets a value indicating whether this instance can get configuration items.",
          "type": "boolean"
        },
        "CanFWUpgrade": {
          "description": "Gets or sets a value indicating whether this instance can fw upgrade.",
          "type": "boolean"
        },
        "EnableRemoteEws": {
          "description": "Gets or sets a value indicating whether [enable remote ews].",
          "type": "boolean"
        },
        "CanRemoteEWS": {
          "description": "Gets or sets a value indicating whether this instance can remote ews.",
          "type": "boolean"
        },
        "CanTrainingOnDemand": {
          "description": "Gets or sets a value indicating whether this instance can training on demand.",
          "type": "boolean"
        },
        "CanViewActions": {
          "description": "Gets or sets a value indicating whether this instance can view actions.",
          "type": "boolean"
        },
        "HasPendingConfigItemsOperation": {
          "description": "Gets or sets a value indicating whether this instance has pending configuration items operation.",
          "type": "boolean"
        },
        "HasPendingFirmwareUpgradeOperation": {
          "description": "Gets or sets a value indicating whether this instance has pending firmware upgrade operation.",
          "type": "boolean"
        },
        "HasPendingOnDeviceServicesOperation": {
          "description": "Gets or sets a value indicating whether this instance has pending report a problem application operation.",
          "type": "boolean"
        },
        "HasPendingRemotePQDiagnostics": {
          "description": "Gets or sets a value indicating whether this instance has pending remote pq diagnostics.",
          "type": "boolean"
        },
        "HasPendingCloneToPolicyOperation": {
          "description": "Gets or sets a value indicating whether this instance has pending clone to policy operation.",
          "type": "boolean"
        },
        "HasPendingAssessAndRemediateOperation": {
          "description": "Gets or sets a value indicating whether this instance has pending assess and remediate operation.",
          "type": "boolean"
        },
        "LastConfigItems": {
          "description": "Gets or sets the last configuration items.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsConfigItemDto"
          }
        },
        "OperationFirmwareUpdateAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the operation firmware update at UTC.",
          "type": "string"
        },
        "OperationFirmwareUpdateVersion": {
          "description": "Gets or sets the operation firmware update version.",
          "type": "string"
        },
        "OperationRebootAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the operation reboot at UTC.",
          "type": "string"
        },
        "SdsCredential": {
          "$ref": "#/definitions/SdsCredentialDto",
          "description": "Gets or sets the jam credential."
        },
        "RelevantEventlogs": {
          "description": "Gets or sets the relevant eventlogs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceEventDto"
          }
        },
        "Actions": {
          "description": "Gets or sets the actions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceActionDto"
          }
        },
        "IsCapableRemotePQDiagnostics": {
          "description": "Gets or sets a value indicating whether this instance is capable remote pq diagnostics.",
          "type": "boolean"
        },
        "HasReportAProblemApp": {
          "description": "Gets or sets the has report a problem application.",
          "type": "boolean"
        },
        "HasPrintQualityDiagnostics": {
          "description": "Gets or sets a value indicating whether this instance has remote pq diagnostics.",
          "type": "boolean"
        },
        "CanInstallReportAProblemApp": {
          "description": "Gets or sets a value indicating whether this device can install Report a Problem App",
          "type": "boolean"
        },
        "CanInstallPrintQualityDiagnostics": {
          "description": "Gets or sets a value indicating whether this instance can install remote pq diagnostics.",
          "type": "boolean"
        },
        "LastAssessAndRemediateOperation": {
          "$ref": "#/definitions/SdsDeviceOperationDto",
          "description": "Gets or sets the last assess and remediate operation."
        },
        "CartridgeLowMessageStrategy": {
          "description": "Cartridge Low message strategy setting",
          "type": "string"
        },
        "LongLifeConsumablesLowMessageStrategy": {
          "description": "Long Life Consumables Low Message Strategy strategy setting",
          "type": "string"
        },
        "JamDeviceId": {
          "format": "int32",
          "description": "Gets or sets the jam device id",
          "type": "integer"
        },
        "HostName": {
          "description": "Gets or sets the jam hostname.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "ModelName": {
          "description": "Gets or sets the name of the model.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "IsUsbDevice": {
          "description": "Gets or sets a value indicating whether this instance is usb device.",
          "type": "boolean"
        },
        "IsWppDevice": {
          "description": "Gets or sets a value indicating whether this instance is WPP device.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "MaintenanceAlertDto": {
      "description": "MaintenanceAlertDto",
      "type": "object",
      "properties": {
        "Identifier": {
          "description": "Identifier",
          "type": "string"
        },
        "Code": {
          "description": "Code",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Opened": {
          "format": "date-time",
          "description": "Opened",
          "type": "string"
        },
        "Closed": {
          "format": "date-time",
          "description": "Closed",
          "type": "string"
        },
        "PanelMessageAlertConfiguration": {
          "$ref": "#/definitions/PanelMessageAlertConfigurationBaseDto",
          "description": "PanelMessageAlertConfiguration"
        }
      }
    },
    "SdsDeviceFeatureAvailability": {
      "type": "object",
      "properties": {
        "DeviceStatus": {
          "$ref": "#/definitions/SdsDeviceStatus"
        },
        "ConnectorStatus": {
          "$ref": "#/definitions/SdsConnectorStatus"
        },
        "Features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceFeature"
          }
        },
        "RemotePrintQualityCapabilities": {
          "$ref": "#/definitions/SdsRemotePrintQualityCapabilities"
        }
      }
    },
    "SdsDeviceFirmwareImageInfoDto": {
      "type": "object",
      "properties": {
        "UpdatedAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the updated at UTC.",
          "type": "string"
        },
        "Title": {
          "description": "Gets or sets the title.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "BuildVersion": {
          "description": "Gets or sets the build version.",
          "type": "string"
        },
        "DateCode": {
          "description": "Gets or sets the date code.",
          "type": "string"
        },
        "DateUtc": {
          "format": "date-time",
          "description": "Gets or sets the date UTC.",
          "type": "string"
        },
        "ReleaseVersion": {
          "description": "Gets or sets the release version.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsDeviceSupplyDto": {
      "type": "object",
      "properties": {
        "Consumable": {
          "description": "Gets or sets the consumable.",
          "type": "string"
        },
        "Occurrence": {
          "description": "Gets or sets the occurrence.",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "type": "string"
        },
        "ModelNumber": {
          "description": "Gets or sets the model number.",
          "type": "string"
        },
        "LastCollectionTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the last collection time UTC.",
          "type": "string"
        },
        "LevelValuePercent": {
          "format": "int32",
          "description": "Gets or sets the level value percent.",
          "type": "integer"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "ManufactureDateUtc": {
          "format": "date-time",
          "description": "Gets or sets the manufacture date UTC.",
          "type": "string"
        },
        "InstallDateUtc": {
          "format": "date-time",
          "description": "Gets or sets the install date UTC.",
          "type": "string"
        },
        "OcvStatus": {
          "description": "Gets or sets the ocv status.",
          "type": "string"
        },
        "ReplacementDateUtc": {
          "format": "date-time",
          "description": "Gets or sets the replacement date UTC.",
          "type": "string"
        },
        "ChangedTooEarly": {
          "description": "Gets or sets a value indicating whether [changed too early].",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsConfigItemDto": {
      "description": "ConfigItemEntry",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "enum": [
            "AdminPassword",
            "AllowUserCreateAccount",
            "AppletalkEnabled",
            "AssetNumber",
            "CartridgeLife",
            "CompanyContact",
            "CompanyName",
            "CorsEnabled",
            "CorsTrustedSites",
            "CountDetails",
            "CountTotals",
            "Coverage",
            "DefaultMediaSize",
            "DefaultPrintCopy",
            "DeviceAnnouncementConfigServer",
            "DeviceAnnouncementEnable",
            "DeviceAnnouncementRequireMutualAuth",
            "DeviceDateTime",
            "DeviceLocation",
            "DeviceName",
            "EPrintSetting",
            "EwsPageLanguage",
            "FileSystemAccessNfsEnabled",
            "FileSystemAccessPjlEnabled",
            "FileSystemAccessPmlEnabled",
            "FileSystemAccessPsEnabled",
            "FileSystemPassword",
            "FileSystemSettings",
            "FtpEnabled",
            "FtpFirmwareUpdate",
            "HttpIdleTimeout",
            "HttpsRedirectEnabled",
            "InactivityTimeout",
            "JamRecovery",
            "LongLifeConsumablesLife",
            "LostMessageNotification",
            "ManualFeedPrompt",
            "MediaHandling",
            "MoreAppsEnabled",
            "MoreAppsInstallation",
            "MoreAppsUninstallation",
            "OverrideA4Letter",
            "PjlPassword",
            "RcfgEnabled",
            "RequestedTrayMatch",
            "RetrieveFromUsbEnabled",
            "RfuEnabled",
            "ServiceInvocationNotification",
            "SnmpRwAccessType",
            "SnmpV3Enabled",
            "Supplies",
            "SystemContact",
            "TcpIdleTimeout",
            "TelnetEnabled",
            "WebProxySettings",
            "WsPrintEnabled",
            "NetworkModelNumber",
            "MacAddress",
            "LinkForWebSupport",
            "CSRFPrevention",
            "SerialNumber",
            "NetworkFirmwareVersion",
            "SnmpVersionSupport",
            "CurrentLinkPlatformStatus",
            "DeviceFirmwareDateCode",
            "DeviceFirmwareVersion",
            "DeviceModel",
            "DeviceUsageCounters",
            "IsCSRFSupported",
            "OXPdUIAttributes",
            "OXPdUIProfile",
            "PrtMarkerSupplies",
            "SetCommunityName",
            "GetCommunityName",
            "GetCommunityNameEnabled",
            "IpxSpxEnabled",
            "VerifyAdminUsingRequestCredential",
            "VerifySnmpV3UsingRequestCredential",
            "AlertEvents",
            "DeviceAutosendTicket",
            "EngineStatistics",
            "ErrorEvents",
            "FSStats",
            "HWConfig",
            "InfoEvents",
            "JobEvents",
            "TransducerData",
            "WarningEvents",
            "Tls12Enabled",
            "Tls11Enabled",
            "P9100Enabled",
            "JobStorageLimit",
            "JetDirectFirmwareDateCode",
            "Ipv4Address",
            "HostName",
            "HPWebServices",
            "EwsEnabled",
            "DeviceAnnouncementRequireMutualAuthEnabled",
            "DeviceAnnouncementEnabledV2",
            "SnmpV3Credentials",
            "OverrideA4LetterEnabled",
            "WebProxyServerUserName",
            "WebProxyServerPort",
            "WebProxyServerPassword",
            "WebProxyServer",
            "SNMPV3PasswordMinLength",
            "SNMPV3ComplexityEnabled",
            "PowerSaveTimeout",
            "MediaHandlingEnabled",
            "ControlPanelTimeout",
            "ControlPanelDisplayText",
            "AdminPasswordComplexityEnabled",
            "AdminPasswordMinLength",
            "SnmpV3AccountLockout",
            "SnmpV3PasswordLockoutInterval",
            "SnmpV3PasswordMaxAttempt",
            "SnmpV3PasswordResetLockoutCounterInterval",
            "WebProxyServerExceptionList",
            "EPrintEnabled",
            "EPrintSettingV2",
            "MoreAppsEnabledV2",
            "TransducerMonitoring",
            "SolutionsList",
            "AdminAccountLockout",
            "AdminPasswordLockoutInterval",
            "AdminPasswordMaxAttempts",
            "AdminPasswordResetLockoutCounterInterval",
            "DeviceLicense",
            "RawDeviceLicense",
            "AllowUserCreateAccountV2",
            "SmartCloudServices",
            "PrinterMediaPathMaxSpeed",
            "FirmwareSolutions",
            "ConsumableAccessLock",
            "IsLPDWWSupported"
          ],
          "type": "string"
        },
        "SetValue": {
          "description": "Gets or sets the set value.",
          "type": "string"
        },
        "CanRead": {
          "description": "Gets a value indicating whether this instance can read.",
          "type": "boolean",
          "readOnly": true
        },
        "CanWrite": {
          "description": "Gets a value indicating whether this instance can write.",
          "type": "boolean",
          "readOnly": true
        },
        "CreatedAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the created at UTC.",
          "type": "string"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "string"
        },
        "Reason": {
          "description": "Gets or sets the reason.",
          "type": "string"
        },
        "Value": {
          "description": "Gets or sets the value.",
          "type": "string"
        },
        "SingleValue": {
          "description": "Gets or sets the single value.",
          "type": "string"
        }
      }
    },
    "SdsDeviceEventDto": {
      "description": "",
      "type": "object",
      "properties": {
        "EventType": {
          "enum": [
            "Undefined",
            "Error",
            "Warning",
            "Info",
            "BlackBox"
          ],
          "type": "string"
        },
        "EventCode": {
          "type": "string"
        },
        "EventDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "SequenceNumber": {
          "format": "int32",
          "description": "Required, integer, an identifier to differentiate different occurrences of the same event",
          "type": "integer"
        },
        "EventOccurrences": {
          "format": "int32",
          "description": "Required, integer, the number of these events that have occurred without another event between them.",
          "type": "integer"
        },
        "TotalImpressions": {
          "format": "double",
          "description": "Required, long unsigned integer, the number of impressions on the device at the time of the error.",
          "type": "number"
        },
        "FirmwareVersion": {
          "description": "Required, string, the version of firmware on the device at the time of the error.",
          "type": "string"
        },
        "EventDescription": {
          "description": "Optional, Localized short description of the event.",
          "type": "string"
        },
        "Link": {
          "description": "Optional, URI,  fully qualified path to the documentation for this error.",
          "type": "string"
        },
        "IsHidden": {
          "description": "Flag set by Dealer that ignore this event",
          "type": "boolean"
        },
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsDeviceActionDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "InstalledProductSerialNumber": {
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "Model": {
          "description": "Gets or sets the model.",
          "type": "string"
        },
        "ActionJamId": {
          "description": "Required, guid, the actionJamid of the action",
          "type": "string"
        },
        "DeviceId": {
          "description": "Required, string, the id of the device",
          "type": "string"
        },
        "Code": {
          "description": "Required, string, the code associated with the action.",
          "type": "string"
        },
        "EventCodeContext": {
          "description": "Optional, string, the event code associated with this action if available",
          "type": "string"
        },
        "ActionDateUtc": {
          "format": "date-time",
          "description": "Date: Required, date time in UTC, the date and time the action was created.",
          "type": "string"
        },
        "Severity": {
          "description": "Gets or sets the severity.",
          "enum": [
            "High",
            "Medium",
            "Low"
          ],
          "type": "string"
        },
        "CurrentState": {
          "description": "Gets or sets the state of the current.",
          "enum": [
            "Open",
            "Postponed",
            "ClosedCleared",
            "ClosedIgnored",
            "ClosedFixedAsDesigned",
            "ClosedIncorrectAction",
            "ClosedCanceled",
            "Closed"
          ],
          "type": "string"
        },
        "StatusReports": {
          "description": "Gets or sets the status reports.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsActionStatusReportDto"
          }
        },
        "HasGenuineHpCartridges": {
          "description": "Gets or sets a value indicating whether this instance has genuine hp cartridges.",
          "type": "boolean"
        },
        "Title": {
          "description": "Optional, string, localized title of the action document.",
          "type": "string"
        },
        "Description": {
          "description": "Optional, string, localized description of the action document.",
          "type": "string"
        },
        "MeanTimeToRepair": {
          "description": "Optional, Localized string for repair time",
          "type": "string"
        },
        "ServiceLevel": {
          "description": "Optional, localized description of expertise required",
          "type": "string"
        },
        "Tools": {
          "description": "Optional, localized array of strings that describe tools required.",
          "type": "string"
        },
        "Parts": {
          "description": "Optional, list of updated replacement part numbers.",
          "type": "string"
        },
        "Link": {
          "description": "Optional, URI, fully qualified path to the localized documentation for this action.Link expires after 7 days.A new link will be created for each call.",
          "type": "string"
        },
        "TotalImpressions": {
          "format": "int64",
          "description": "Optional, long unsigned integer, the number of impressions on the device at the time of the action creation.",
          "type": "integer"
        },
        "FirmwareVersion": {
          "description": "Optional, string, the version of firmware on the device at the time of the action creation.",
          "type": "string"
        },
        "ActionType": {
          "description": "Gets or sets the type of the action.",
          "type": "string"
        },
        "PredictiveData": {
          "$ref": "#/definitions/SdsActionPredictiveDataDto",
          "description": "Gets or sets the predictive data."
        },
        "CustomerReportedProblemData": {
          "$ref": "#/definitions/SdsActionCustomerReportedProblemDataDto",
          "description": "Gets or sets the customer reported problem data."
        },
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeCode": {
          "description": "Gets or sets the office code.",
          "type": "string"
        },
        "OfficeDescription": {
          "description": "Gets or sets the office description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsDeviceOperationDto": {
      "type": "object",
      "properties": {
        "OperationId": {
          "format": "int32",
          "description": "Gets or sets the operation identifier.",
          "type": "integer"
        },
        "CreatedTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the created time UTC.",
          "type": "string"
        },
        "LastUpdatedTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the last updated time UTC.",
          "type": "string"
        },
        "Operation": {
          "description": "Gets or sets the operation.",
          "enum": [
            "FirmwareUpgrade",
            "DeviceConfig",
            "PowerCycleReset",
            "RetrieveDeviceData",
            "AdminCredentials",
            "SnmpV1V2ReadCredentials",
            "SnmpV1V2ReadWriteCredentials",
            "SnmpV3Credentials",
            "Events",
            "Actions",
            "InstallRapa",
            "UninstallRapa",
            "AssessAndRemediate",
            "CloneToPolicy",
            "RemoteEWS",
            "InstallPrinterQualityApp",
            "UninstallPrinterQualityApp",
            "RemotePrintDiagnostics"
          ],
          "type": "string"
        },
        "UserAccountId": {
          "format": "int32",
          "description": "Gets or sets the user account identifier.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "Details": {
          "description": "Gets or sets the details.",
          "type": "string"
        },
        "OperationInfo": {
          "description": "Gets or sets the operation information.",
          "type": "string"
        },
        "IsPending": {
          "description": "Gets or sets a value indicating whether this instance is pending.",
          "type": "boolean"
        },
        "IsSuccess": {
          "description": "Gets or sets a value indicating whether this instance is success.",
          "type": "boolean"
        },
        "IsError": {
          "description": "Gets or sets a value indicating whether this instance is error.",
          "type": "boolean"
        },
        "IsCredentialsOperation": {
          "description": "Gets or sets a value indicating whether this instance is credentials operation.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PanelMessageAlertConfigurationBaseDto": {
      "description": "Panel message alert configuration",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Gets or sets the Description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsDeviceStatus": {
      "type": "object",
      "properties": {
        "HasGenuineHPCartridges": {
          "type": "boolean"
        },
        "CurrentFirmwareVersion": {
          "type": "string"
        },
        "LastContactTime": {
          "format": "date-time",
          "type": "string"
        },
        "CurrentConnectorId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SdsConnectorStatus": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "LastContactTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SdsDeviceFeature": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Supported": {
          "type": "string"
        },
        "LastResult": {
          "type": "string"
        },
        "Dependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceFeatureDependency"
          }
        }
      }
    },
    "SdsRemotePrintQualityCapabilities": {
      "type": "object",
      "properties": {
        "RemotePQDiagnostics": {
          "$ref": "#/definitions/SdsRemotePQdiagnostics"
        }
      }
    },
    "SdsActionStatusReportDto": {
      "description": "SdsActionStatusReport",
      "type": "object",
      "properties": {
        "ActionDateUtc": {
          "format": "date-time",
          "description": "Date: Required, date time in UTC, the date and time the action was updated",
          "type": "string"
        },
        "State": {
          "description": "Optional, see Action State for definition, new state of the action.If not provided then Severity must be provided",
          "enum": [
            "Open",
            "Postponed",
            "ClosedCleared",
            "ClosedIgnored",
            "ClosedFixedAsDesigned",
            "ClosedIncorrectAction",
            "ClosedCanceled",
            "Closed"
          ],
          "type": "string"
        },
        "Severity": {
          "description": "Optional, see Action Severity for definition, new state of the action.If not provided then State must be provided",
          "enum": [
            "High",
            "Medium",
            "Low"
          ],
          "type": "string"
        },
        "Comments": {
          "description": "Optional, string, any additional comments related to the issue.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsActionPredictiveDataDto": {
      "description": "SdsActionPredictiveDataDto",
      "type": "object",
      "properties": {
        "Probability": {
          "format": "float",
          "description": "Gets or sets the probability.",
          "type": "number"
        },
        "DayWindow": {
          "format": "int32",
          "description": "Gets or sets the day window.",
          "type": "integer"
        }
      }
    },
    "SdsActionCustomerReportedProblemDataDto": {
      "description": "SdsActionCustomerReportedProblemDataDto",
      "type": "object",
      "properties": {
        "Category": {
          "description": "Gets or sets the category.",
          "type": "string"
        },
        "Subcategory": {
          "description": "Gets or sets the subcategory.",
          "type": "string"
        },
        "Details": {
          "description": "Gets or sets the details.",
          "type": "string"
        }
      }
    },
    "SdsDeviceFeatureDependency": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        }
      }
    },
    "SdsRemotePQdiagnostics": {
      "type": "object",
      "properties": {
        "Capable": {
          "type": "boolean"
        },
        "Reason": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[DeviceAdditionalInfoDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceAdditionalInfoDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceAdditionalInfoDto": {
      "type": "object",
      "properties": {
        "Category": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Creation": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DeviceLfpCounterDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceLfpCounterDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceLfpCounterDto": {
      "type": "object",
      "properties": {
        "CounterValue": {
          "format": "double",
          "type": "number"
        },
        "CounterLastUpdateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "CounterType": {
          "type": "string"
        },
        "CounterDescription": {
          "type": "string"
        },
        "MeasurementUnitDescription": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[DeviceGapInfoDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceGapInfoDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceGapInfoDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "DataType": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[DeviceSuppliesSummaryDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DeviceSuppliesSummaryDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceSuppliesSummaryDto": {
      "type": "object",
      "properties": {
        "SupplyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceSupplySummaryDto"
          }
        }
      }
    },
    "DeviceSupplySummaryDto": {
      "type": "object",
      "properties": {
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorTypeEnum": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "MaintenanceKitType": {
          "format": "int32",
          "type": "integer"
        },
        "MaintenanceKitColor": {
          "format": "int32",
          "type": "integer"
        },
        "MaintenanceKitDescription": {
          "format": "int32",
          "type": "integer"
        },
        "PartNumberShipped": {
          "type": "string"
        },
        "PartNumberShippedDescription": {
          "type": "string"
        },
        "SupplyDescription": {
          "type": "string"
        },
        "PartNumberShippedDuration": {
          "format": "int32",
          "type": "integer"
        },
        "SupplySetPartNumber": {
          "type": "string"
        },
        "SupplySetPartNumberDescription": {
          "type": "string"
        },
        "SupplySetPartNumberDuration": {
          "format": "int32",
          "type": "integer"
        },
        "ManagedAlerts": {
          "format": "int32",
          "type": "integer"
        },
        "InstalledAlerts": {
          "format": "int32",
          "type": "integer"
        },
        "CartdrigeCoverage": {
          "format": "double",
          "type": "number"
        },
        "AvgDuration": {
          "format": "int32",
          "type": "integer"
        },
        "AvgCoverageSupplyColor": {
          "format": "double",
          "type": "number"
        },
        "CurrentLevel": {
          "format": "int32",
          "type": "integer"
        },
        "CurrentLevelDevice": {
          "format": "int32",
          "type": "integer"
        },
        "RemainingPages": {
          "format": "int32",
          "type": "integer"
        },
        "CartdrigeExhaustionExpectedDate": {
          "format": "date-time",
          "type": "string"
        },
        "InstallationDate": {
          "format": "date-time",
          "type": "string"
        },
        "ErrorDescription": {
          "type": "string"
        },
        "InvalidResult": {
          "type": "boolean"
        },
        "Tolerance": {
          "format": "int32",
          "type": "integer"
        },
        "ToleranceConfidence": {
          "type": "string"
        },
        "PartNumberShippedDifferenceBetweenNominalDurationAndExpectedDuration": {
          "format": "int32",
          "type": "integer"
        },
        "SupplySetPartNumberDifferenceBetweenNominalDurationAndExpectedDuration": {
          "format": "int32",
          "type": "integer"
        },
        "PrintedPages": {
          "format": "int32",
          "type": "integer"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "CurrentLevelConsumable": {
          "format": "int32",
          "type": "integer"
        },
        "SerialNumber": {
          "type": "string"
        },
        "PartNumber": {
          "type": "string"
        },
        "InstallationDateConsumable": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdateConsumable": {
          "format": "date-time",
          "type": "string"
        },
        "ShowPredictiveDataWarning": {
          "type": "boolean"
        },
        "ConsumableDescription": {
          "type": "string"
        },
        "Yield": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[DeviceShippedInfoDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DeviceShippedInfoDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceShippedInfoDto": {
      "type": "object",
      "properties": {
        "Brand": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "LastCounterMono": {
          "format": "int32",
          "type": "integer"
        },
        "LastCounterColor": {
          "format": "int32",
          "type": "integer"
        },
        "InstalledProductShippedInfoItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceShippedInfoItemDto"
          }
        }
      }
    },
    "DeviceShippedInfoItemDto": {
      "type": "object",
      "properties": {
        "SupplyType": {
          "type": "string"
        },
        "ColorType": {
          "type": "string"
        },
        "Warning": {
          "type": "string"
        },
        "Level": {
          "format": "int32",
          "type": "integer"
        },
        "LastManualOrAutomaticOpened": {
          "type": "string"
        },
        "LastManualOrAutomaticShipped": {
          "type": "string"
        },
        "LastManualOrAutomaticClosed": {
          "type": "string"
        },
        "LastManualOrAutomaticGeneration": {
          "type": "string"
        },
        "LastManualOrAutomaticStockedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "LastManualOrAutomaticStatus": {
          "type": "string"
        },
        "TotalStockedAlerts": {
          "format": "int32",
          "type": "integer"
        },
        "LastShippedDate": {
          "type": "string"
        },
        "TotalShipped": {
          "format": "int32",
          "type": "integer"
        },
        "DurationPagesNominal": {
          "format": "int32",
          "type": "integer"
        },
        "SuggestedPartnumer": {
          "type": "string"
        },
        "IsUsingStarteKit": {
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[DeviceSuppliesDetailsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DeviceSuppliesDetailsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceSuppliesDetailsDto": {
      "type": "object",
      "properties": {
        "SupplyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceSupplyDetailDto"
          }
        }
      }
    },
    "DeviceSupplyDetailDto": {
      "type": "object",
      "properties": {
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorTypeEnum": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "PartNumber": {
          "type": "string"
        },
        "NominalDuration": {
          "format": "int32",
          "type": "integer"
        },
        "ShippedQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "InstalledQuantity": {
          "format": "int32",
          "type": "integer"
        },
        "AverageDuration": {
          "format": "float",
          "type": "number"
        },
        "AverageCoverage": {
          "format": "double",
          "type": "number"
        },
        "ResidualDuration": {
          "format": "int32",
          "type": "integer"
        },
        "DateExhaustion": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetSuppliesDetailsInfoRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "IdMaintenanceKitType": {
          "format": "int32",
          "type": "integer"
        },
        "IdMaintenanceKitColor": {
          "format": "int32",
          "type": "integer"
        },
        "IdMaintenanceKitDescription": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DeviceSuppliesDetailsInfoDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DeviceSuppliesDetailsInfoDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceSuppliesDetailsInfoDto": {
      "type": "object",
      "properties": {
        "SupplyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceSupplyDetailInfoDto"
          }
        }
      }
    },
    "DeviceSupplyDetailInfoDto": {
      "type": "object",
      "properties": {
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "MaintenanceKitType": {
          "format": "int32",
          "type": "integer"
        },
        "MaintenanceKitColor": {
          "format": "int32",
          "type": "integer"
        },
        "MaintenanceKitDescription": {
          "format": "int32",
          "type": "integer"
        },
        "CoverageSourceType": {
          "enum": [
            "NotDefined",
            "DeviceInstalled",
            "Alert",
            "ConsumableCurrentInstalled"
          ],
          "type": "string"
        },
        "IdSupplyAlert": {
          "type": "string"
        },
        "AlertOpeningDate": {
          "format": "date-time",
          "type": "string"
        },
        "InstallationDate": {
          "format": "date-time",
          "type": "string"
        },
        "ReplacementDate": {
          "format": "date-time",
          "type": "string"
        },
        "CollectionDate": {
          "format": "date-time",
          "type": "string"
        },
        "CurrentLevel": {
          "format": "int32",
          "type": "integer"
        },
        "CurrentLevelDevice": {
          "format": "int32",
          "type": "integer"
        },
        "PartNumberShippedIdSupply": {
          "format": "int32",
          "type": "integer"
        },
        "PartNumberShipped": {
          "type": "string"
        },
        "PartNumberShippedDescription": {
          "type": "string"
        },
        "PartNumberShippedSerialNumber": {
          "type": "string"
        },
        "PrintedPages": {
          "format": "int32",
          "type": "integer"
        },
        "PartNumberShippedDuration": {
          "format": "int32",
          "type": "integer"
        },
        "AvgDuration": {
          "format": "int32",
          "type": "integer"
        },
        "CartdrigeCoverage": {
          "format": "double",
          "type": "number"
        },
        "AvgCoverageSupplyColor": {
          "format": "double",
          "type": "number"
        },
        "RemainingPages": {
          "format": "int32",
          "type": "integer"
        },
        "CartdrigeExhaustionExpectedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ErrorDescription": {
          "type": "string"
        },
        "InvalidResult": {
          "type": "boolean"
        },
        "SupplySetIdSupply": {
          "format": "int32",
          "type": "integer"
        },
        "SupplySetPartNumber": {
          "type": "string"
        },
        "SupplySetPartNumberDescription": {
          "type": "string"
        },
        "SupplySetPartNumberDuration": {
          "format": "int32",
          "type": "integer"
        },
        "Tolerance": {
          "format": "int32",
          "type": "integer"
        },
        "ToleranceConfidence": {
          "type": "string"
        },
        "PartNumberShippedDifferenceBetweenNominalDurationAndExpectedDuration": {
          "format": "int32",
          "type": "integer"
        },
        "SupplySetPartNumberDifferenceBetweenNominalDurationAndExpectedDuration": {
          "format": "int32",
          "type": "integer"
        },
        "IdShippedSupply": {
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "CurrentLevelConsumable": {
          "format": "int32",
          "type": "integer"
        },
        "SerialNumber": {
          "type": "string"
        },
        "PartNumber": {
          "type": "string"
        },
        "InstallationDateConsumable": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdateConsumable": {
          "format": "date-time",
          "type": "string"
        },
        "ShowPredictiveDataWarning": {
          "type": "boolean"
        },
        "ConsumableDescription": {
          "type": "string"
        },
        "Yield": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[ZebraDeviceSuppliesSummaryDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ZebraDeviceSuppliesSummaryDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ZebraDeviceSuppliesSummaryDto": {
      "type": "object",
      "properties": {
        "MediaRollSupplyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZebraDeviceMediaRollSupplySummaryDto"
          }
        },
        "MediaCartridgeSupplyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZebraDeviceMediaCartridgeSupplySummaryDto"
          }
        },
        "RibbonCartridgeSupplyDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ZebraDeviceRibbonCartridgeSupplySummaryDto"
          }
        }
      }
    },
    "ZebraDeviceMediaRollSupplySummaryDto": {
      "type": "object",
      "properties": {
        "MediaRollIndex": {
          "format": "int32",
          "type": "integer"
        },
        "MediaRollLoaded": {
          "type": "boolean"
        },
        "MediaRollPartNumber": {
          "type": "string"
        },
        "MediaRollSerialNumber": {
          "type": "string"
        },
        "MediaRollLength": {
          "format": "int32",
          "type": "integer"
        },
        "MediaRollWidth": {
          "format": "int32",
          "type": "integer"
        },
        "MediaRollSpeed": {
          "format": "int32",
          "type": "integer"
        },
        "MediaRollDarkness": {
          "format": "int32",
          "type": "integer"
        },
        "MediaRollTotalLabelCount": {
          "format": "int32",
          "type": "integer"
        },
        "MediaRollLabelRemain": {
          "format": "int32",
          "type": "integer"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "IsLastRead": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ZebraDeviceMediaCartridgeSupplySummaryDto": {
      "type": "object",
      "properties": {
        "MediaIndex": {
          "format": "int32",
          "type": "integer"
        },
        "MediaCounter": {
          "format": "int32",
          "type": "integer"
        },
        "MediaPartNumber": {
          "type": "string"
        },
        "MediaSerialNumber": {
          "type": "string"
        },
        "MediaLength": {
          "format": "int32",
          "type": "integer"
        },
        "MediaWidth": {
          "format": "int32",
          "type": "integer"
        },
        "MediaSpeed": {
          "format": "int32",
          "type": "integer"
        },
        "MediaDarkness": {
          "format": "int32",
          "type": "integer"
        },
        "MediaTotalLabelCount": {
          "format": "int32",
          "type": "integer"
        },
        "MediaLabelInitial": {
          "format": "int32",
          "type": "integer"
        },
        "MediaLabelRemain": {
          "format": "int32",
          "type": "integer"
        },
        "MediaLabelUsed": {
          "format": "int32",
          "type": "integer"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "IsLastRead": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ZebraDeviceRibbonCartridgeSupplySummaryDto": {
      "type": "object",
      "properties": {
        "RibbonIndex": {
          "format": "int32",
          "type": "integer"
        },
        "RibbonCounter": {
          "format": "int32",
          "type": "integer"
        },
        "RibbonPartNumber": {
          "type": "string"
        },
        "RibbonSerialNumber": {
          "type": "string"
        },
        "RibbonCartridgeType": {
          "type": "string"
        },
        "RibbonLength": {
          "format": "int32",
          "type": "integer"
        },
        "RibbonWidth": {
          "format": "int32",
          "type": "integer"
        },
        "RibbonInitial": {
          "format": "int32",
          "type": "integer"
        },
        "RibbonRemain": {
          "format": "int32",
          "type": "integer"
        },
        "RibbonUsed": {
          "format": "int32",
          "type": "integer"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "IsLastRead": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "OfflineDeviceRequest": {
      "description": "OfflineDeviceRequest payload",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "The CustomerCode",
          "type": "string"
        },
        "Contact": {
          "description": "The offline printer Contact",
          "type": "string"
        },
        "AssetNumber": {
          "description": "The offline printer AssetNumber",
          "type": "string"
        },
        "SerialNumber": {
          "description": "The offline printer  SerialNumber",
          "type": "string"
        },
        "Brand": {
          "description": "The offline printer Brand",
          "type": "string"
        },
        "Model": {
          "description": "The offline printer Model",
          "type": "string"
        },
        "MonoCounter": {
          "description": "The offline printer MonoCounter",
          "type": "string"
        },
        "ColorCounter": {
          "description": "The offline printer ColorCounter",
          "type": "string"
        },
        "Firmware": {
          "description": "The offline printer Firmware",
          "type": "string"
        },
        "MacAddress": {
          "description": "The offline printer MacAddress",
          "type": "string"
        },
        "IpAddress": {
          "description": "The offline printer IpAddress",
          "type": "string"
        }
      }
    },
    "GetDeviceDetailsRequest": {
      "description": "Represents a request to retrieve a device",
      "required": [
        "DeviceId"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device Id",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DeviceDetailsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DeviceDetailsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceDetailsDto": {
      "description": "Represent a device",
      "type": "object",
      "properties": {
        "IdInstalledProduct": {
          "description": "Gets or sets the id installedProduct",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "DetailsBySupply": {
          "description": "Gets or sets the details by supply",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstalledProductDetailBySupplyDto"
          }
        },
        "SuppliesInfo": {
          "description": "Gets or sets the suppliesInfo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "MaintenanceKitLevels": {
          "description": "Gets or sets the suppliesInfo",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintenanceKitCounterDto"
          }
        },
        "TechnicalInformation": {
          "description": "Gets or sets the technical information",
          "type": "string"
        }
      }
    },
    "InstalledProductDetailBySupplyDto": {
      "description": "Represent a device",
      "type": "object",
      "properties": {
        "SupplyType": {
          "description": "Gets or sets the supply type",
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the color type",
          "type": "string"
        },
        "PartNumber": {
          "description": "Gets or sets the partnumber",
          "type": "string"
        },
        "ExpectedPageDuration": {
          "description": "Gets or sets the expected page duration",
          "type": "string"
        },
        "ManagedAlerts": {
          "format": "int32",
          "description": "Gets or sets managed alerts count",
          "type": "integer"
        },
        "InstalledAlerts": {
          "format": "int32",
          "description": "Gets or sets installed alerts count",
          "type": "integer"
        },
        "AverageDuration": {
          "format": "int32",
          "description": "Gets or sets the average duration",
          "type": "integer"
        },
        "AverageCoverage": {
          "format": "int32",
          "description": "Gets or sets average coverage",
          "type": "integer"
        },
        "ResidualDurationPercentage": {
          "format": "int32",
          "description": "Gets or sets the residual duration percentage",
          "type": "integer"
        },
        "ExpectedExhaustion": {
          "format": "date-time",
          "description": "Gets or sets the expected exhaustion date",
          "type": "string"
        }
      }
    },
    "GetDevicesRequest": {
      "description": "Represents a request to retrieve a pagedlist of devices",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FilterDealerId": {
          "description": "Gets or sets the filter dealer ids.",
          "type": "string"
        },
        "FilterCustomerText": {
          "description": "Filter by a string contained in CustomerCode or CustomerDescription",
          "type": "string"
        },
        "FilterCustomerIds": {
          "description": "Gets or sets the filter customer ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterDealerCodes": {
          "description": "Gets or sets the filter dealer codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterCustomerCodes": {
          "description": "Gets or sets the filter customer codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ProductBrand": {
          "description": "Gets or sets the product brand.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ProductModel": {
          "description": "Gets or sets the product model.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ProductIds": {
          "description": "Gets or sets the product ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "OfficeId": {
          "description": "Gets or sets the office Id.",
          "type": "string"
        },
        "ProjectId": {
          "description": "Gets or sets the project Id.",
          "type": "string"
        },
        "ProjectDefault": {
          "description": "Gets or sets the project default",
          "type": "boolean"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "enum": [
            "All",
            "Managed",
            "NotManaged"
          ],
          "type": "string"
        },
        "IsNew": {
          "description": "Gets or sets the is new.",
          "type": "boolean"
        },
        "ToWork": {
          "description": "Gets or sets to work.",
          "type": "boolean"
        },
        "IsOffline": {
          "description": "Gets or sets the is offline.",
          "type": "boolean"
        },
        "IsAlertGenerator": {
          "description": "Gets or sets the is alert generator.",
          "type": "boolean"
        },
        "IsStandardModel": {
          "description": "Gets or sets the is standard model.",
          "type": "boolean"
        },
        "SDSOnly": {
          "description": "Gets only HP Sds devices or not",
          "type": "boolean"
        },
        "CanSetConfigItem": {
          "description": "Gets or sets the can set configuration item.",
          "type": "boolean"
        },
        "HasAnomalousCounters": {
          "description": "Gets or sets the has anomalous counters.",
          "type": "boolean"
        },
        "HasAnomalousLevels": {
          "type": "boolean"
        },
        "SDSHasNonGenuineHPCartrige": {
          "description": "Gets or sets the SDS has non genuine hp cartrige.",
          "type": "boolean"
        },
        "SDSHasEarlyReplacement": {
          "description": "Gets or sets the SDS has early replacement.",
          "type": "boolean"
        },
        "SDSHasFirmwareUpgrade": {
          "description": "Gets or sets if the SDS device has a firmware upgrade available.",
          "type": "boolean"
        },
        "HasRapaInstalled": {
          "description": "Gets or sets the has rapa installed.",
          "type": "boolean"
        },
        "SupplySetDescription": {
          "description": "Gets or sets the supply set description.",
          "type": "string"
        },
        "ParentModel": {
          "description": "Gets or sets the parent model.",
          "type": "string"
        },
        "IsInCustomerContract": {
          "description": "If a device is in a customer contract or not",
          "type": "boolean"
        },
        "IdCustomerContract": {
          "description": "The Id of a customer contract",
          "type": "string"
        },
        "ColorTypeFilterEnum": {
          "enum": [
            "All",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow"
          ],
          "type": "string"
        },
        "LevelFrom": {
          "format": "int32",
          "type": "integer"
        },
        "LevelTo": {
          "format": "int32",
          "type": "integer"
        },
        "CommunicationStatus": {
          "enum": [
            "All",
            "LastDay",
            "LastPeriod",
            "OverPeriod"
          ],
          "type": "string"
        },
        "ExternalIdentifier": {
          "type": "string"
        },
        "LastAssessRemediateOperationPolicyName": {
          "type": "string"
        },
        "AssociatedToSupplySet": {
          "type": "boolean"
        },
        "IsUPActivated": {
          "type": "boolean"
        },
        "LastAssessRemediateOperationResult": {
          "enum": [
            "All",
            "Passed",
            "Failed",
            "NotVerified"
          ],
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DeviceListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceListDto": {
      "description": "Represent a device",
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets the customer id.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeCode": {
          "description": "Gets or sets the office code.",
          "type": "string"
        },
        "OfficeDescription": {
          "description": "Gets or sets the office description.",
          "type": "string"
        },
        "OfficeFloorId": {
          "description": "Gets or sets the office floor identifier.",
          "type": "string"
        },
        "OfficeFloorDescription": {
          "description": "Gets or sets the office floor description.",
          "type": "string"
        },
        "OfficeFloorPositionTop": {
          "format": "double",
          "description": "Gets or sets the office floor position top.",
          "type": "number"
        },
        "OfficeFloorPositionLeft": {
          "format": "double",
          "description": "Gets or sets the office floor position left.",
          "type": "number"
        },
        "ProjectId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "ProjectDescription": {
          "description": "Gets or sets the project description.",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the department.",
          "type": "string"
        },
        "IsInsideProject": {
          "description": "Gets or sets the IsInsideProject",
          "type": "boolean"
        },
        "IsAlertGenerator": {
          "description": "Gets or sets the is alert generator.",
          "type": "boolean"
        },
        "IsManageSupplies": {
          "description": "Gets or sets a value indicating whether this instance is manage supplies.",
          "type": "boolean"
        },
        "IsClassified": {
          "description": "Gets or sets a value indicating whether this instance is classified.",
          "type": "boolean"
        },
        "IsIncludedInOrderManagement": {
          "description": "Gets or sets the IsInsideProject",
          "type": "boolean"
        },
        "AnomalousLevels": {
          "description": "Gets or sets anomalous toner and photo levels",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Gets or sets the last update.",
          "type": "string"
        },
        "Install": {
          "format": "date-time",
          "description": "Gets or sets the install.",
          "type": "string"
        },
        "BlackToner": {
          "format": "int32",
          "description": "Gets or sets the black toner.",
          "type": "integer"
        },
        "BlackToner1": {
          "format": "int32",
          "description": "Gets or sets the black toner1.",
          "type": "integer"
        },
        "BlackToner2": {
          "format": "int32",
          "description": "Gets or sets the black toner2.",
          "type": "integer"
        },
        "BlackToner3": {
          "format": "int32",
          "description": "Gets or sets the black toner3.",
          "type": "integer"
        },
        "BlackPhoto": {
          "format": "int32",
          "description": "Gets or sets the black photo.",
          "type": "integer"
        },
        "CyanToner": {
          "format": "int32",
          "description": "Gets or sets the cyan toner.",
          "type": "integer"
        },
        "CyanPhoto": {
          "format": "int32",
          "description": "Gets or sets the cyan photo.",
          "type": "integer"
        },
        "MagentaToner": {
          "format": "int32",
          "description": "Gets or sets the magenta toner.",
          "type": "integer"
        },
        "MagentaPhoto": {
          "format": "int32",
          "description": "Gets or sets the magenta photo.",
          "type": "integer"
        },
        "YellowToner": {
          "format": "int32",
          "description": "Gets or sets the yellow toner.",
          "type": "integer"
        },
        "YellowPhoto": {
          "format": "int32",
          "description": "Gets or sets the yellow photo.",
          "type": "integer"
        },
        "Note": {
          "description": "Gets or sets the note.",
          "type": "string"
        },
        "IsOffline": {
          "description": "Gets or sets a value indicating whether this instance is offline.",
          "type": "boolean"
        },
        "Uninstall": {
          "format": "date-time",
          "description": "Gets or sets the uninstall.",
          "type": "string"
        },
        "MonthlyMonoVolume": {
          "format": "int32",
          "description": "Gets or sets the MonthlyMonoVolume",
          "type": "integer"
        },
        "MonthlyColorVolume": {
          "format": "int32",
          "description": "Gets or sets the MonthlyColorVolume",
          "type": "integer"
        },
        "Firmware": {
          "description": "Gets or sets the firmware.",
          "type": "string"
        },
        "CounterMono": {
          "format": "int32",
          "description": "Gets or sets the counter mono.",
          "type": "integer"
        },
        "CounterColor": {
          "format": "int32",
          "description": "Gets or sets the color of the counter.",
          "type": "integer"
        },
        "InstallCounterMono": {
          "format": "int32",
          "description": "Gets or sets the install counter mono.",
          "type": "integer"
        },
        "InstallCounterColor": {
          "format": "int32",
          "description": "Gets or sets the install color of the counter.",
          "type": "integer"
        },
        "MailDeliveryToner": {
          "description": "Gets or sets the mail delivery toner.",
          "type": "string"
        },
        "HardwareOrderNumber": {
          "description": "Gets or sets the hardware order number.",
          "type": "string"
        },
        "TonerOrderNumber": {
          "description": "Gets or sets the toner order number.",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the product."
        },
        "DealerSupplySet": {
          "$ref": "#/definitions/DealerSupplySetBaseDto",
          "description": "Gets or sets the dealer product supply set."
        },
        "ManageConsumables": {
          "description": "Gets a value indicating whether [manage consumables].",
          "type": "boolean",
          "readOnly": true
        },
        "SdsDevice": {
          "$ref": "#/definitions/SdsDeviceListDto",
          "description": "Gets the SdsDevice Data."
        },
        "ToWork": {
          "description": "Gets or sets a value indicating whether [to work].",
          "type": "boolean"
        },
        "MonoCoverage": {
          "format": "double",
          "description": "The current mono coverage",
          "type": "number"
        },
        "ColorCoverage": {
          "format": "double",
          "description": "The current color coverage",
          "type": "number"
        },
        "MonoCoverage_New": {
          "format": "double",
          "description": "The current mono_new coverage. Same as MonoCoverage property",
          "type": "number"
        },
        "ColorCoverage_New": {
          "format": "double",
          "description": "The current color_new coverage. Same as ColorCoverage property",
          "type": "number"
        },
        "FirmawareVersionUpgradeAvailable": {
          "type": "string"
        },
        "LastAssessRemediateOperationId": {
          "type": "string"
        },
        "LastAssessRemediateOperationResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastAssessRemediateOperationPending": {
          "type": "boolean"
        },
        "LastAssessRemediateOperationPolicyName": {
          "type": "string"
        },
        "LastAssessRemediateOperationAssessAndRemediate": {
          "type": "boolean"
        },
        "LastSetCredentialsOperationResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastSetCredentialsOperationResultPending": {
          "type": "boolean"
        },
        "LastRapaOperationResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastRapaOperationResultPending": {
          "type": "boolean"
        },
        "LastSetDeviceConfigResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastSetDeviceConfigResultPending": {
          "type": "boolean"
        },
        "CanSetConfigItem": {
          "type": "boolean"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsDeviceListDto": {
      "description": "SdsDeviceListDto",
      "type": "object",
      "properties": {
        "LastContactTimeUtc": {
          "format": "date-time",
          "description": "LastTime JAMC contacted the printer",
          "type": "string"
        },
        "LastMpsContactTimeUtc": {
          "format": "date-time",
          "description": "LastTime eXplorerJam contacted the printer",
          "type": "string"
        },
        "MskuAttributeState": {
          "type": "string"
        },
        "HasGenuineHpCartridges": {
          "type": "boolean"
        },
        "HasNonGenuineHPCartrige": {
          "type": "boolean"
        },
        "GenuineHpCartridgeStatus": {
          "type": "string"
        },
        "IsHpManagedDevice": {
          "type": "boolean"
        },
        "HasEarlyReplacement": {
          "type": "boolean"
        },
        "HasOpenCommonActions": {
          "type": "boolean"
        },
        "HasOpenPredictiveActions": {
          "type": "boolean"
        },
        "FirmawareVersionUpgradeAvailable": {
          "type": "string"
        },
        "CartridgeLowMessageStrategy": {
          "description": "Cartridge Low message strategy setting",
          "type": "string"
        },
        "LongLifeConsumablesLowMessageStrategy": {
          "description": "Long Life Consumables Low Message Strategy strategy setting",
          "type": "string"
        },
        "JamDeviceId": {
          "format": "int32",
          "description": "Gets or sets the jam device id",
          "type": "integer"
        },
        "HostName": {
          "description": "Gets or sets the jam hostname.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "ModelName": {
          "description": "Gets or sets the name of the model.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "IsUsbDevice": {
          "description": "Gets or sets a value indicating whether this instance is usb device.",
          "type": "boolean"
        },
        "IsWppDevice": {
          "description": "Gets or sets a value indicating whether this instance is WPP device.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetMaintenanceAlertsRequest": {
      "description": "Represents a request to retrieve a list of maintenance alerts",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "IdInstalledProduct": {
          "description": "Gets or sets the installedproduct",
          "type": "string"
        },
        "FilterByOpened": {
          "description": "Gets or sets the FilterByOpened",
          "type": "boolean"
        },
        "FilterByClosed": {
          "description": "Gets or sets the FilterByClosed",
          "type": "boolean"
        },
        "FilterByPanelMessageAlertConfiguration": {
          "description": "Gets or sets the FilterByPanelMessageAlertConfiguration",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[MaintenanceAlertDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintenanceAlertDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListRemoteWsRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "MaxItems": {
          "format": "int32",
          "type": "integer"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[RemoteWsDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemoteWsDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "RemoteWsDto": {
      "type": "object",
      "properties": {
        "SessionId": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "Opening",
            "Open",
            "Closed",
            "Error"
          ],
          "type": "string"
        },
        "CreatedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "OpenedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ClosedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ErrorAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ErrorMessage": {
          "type": "string"
        },
        "Account": {
          "type": "string"
        },
        "AccountEmail": {
          "type": "string"
        },
        "IsTicketOperator": {
          "type": "boolean"
        },
        "Reason": {
          "type": "string"
        },
        "CanReconnect": {
          "type": "boolean"
        },
        "RemoteUrl": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[DeviceExplorerDataAffinityDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceExplorerDataAffinityDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceExplorerDataAffinityDto": {
      "description": "ExplorerDataAffinity with device",
      "type": "object",
      "properties": {
        "Identifier": {
          "description": "Identifier",
          "type": "string"
        },
        "IP": {
          "description": "IP Address",
          "type": "string"
        },
        "SystemName": {
          "description": "System Name",
          "type": "string"
        },
        "BuildNumber": {
          "description": "Build Number",
          "type": "string"
        },
        "IsV4": {
          "description": "Gets or sets a value indicating whether this instance is v4.",
          "type": "boolean"
        },
        "IsEmbedded": {
          "description": "True if the connector is embedded on the printer",
          "type": "boolean"
        },
        "Platform": {
          "description": "Gets or sets the platform.",
          "type": "string"
        },
        "LastPing": {
          "format": "date-time",
          "description": "LastPing",
          "type": "string"
        },
        "LastContactedDeviceUTC": {
          "format": "date-time",
          "description": "Last date the device was contacted",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDevicesMeterReadsRequest": {
      "description": "Represents a request to retrieve a pagedlist meter reads of devices",
      "required": [
        "FromDate",
        "ToDate",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the filter customer Id.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the filter customer Code.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets device Id.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the Mac Address.",
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the Brand.",
          "type": "string"
        },
        "Model": {
          "description": "Gets or sets the Model.",
          "type": "string"
        },
        "IPAddress": {
          "description": "Gets or sets the IPAddress.",
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "description": "Gets or sets the date from.",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "Gets or sets the date to.",
          "type": "string"
        },
        "MeterReadType": {
          "description": "Gets or sets the status.",
          "enum": [
            "All",
            "Levels",
            "Counters",
            "MaintenanceKits",
            "OperatorPanelMessages"
          ],
          "type": "string"
        },
        "DiscardErrorColumnsCode": {
          "description": "Gets or sets the discard error columns code.",
          "type": "string"
        },
        "ShowPanelMessage": {
          "description": "Gets or sets a value indicating whether [show panel message].",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DeviceListMeterReadsDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceListMeterReadsDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeviceListMeterReadsDto": {
      "description": "Represent a device meter reads",
      "type": "object",
      "properties": {
        "ErrorColumns": {
          "description": "Gets or sets the error columns.",
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the Brand.",
          "type": "string"
        },
        "Model": {
          "description": "Gets or sets the Model.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "Firmware": {
          "description": "Gets or sets the firmware.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "Position": {
          "description": "Gets or sets the position.",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "MonoPages": {
          "description": "Gets or sets the mono pages.",
          "type": "string"
        },
        "ColorPages": {
          "description": "Gets or sets the color pages.",
          "type": "string"
        },
        "MonoScans": {
          "description": "Gets or sets the mono scans.",
          "type": "string"
        },
        "ColorScans": {
          "description": "Gets or sets the color scans.",
          "type": "string"
        },
        "Fax": {
          "description": "Gets or sets the fathis.",
          "type": "string"
        },
        "TonerBlack": {
          "format": "int32",
          "description": "Gets or sets the black toner.",
          "type": "integer"
        },
        "TonerBlackMultiple": {
          "description": "Gets or sets the black multiple toners",
          "type": "string"
        },
        "TonerMagenta": {
          "format": "int32",
          "description": "Gets or sets the magenta toner.",
          "type": "integer"
        },
        "TonerYellow": {
          "format": "int32",
          "description": "Gets or sets the yellow toner.",
          "type": "integer"
        },
        "TonerCyan": {
          "format": "int32",
          "description": "Gets or sets the cyan toner.",
          "type": "integer"
        },
        "PhotoconductorBlack": {
          "format": "int32",
          "description": "Gets or sets the black Photoconductor.",
          "type": "integer"
        },
        "PhotoconductorMagenta": {
          "format": "int32",
          "description": "Gets or sets the magenta Photoconductor.",
          "type": "integer"
        },
        "PhotoconductorYellow": {
          "format": "int32",
          "description": "Gets or sets the yellow Photoconductor.",
          "type": "integer"
        },
        "PhotoconductorCyan": {
          "format": "int32",
          "description": "Gets or sets the cyan Photoconductor.",
          "type": "integer"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Gets or sets the last update.",
          "type": "string"
        },
        "MaintenanceKits": {
          "description": "Gets or sets the maintenance kit.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "OperatorPanelMessages": {
          "description": "Gets or sets the operator panel messages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "AnalysisInfo": {
          "description": "Gets the analysis info from DCA",
          "type": "string"
        }
      }
    },
    "GetLevelsDataHistoryRequest": {
      "required": [
        "DeviceId",
        "FromDate",
        "ToDate",
        "ShowPhotoconductor"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets device Id.",
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "description": "Gets or sets the date from.",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "Gets or sets the date to.",
          "type": "string"
        },
        "ShowPhotoconductor": {
          "description": "Gets or sets a value indicating whether [show photoconductor].",
          "type": "boolean"
        }
      }
    },
    "ListResultResponse[LevelsDataHistoryDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LevelsDataHistoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "LevelsDataHistoryDto": {
      "type": "object",
      "properties": {
        "DateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "Black": {
          "format": "int32",
          "type": "integer"
        },
        "Cyan": {
          "format": "int32",
          "type": "integer"
        },
        "Magenta": {
          "format": "int32",
          "type": "integer"
        },
        "Yellow": {
          "format": "int32",
          "type": "integer"
        },
        "SourceData": {
          "type": "string"
        }
      }
    },
    "GetDeviceDataHistoryRequest": {
      "required": [
        "DeviceId",
        "FromDate",
        "ToDate",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets device Id.",
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "description": "Gets or sets the date from.",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "Gets or sets the date to.",
          "type": "string"
        },
        "ShowNoChanges": {
          "description": "Gets or sets a value indicating whether [show no changes].",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SuppliesDataHistoryDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SuppliesDataHistoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SuppliesDataHistoryDto": {
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerCode": {
          "type": "string"
        },
        "ExplorerDataIdentifier": {
          "type": "string"
        },
        "DateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "NoChanges": {
          "type": "boolean"
        },
        "LastFullReadIndex": {
          "format": "int32",
          "type": "integer"
        },
        "TonerValidated": {
          "type": "boolean"
        },
        "PhotoConductorValidated": {
          "type": "boolean"
        },
        "BlackToner": {
          "format": "int32",
          "type": "integer"
        },
        "CyanToner": {
          "format": "int32",
          "type": "integer"
        },
        "MagentaToner": {
          "format": "int32",
          "type": "integer"
        },
        "YellowToner": {
          "format": "int32",
          "type": "integer"
        },
        "BlackPhotoconductor": {
          "format": "int32",
          "type": "integer"
        },
        "CyanPhotoconductor": {
          "format": "int32",
          "type": "integer"
        },
        "MagentaPhotoconductor": {
          "format": "int32",
          "type": "integer"
        },
        "YellowPhotoconductor": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PagedResultResponse[MetersDataHistoryDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetersDataHistoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "MetersDataHistoryDto": {
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerCode": {
          "type": "string"
        },
        "ExplorerDataIdentifier": {
          "type": "string"
        },
        "DateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "NoChanges": {
          "type": "boolean"
        },
        "LastFullReadIndex": {
          "format": "int32",
          "type": "integer"
        },
        "MeteringValidated": {
          "type": "boolean"
        },
        "Mono": {
          "format": "int32",
          "type": "integer"
        },
        "Color": {
          "format": "int32",
          "type": "integer"
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        },
        "A3Mono": {
          "format": "int32",
          "type": "integer"
        },
        "A3Color": {
          "format": "int32",
          "type": "integer"
        },
        "Fax": {
          "format": "int32",
          "type": "integer"
        },
        "WorkflowMode": {
          "type": "string"
        }
      }
    },
    "PagedResultResponse[MaintenanceKitMessagesDataHistoryDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MaintenanceKitMessagesDataHistoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "MaintenanceKitMessagesDataHistoryDto": {
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerCode": {
          "type": "string"
        },
        "ExplorerDataIdentifier": {
          "type": "string"
        },
        "DateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "NoChanges": {
          "type": "boolean"
        },
        "LastFullReadIndex": {
          "format": "int32",
          "type": "integer"
        },
        "MaintenanceKitValidated": {
          "type": "boolean"
        },
        "Type": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "LevelValue": {
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ErrorsMessagesDataHistoryDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorsMessagesDataHistoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ErrorsMessagesDataHistoryDto": {
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerCode": {
          "type": "string"
        },
        "ExplorerDataIdentifier": {
          "type": "string"
        },
        "DateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "NoChanges": {
          "type": "boolean"
        },
        "LastFullReadIndex": {
          "format": "int32",
          "type": "integer"
        },
        "AlertCode": {
          "type": "string"
        },
        "AlertDescription": {
          "type": "string"
        }
      }
    },
    "PagedResultResponse[AttributesDataHistoryDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttributesDataHistoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AttributesDataHistoryDto": {
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerCode": {
          "type": "string"
        },
        "ExplorerDataIdentifier": {
          "type": "string"
        },
        "DateUTC": {
          "format": "date-time",
          "type": "string"
        },
        "NoChanges": {
          "type": "boolean"
        },
        "LastFullReadIndex": {
          "format": "int32",
          "type": "integer"
        },
        "Brand": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "MacAddress": {
          "type": "string"
        },
        "SystemName": {
          "type": "string"
        },
        "IpAddress": {
          "type": "string"
        },
        "Contact": {
          "type": "string"
        },
        "Department": {
          "type": "string"
        },
        "FirmwareVersion": {
          "type": "string"
        }
      }
    },
    "UpdateDeviceRequest": {
      "description": "Represents a request to retrieve a pagedlist meter reads of devices",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "IsManaged": {
          "description": "Gets or sets a value indicating whether this instance is managed.",
          "type": "boolean"
        },
        "IsGenerateAlert": {
          "description": "Gets or sets a value indicating whether this instance is managed.",
          "type": "boolean"
        },
        "ManageRepeatedAlerts": {
          "description": "Set if you want to manage repeted alerts on the device",
          "type": "boolean"
        },
        "NewProductBrand": {
          "description": "Set a new product brand for this device",
          "type": "string"
        },
        "NewProductModel": {
          "description": "Set a new product model for this device",
          "type": "string"
        },
        "NewStandardModelId": {
          "description": "Set a new standard model for this device",
          "type": "string"
        },
        "NewStandardModelClean": {
          "description": "Creates new standardmodelclean.",
          "type": "string"
        },
        "ProjectId": {
          "description": "Gets or sets the project identifier.",
          "type": "string"
        },
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "CostCenterId": {
          "description": "Gets or sets the cost center identifier.",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "MailDeliveryToner": {
          "description": "Gets or sets the mail delivery toner.",
          "type": "string"
        },
        "HardwareOrderNumber": {
          "description": "Gets or sets the hardware order number.",
          "type": "string"
        },
        "TonerOrderNumber": {
          "description": "Gets or sets the toner order number.",
          "type": "string"
        },
        "Note": {
          "description": "Gets or sets the note.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "Install": {
          "format": "date-time",
          "description": "Gets or sets the install.",
          "type": "string"
        },
        "Uninstall": {
          "format": "date-time",
          "description": "Gets or sets the uninstall.",
          "type": "string"
        },
        "MonoInstallCounter": {
          "format": "int32",
          "description": "Gets or sets the mono install counter.",
          "type": "integer"
        },
        "ColorInstallCounter": {
          "format": "int32",
          "description": "Gets or sets the color install counter.",
          "type": "integer"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "CustomFieldValues": {
          "description": "Sets the custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        }
      }
    },
    "UpdateDeviceSerialNumberRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "SerialNumber": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateDeviceSupplySetAssociationRequest": {
      "description": "UpdateSupplySetDeviceRequest",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "IsManageSupplies": {
          "description": "Gets or sets a value indicating whether this instance is manage supplies.",
          "type": "boolean"
        },
        "DealerSupplySetId": {
          "description": "Gets or sets the dealer supply set identifier.",
          "type": "string"
        },
        "Supplies": {
          "description": "Gets or sets the supplies associated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplyDto"
          }
        }
      }
    },
    "ManageDeviceRequest": {
      "description": "Manage Device Request",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "IsManaged": {
          "description": "Gets or sets a value indicating whether this instance is managed.",
          "type": "boolean"
        },
        "IsGenerateAlert": {
          "description": "Gets or sets a value indicating whether this instance is managed.",
          "type": "boolean"
        }
      }
    },
    "IncludeDeviceInOrderManagementRequest": {
      "description": "Manage Device Request",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "IsIncludedInOrderManagement": {
          "description": "Gets or sets a value indicating whether this instance is included in Order Managment.",
          "type": "boolean"
        }
      }
    },
    "AssignOfficeToDevicesByDeviceIdRequest": {
      "description": "AssignOfficeToDevicesByDeviceIdRequest request",
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "Gets or sets the OfficeId",
          "type": "string"
        },
        "DevicesId": {
          "description": "Gets or sets an array of Devices ID",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SingleResultResponse[AssignOfficeToDevicesRejectedDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/AssignOfficeToDevicesRejectedDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AssignOfficeToDevicesRejectedDto": {
      "description": "Represent a collection of devices rejcted from office association",
      "type": "object",
      "properties": {
        "DevicesRejected": {
          "description": "The rejected devices",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DevicesUpdated": {
          "description": "The updated devices",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AssignOfficeToDevicesBySerialNumberRequest": {
      "description": "AssignOfficeToDevicesByDeviceSerialNumberRequest request",
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "Gets or sets the OfficeId",
          "type": "string"
        },
        "DevicesSerialNumber": {
          "description": "Gets or sets an array of Devices SerialNumber",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateDevicesBySerialNumbersRequest": {
      "description": "UpdateDevicesBySerialNumbers request",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the CustomerId",
          "type": "string"
        },
        "SkipDuplicatedSerialNumber": {
          "description": "Gets or sets the SkipDuplicatedSerialNumber",
          "type": "boolean"
        },
        "Devices": {
          "description": "Gets or sets an array of Devices SerialNumber",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateDevicesDeviceFields"
          }
        }
      }
    },
    "UpdateDevicesDeviceFields": {
      "description": "UpdateDevicesSingleDeviceFields request",
      "type": "object",
      "properties": {
        "SerialNumber": {
          "description": "Gets or sets the SerialNumber",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the ExternalIdentifier",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the AssetNumber",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the Contact",
          "type": "string"
        },
        "OfficeId": {
          "description": "Gets or sets the OfficeId",
          "type": "string"
        },
        "ProjectId": {
          "description": "Gets or sets the ProjectId",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[UpdateDevicesBySerialNumbersRejectedDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/UpdateDevicesBySerialNumbersRejectedDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateDevicesBySerialNumbersRejectedDto": {
      "description": "Represent a collection of devices rejcted from office association",
      "type": "object",
      "properties": {
        "DevicesRejected": {
          "description": "The rejected devices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateDevicesBySerialNumberRejectedReason"
          }
        },
        "DevicesUpdated": {
          "description": "The updated devices",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateDevicesBySerialNumberRejectedReason": {
      "description": "Represent a collection of rejected devices with reason",
      "type": "object",
      "properties": {
        "SerialNumber": {
          "description": "The serial number",
          "type": "string"
        },
        "Reason": {
          "description": "The reason",
          "type": "string"
        }
      }
    },
    "ClassifyDeviceRequest": {
      "description": "Manage Device Request",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "IsClassified": {
          "description": "Gets or sets a value indicating whether this instance is classified.",
          "type": "boolean"
        }
      }
    },
    "PagedResultResponse[InstalledProductDeletedDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstalledProductDeletedDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "InstalledProductDeletedDto": {
      "description": "Represent a deleted installed product",
      "type": "object",
      "properties": {
        "AssetNumber": {
          "type": "string"
        },
        "Account": {
          "type": "string"
        },
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto"
        },
        "LastPingUtc": {
          "format": "date-time",
          "type": "string"
        },
        "DeletedOn": {
          "format": "date-time",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "Firmware": {
          "description": "Gets or sets the firmware.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Gets or sets the product."
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CustomerFilteredPagedRequest": {
      "description": "CustomerFilteredPaged Request",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "GetDeviceMediaRequest": {
      "description": "Get a device media request",
      "required": [
        "MediaFileName",
        "Id"
      ],
      "type": "object",
      "properties": {
        "MediaFileName": {
          "description": "the media file name to retrieve",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[WsRequirementsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/WsRequirementsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "WsRequirementsDto": {
      "type": "object",
      "properties": {
        "CandidateExplorerDataId": {
          "type": "string"
        },
        "CandidatExplorerDataSystemName": {
          "type": "string"
        },
        "CandidateExplorerDataIdentifier": {
          "type": "string"
        },
        "Requirements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WsRequirementDto"
          }
        },
        "AvailablePrinterPorts": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "PrinterPort": {
          "format": "int32",
          "type": "integer"
        },
        "UseHttps": {
          "type": "boolean"
        },
        "OpenInNewWindow": {
          "type": "boolean"
        },
        "PrinterPanelUri": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "Ok",
            "Warning",
            "Ko"
          ],
          "type": "string",
          "readOnly": true
        },
        "CanShowConnect": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "WsRequirementDto": {
      "type": "object",
      "properties": {
        "Requirement": {
          "enum": [
            "WsRequirementAccount2Fa",
            "WsRequirementAccountAutologin",
            "WsRequirementAccountOpenRemoteConnections",
            "WsRequirementPrinterOwnership",
            "WsRequirementPrinterNoUsbOrWpp",
            "WsRequirementPrinterModel",
            "WsRequirementPrinterLastUpdate",
            "WsRequirementPrinterSerialNumber",
            "WsRequirementPrinterIpAddress",
            "WsRequirementPrinterMacAddress",
            "WsRequirementPrinterGenuineHPCartridges",
            "WsRequirementCustomerRemoteWsActive",
            "WsRequirementExplorerDataV4Affinity",
            "WsRequirementExplorerDataV4WithRemoteWsEnabled",
            "WsRequirementExplorerDataLastPing",
            "WsRequirementExplorerDataPublicIpAddress",
            "WsRequirementExplorerDataPsk2fa",
            "WsRequirementExplorerDataSshRfcPublicKey",
            "WsRequirementExplorerDataHasMqtt",
            "WsRequirementExplorerDataHasSSHCommand"
          ],
          "type": "string"
        },
        "Status": {
          "enum": [
            "Ok",
            "Warning",
            "Ko"
          ],
          "type": "string"
        }
      }
    },
    "OpenRemoteWsRequest": {
      "description": "Open a remote connection",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Reason": {
          "description": "Gets or sets the reason.",
          "type": "string"
        },
        "PrinterPort": {
          "format": "int32",
          "description": "Gets or sets the printer port.",
          "type": "integer"
        },
        "UseHttps": {
          "description": "Gets or sets a value indicating whether [use HTTPS].",
          "type": "boolean"
        },
        "UrlPath": {
          "description": "Gets or sets the URL path.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[OpenRemoteWsResponse]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/OpenRemoteWsResponse",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OpenRemoteWsResponse": {
      "type": "object",
      "properties": {
        "SessionId": {
          "type": "string"
        },
        "RemoteUrl": {
          "type": "string"
        }
      }
    },
    "CloseRemoteWsRequest": {
      "required": [
        "SessionId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "SessionId": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UnifyDeviceRequest": {
      "type": "object",
      "properties": {
        "SourceDeviceId": {
          "description": "Gets or sets the source identifier device.",
          "type": "string"
        },
        "TargetDeviceId": {
          "description": "Gets or sets the target identifier device.",
          "type": "string"
        },
        "MoveAlerts": {
          "description": "Gets or sets a value indicating whether [move alerts].",
          "type": "boolean"
        },
        "MoveCounters": {
          "description": "Gets or sets a value indicating whether [move counters].",
          "type": "boolean"
        },
        "DeleteDevice": {
          "description": "Gets or sets a value indicating whether [delete device].",
          "type": "boolean"
        }
      }
    },
    "MoveDeviceToCustomerRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        }
      }
    },
    "ManageDevicesRequest": {
      "type": "object",
      "properties": {
        "DevicesId": {
          "description": "Gets or sets the devices identifier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SetAsManaged": {
          "description": "Gets or sets a value indicating whether the devices should be [set as managed].",
          "type": "boolean"
        },
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        }
      }
    },
    "MoveDevicesToProjectRequest": {
      "type": "object",
      "properties": {
        "CreateNewProject": {
          "description": "Gets or sets a value indicating whether [create new project].",
          "type": "boolean"
        },
        "ProjectDescription": {
          "description": "Gets or sets the project description.",
          "type": "string"
        },
        "ProjectId": {
          "description": "Gets or sets the project identifier.",
          "type": "string"
        },
        "DevicesId": {
          "description": "Gets or sets the devices identifier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        }
      }
    },
    "MoveDevicesToCustomerRequest": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "DestinationCustomerId": {
          "description": "Gets or sets the destination customer identifier.",
          "type": "string"
        },
        "DevicesId": {
          "description": "Gets or sets the devices identifier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetByIdAndDeviceIdRequest": {
      "required": [
        "DeviceId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetByIdAndDeviceIdPagedRequest": {
      "required": [
        "DeviceId",
        "Id",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "Id": {
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "SharpFSSDeviceRequest": {
      "description": "OfflineDeviceRequest payload",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "The CustomerCode",
          "type": "string"
        },
        "SerialNumber": {
          "description": "The offline printer  SerialNumber",
          "type": "string"
        },
        "Model": {
          "description": "The offline printer Model",
          "type": "string"
        }
      }
    },
    "ListResultResponse[EntityIdDescDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityIdDescDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "EntityIdDescDto": {
      "description": "Represent the Id Desc dto",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Gets or sets the description",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDocumentListRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CategoryId": {
          "type": "string"
        },
        "TopicId": {
          "type": "string"
        },
        "FeaturesMap": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DocumentListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocumentListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DocumentListDto": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "BodyText": {
          "type": "string"
        },
        "Creation": {
          "format": "date-time",
          "type": "string"
        },
        "Image": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetTopicsByCategoryRequest": {
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "CategoryId": {
          "type": "string"
        },
        "FilterText": {
          "type": "string"
        },
        "FeaturesMap": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[EntityIdDescWithCountDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityIdDescWithCountDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "EntityIdDescWithCountDto": {
      "description": "Represent the Id Desc dto with count",
      "type": "object",
      "properties": {
        "Count": {
          "format": "int32",
          "description": "Gets or sets the count",
          "type": "integer"
        },
        "Description": {
          "description": "Gets or sets the description",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDocHelpTocItemsRequest": {
      "type": "object",
      "properties": {}
    },
    "ListResultResponse[DocHelpTocItemDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocHelpTocItemDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DocHelpTocItemDto": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocHelpTocItemDto"
          }
        },
        "Group": {
          "type": "string"
        }
      }
    },
    "GetDocHelpTocSearchResultRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "WithHpSds": {
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[DocHelpTocSearchResultDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocHelpTocSearchResultDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DocHelpTocSearchResultDto": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        },
        "PreviewText": {
          "type": "string"
        },
        "Group": {
          "type": "string"
        }
      }
    },
    "GetDocHelpsRequest": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "ShowAllLanguages": {
          "type": "boolean"
        },
        "ShowOnlyFirstContent": {
          "type": "boolean"
        }
      }
    },
    "ListResultResponse[DocHelpDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DocHelpDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DocHelpDto": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Filename": {
          "type": "string"
        },
        "DocHelpType": {
          "enum": [
            "Help",
            "DidYouKnow",
            "PleaseNote",
            "Video",
            "Glossary",
            "Faq"
          ],
          "type": "string"
        },
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "DocHelpMatchType": {
          "enum": [
            "TagName",
            "AttributeValue"
          ],
          "type": "string"
        },
        "SearchKey": {
          "type": "string"
        },
        "AttributeName": {
          "type": "string"
        },
        "InPage": {
          "type": "boolean"
        },
        "Identifier": {
          "type": "string"
        },
        "Active": {
          "type": "boolean"
        },
        "DisplayOrder": {
          "format": "int32",
          "type": "integer"
        },
        "Content": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDocHelpRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "WithHpSds": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DocHelpDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DocHelpDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetDocHelpTocItemContentRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "WithHpSds": {
          "type": "boolean"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "CreateRequest[DocHelpDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/DocHelpDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[DocHelpDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/DocHelpDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetEmailQueuesRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "EmailType": {
          "enum": [
            "Generic",
            "Subscription",
            "Sign",
            "Alert",
            "Shipment",
            "Logistic",
            "Erp"
          ],
          "type": "string"
        },
        "EmailStatus": {
          "enum": [
            "Bounce",
            "Click",
            "Deferred",
            "Delivered",
            "Dropped",
            "Open",
            "Processed",
            "Spamreport"
          ],
          "type": "string"
        },
        "CreatedFrom": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedTo": {
          "format": "date-time",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[EmailQueueDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailQueueDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "EmailQueueDto": {
      "type": "object",
      "properties": {
        "Attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailQueueAttachmentDto"
          }
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "SentAt": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "type": "string"
        },
        "Cc": {
          "type": "string"
        },
        "Bcc": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "Attempts": {
          "format": "int32",
          "type": "integer"
        },
        "Errors": {
          "type": "string"
        },
        "Identifier": {
          "type": "string"
        },
        "SgEvent": {
          "type": "string"
        },
        "SgReason": {
          "type": "string"
        },
        "SgResponse": {
          "type": "string"
        },
        "SgLastCallbackDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "IsOpen": {
          "type": "boolean"
        },
        "IsClick": {
          "type": "boolean"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets the customer id.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "AccountName": {
          "description": "Gets or sets the account name.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "EmailType": {
          "enum": [
            "Generic",
            "Subscription",
            "Sign",
            "Alert",
            "Shipment",
            "Logistic",
            "Erp"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "EmailQueueAttachmentDto": {
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string"
        },
        "FileSize": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetExplorerClustersRequest": {
      "description": "Request for eXplorer data",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FilterDealerCodes": {
          "description": "Gets or sets the filter dealer codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterCustomerCodes": {
          "description": "Gets or sets the filter customer codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ExplorerClusterDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerClusterDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ExplorerClusterDto": {
      "description": "Represents a group of ExplorerDatas within which the AutoFix may run",
      "type": "object",
      "properties": {
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "The customer"
        },
        "Description": {
          "description": "Cluster name",
          "type": "string"
        },
        "AutoFixDayLimit": {
          "format": "int32",
          "description": "The number of days after which a non communicating eXplorer will be switched off\r\n            and a communicating eXplorer switched on in the same cluster",
          "type": "integer"
        },
        "ExplorerDatas": {
          "description": "The list of eXplorers inside the cluster",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataDto"
          }
        },
        "Subnets": {
          "description": "Subnets in the cluster",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ExplorerDataDto": {
      "description": "Explorer Data Dto",
      "type": "object",
      "properties": {
        "CreatedAt": {
          "format": "date-time",
          "description": "CreatedAt",
          "type": "string"
        },
        "Identifier": {
          "description": "Identifier",
          "type": "string"
        },
        "IP": {
          "description": "IP Address",
          "type": "string"
        },
        "SystemName": {
          "description": "System Name",
          "type": "string"
        },
        "MakeServiceUpdate": {
          "type": "boolean"
        },
        "MakeExplorerUpdate": {
          "type": "boolean"
        },
        "DealerId": {
          "description": "Customer id",
          "type": "string"
        },
        "DealerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Customer Description",
          "type": "string"
        },
        "CustomerId": {
          "description": "Customer id",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Customer Description",
          "type": "string"
        },
        "AutomaticUpdate": {
          "description": "Automatic Update",
          "type": "boolean"
        },
        "BuildNumber": {
          "description": "Build Number",
          "type": "string"
        },
        "BuildDate": {
          "format": "date-time",
          "description": "Build Date",
          "type": "string"
        },
        "IsEmbedded": {
          "description": "True if the connector is embedded on the printer",
          "type": "boolean"
        },
        "TableVersion": {
          "format": "int32",
          "description": "OID Table Version",
          "type": "integer"
        },
        "ServiceBuildNumber": {
          "description": "Service Build Number",
          "type": "string"
        },
        "ServiceMajor": {
          "format": "int32",
          "description": "ServiceMajor",
          "type": "integer",
          "readOnly": true
        },
        "ConfiguratorBuildNumber": {
          "description": "ConfiguratorBuildNumber",
          "type": "string"
        },
        "PollingInterval": {
          "format": "int32",
          "description": "PollingInterval",
          "type": "integer"
        },
        "LastUpload": {
          "format": "date-time",
          "description": "LastUpload",
          "type": "string"
        },
        "Version": {
          "description": "Version",
          "type": "string"
        },
        "Platform": {
          "description": "Platform in case of embedded connector",
          "type": "string"
        },
        "LastPing": {
          "format": "date-time",
          "description": "LastPing",
          "type": "string"
        },
        "AgentIsRunning": {
          "description": "True if the Agent was running on the last ping",
          "type": "boolean"
        },
        "HasWarning": {
          "description": "HasWarning",
          "type": "boolean"
        },
        "PingIsOutOfDate": {
          "description": "PingIsOutOfDate",
          "type": "boolean"
        },
        "DataIsOutOfDate": {
          "description": "DataIsOutOfDate",
          "type": "boolean"
        },
        "NeverReceiveData": {
          "description": "NeverReceiveData",
          "type": "boolean"
        },
        "NoValidConfiguration": {
          "description": "NoValidConfiguration",
          "type": "boolean"
        },
        "LastRun": {
          "format": "date-time",
          "description": "LastRun",
          "type": "string"
        },
        "LastNetworkDiscovery": {
          "format": "date-time",
          "description": "LastNetworkDiscovery",
          "type": "string"
        },
        "TimeZone": {
          "description": "TimeZone",
          "type": "string"
        },
        "TimeZoneIana": {
          "description": "TimeZone",
          "type": "string"
        },
        "ExplorerDataJamExplorerJamVersion": {
          "type": "string"
        },
        "ExplorerDataJamVersion": {
          "type": "string"
        },
        "ExplorerDataJamConnectorStatus": {
          "enum": [
            "Unknown",
            "OK",
            "NoRecentCommunication",
            "NeedsAttention",
            "WrongRegistration",
            "ConnectionNotAvailable",
            "NotRegistered",
            "Registered",
            "InvalidRegistrationKey",
            "ConnectorAlreadyRegistered",
            "InvalidApiKey",
            "JamcNotAvailable",
            "Initializing",
            "Registering",
            "CommunicationError",
            "ServiceNotStarted",
            "InvalidCertificate",
            "CannotFetchCertificateRevocationList",
            "JamcDiagnosticErrorNoInternet",
            "ConnectorRegisteredInAnotherCustomer"
          ],
          "type": "string"
        },
        "ExplorerDataJamLastContactTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ExplorerDataJamRegistrationKey": {
          "type": "string"
        },
        "ExplorerDataJamLastUploadUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ExplorerDataJamCreatedAtUc": {
          "format": "date-time",
          "type": "string"
        },
        "ExplorerDataJamInstalledComputer": {
          "type": "string"
        },
        "ExplorerDataJamWebProxyAddress": {
          "type": "string"
        },
        "ExplorerDataJamWebProxyPort": {
          "format": "int32",
          "type": "integer"
        },
        "ExplorerDataJamConnectorId": {
          "format": "int32",
          "type": "integer"
        },
        "ExplorerCluster": {
          "$ref": "#/definitions/ExplorerClusterDto",
          "description": "The cluster to which this eXplorer belongs to, if any"
        },
        "IsMasterInCluster": {
          "description": "True if this eXplorer is the master in the cluster,\r\n            that is its configurations become the cluster's configurations",
          "type": "boolean"
        },
        "ExplorerDataInfos": {
          "description": "The list of ExplorerDataInfos",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataInfoDto"
          }
        },
        "Configurations": {
          "description": "The list of Configurations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerConfigurationBaseDto"
          }
        },
        "ClusteredSlaves": {
          "description": "The list of clustered slaves, if any",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataDto"
          }
        },
        "IsSelected": {
          "type": "boolean"
        },
        "LogIsReady": {
          "type": "boolean"
        },
        "SendLog": {
          "type": "boolean"
        },
        "LogFile": {
          "type": "string"
        },
        "IsV4": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ExplorerDataInfoDto": {
      "description": "The info related to the system where this eXplorer is installed on",
      "type": "object",
      "properties": {
        "Key": {
          "description": "The key info",
          "type": "string"
        },
        "Value": {
          "description": "The value of the info",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Date time of last update",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ExplorerConfigurationBaseDto": {
      "description": "Explorer Configuration Dto",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "ExplorerDataSystemName": {
          "description": "Explorer Data",
          "type": "string"
        },
        "IsValidConfiguration": {
          "description": "IsValidConfiguration",
          "type": "boolean"
        },
        "IsEnable": {
          "description": "IsEnable",
          "type": "boolean"
        },
        "UseAutoAssign": {
          "description": "UseAutoAssign",
          "type": "boolean"
        },
        "ExplorerDataId": {
          "description": "Explorer Data",
          "type": "string"
        },
        "CustomerId": {
          "description": "Explorer Data",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ExplorerDataInfoDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataInfoDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetExplorerDataCommandsRequest": {
      "required": [
        "CustomerCode",
        "Id",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the CustomerCode.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ExplorerDataCommandDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataCommandDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ExplorerDataCommandDto": {
      "type": "object",
      "properties": {
        "CommandId": {
          "type": "string"
        },
        "Command": {
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "type": "integer"
        },
        "Error": {
          "type": "string"
        },
        "StatusDetails": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ClusteringCountersDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ClusteringCountersDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ClusteringCountersDto": {
      "description": "Clustering Counters (number of clusters, masters and slaves)",
      "type": "object",
      "properties": {
        "Clusters": {
          "format": "int32",
          "description": "Number of Clusters",
          "type": "integer"
        },
        "UnclusteredMasters": {
          "format": "int32",
          "description": "Number of available (unclustered) Masters",
          "type": "integer"
        },
        "UnclusteredSlaves": {
          "format": "int32",
          "description": "Number of available (unclustered) Slaves",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[ExplorerClusterDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ExplorerClusterDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[ExplorerClusterDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/ExplorerClusterDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "GetExplorerDatasRequest": {
      "description": "Request for eXplorer data",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ListType": {
          "description": "Gets or sets the type of the list.",
          "type": "string"
        },
        "FilterDealerCodes": {
          "description": "Gets or sets the filter dealer codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterCustomerCodes": {
          "description": "Gets or sets the filter customer codes.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SearchKey": {
          "description": "Gets or sets the search key.",
          "type": "string"
        },
        "SDSOnly": {
          "description": "Gets or sets the filter jam.",
          "type": "boolean"
        },
        "IsClustered": {
          "description": "True to return only clustered eXplorer datas,\r\n            False to return only unclustered eXplorer datas",
          "type": "boolean"
        },
        "IsV4": {
          "description": "True to return only V4 eXplorer datas,\r\n            False to return only non V4 eXplorer datas",
          "type": "boolean"
        },
        "IsEmbedded": {
          "description": "Gets or sets the is embedded.",
          "type": "boolean"
        },
        "CommunicationStatus": {
          "description": "Gets or sets the communication status.",
          "enum": [
            "All",
            "LastDay",
            "LastPeriod",
            "OverPeriod"
          ],
          "type": "string"
        },
        "FilterCustomerText": {
          "description": "Gets or sets the filter customer text.",
          "type": "string"
        },
        "FilterDealerId": {
          "description": "Gets or sets the filter dealer id.",
          "type": "string"
        },
        "FilterCustomerId": {
          "description": "Gets or sets the filter customer id.",
          "type": "string"
        },
        "HasConfiguration": {
          "description": "Gets or sets the filter customer id.",
          "type": "boolean"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ExplorerDataDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[ConnectorEndpointDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorEndpointDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ConnectorEndpointDto": {
      "type": "object",
      "properties": {
        "Platform": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Endpoint": {
          "type": "string"
        },
        "Note": {
          "type": "string"
        },
        "GroupName": {
          "type": "string"
        },
        "IsDeprecated": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DeleteRequest[ExplorerDataDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToDelete"
      ],
      "type": "object",
      "properties": {
        "ObjectToDelete": {
          "$ref": "#/definitions/ExplorerDataDto",
          "description": "Gets or sets the object to delete."
        }
      }
    },
    "GetExplorerSetupLinkRequest": {
      "description": "Get Explorer Setup Link Request",
      "required": [
        "CustomerCode",
        "Code"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "Language": {
          "description": "Gets or sets the language.",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "IsDcaV4": {
          "description": "Gets or sets a value indicating whether this instance is dca v4.",
          "type": "boolean"
        },
        "Platform": {
          "description": "Gets or sets the platform.",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "GetEndpointsLinkRequest": {
      "description": "Get Endpoints Link Request",
      "required": [
        "Platform"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "Platform": {
          "description": "Gets or sets the platform.",
          "type": "string"
        },
        "Language": {
          "description": "Gets or sets the language.",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        }
      }
    },
    "GetExplorerDataLicensesRequest": {
      "description": "",
      "required": [
        "CustomerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Defines the customer code.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ExplorerDataLicenseDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataLicenseDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ExplorerDataLicenseDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CreatedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Identifier": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GenerateExplorerDataLicense": {
      "required": [
        "CustomerCode"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[ExplorerDataStagingDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataStagingDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ExplorerDataStagingDto": {
      "description": "ExplorerDataStaging object",
      "type": "object",
      "properties": {
        "Identifier": {
          "description": "Defines the connector identifier",
          "type": "string"
        },
        "LocalIdentifier": {
          "description": "Defines the connector licenses",
          "type": "string"
        },
        "FromIpAddress": {
          "description": "Defines the ipaddress where the connection comes from",
          "type": "string"
        },
        "SystemName": {
          "description": "Defines the systemname",
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "type": "string"
        },
        "UpdateAt": {
          "format": "date-time",
          "description": "Defines when the request was updated",
          "type": "string"
        },
        "IsEmbedded": {
          "description": "Defines if it is an embedded connector",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetExplorerConfigurationsRequest": {
      "description": "GetExplorerConfigurationsRequest",
      "required": [
        "CustomerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "ExplorerDataIdentifier": {
          "description": "Gets or sets the explorer data identifier.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ExplorerConfigurationBaseDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerConfigurationBaseDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetExplorerConfigurationRequest": {
      "description": "Get Explorer Configurations Request",
      "required": [
        "CustomerCode",
        "ConfigurationId"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ExplorerConfigurationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ExplorerConfigurationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ExplorerConfigurationDto": {
      "description": "Explorer Configuration Dto",
      "type": "object",
      "properties": {
        "ExplorerSchedules": {
          "description": "ExplorerSchedules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerScheduleDto"
          }
        },
        "ExplorerSubnets": {
          "description": "ExplorerSubnets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerSubnetDto"
          }
        },
        "ExplorerHostnames": {
          "description": "ExplorerHostnames",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerHostnameDto"
          }
        },
        "ExplorerWorkingDays": {
          "description": "Gets or sets the explorer working days.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerWorkingDayDto"
          }
        },
        "IdTicket": {
          "format": "int32",
          "description": "This property in not avalaible",
          "type": "integer"
        },
        "MaxProcess": {
          "format": "int32",
          "description": "MaxProcess",
          "type": "integer"
        },
        "MaxThread": {
          "format": "int32",
          "description": "MaxThread",
          "type": "integer"
        },
        "MaxParallelOperations": {
          "format": "int32",
          "description": "MaxParallelOperations",
          "type": "integer"
        },
        "DisablePing": {
          "description": "DisablePing",
          "type": "boolean"
        },
        "ActivateExclusions": {
          "description": "ActivateExclusions",
          "type": "boolean"
        },
        "UseEmbeddedOIDMap": {
          "description": "This property in not avalaible",
          "type": "boolean"
        },
        "MpsUrl": {
          "description": "This property in not avalaible",
          "type": "string"
        },
        "DeviceDetectionOidArray": {
          "description": "This property in not avalaible",
          "type": "string"
        },
        "ActivateOverrides": {
          "description": "ActivateOverrides",
          "type": "boolean"
        },
        "DisableWalks": {
          "description": "DisableWalks",
          "type": "boolean"
        },
        "ScanPc": {
          "description": "ScanPc",
          "type": "boolean"
        },
        "VersionTest": {
          "description": "This property in not avalaible",
          "type": "string"
        },
        "UseHPSecureCounters": {
          "description": "UseHPSecureCounters",
          "type": "boolean"
        },
        "Community": {
          "description": "Community",
          "type": "string"
        },
        "ScanTimeout": {
          "format": "int32",
          "description": "ScanTimeout",
          "type": "integer"
        },
        "WalkTimeout": {
          "format": "int32",
          "description": "WalkTimeout",
          "type": "integer"
        },
        "GetTimeout": {
          "format": "int32",
          "description": "GetTimeout",
          "type": "integer"
        },
        "SendEnvironmentInfo": {
          "description": "This property in not avalaible",
          "type": "boolean"
        },
        "ExplorerJamcParameters": {
          "description": "This property in not avalaible",
          "type": "string"
        },
        "WinceTimeoutSocket": {
          "format": "int32",
          "description": "WinceTimeoutSocket",
          "type": "integer"
        },
        "WinceDeepSleepDisable": {
          "description": "WinceDeepSleepDisable",
          "type": "boolean"
        },
        "UseSNMPv2Version": {
          "description": "Use SNMP v2 version",
          "type": "boolean"
        },
        "UseHpProxy": {
          "description": "Use HP Proxy workflow during discovery",
          "type": "boolean"
        },
        "MacOsUseOtherSNMP": {
          "description": "Use the alternative SNMP library on Embedded Mac OS DCA",
          "type": "boolean"
        },
        "ForceEncoding": {
          "description": "Use the Encoding specified during the printer reading",
          "type": "string"
        },
        "UseKodakAlarisAgent": {
          "description": "Use Kodak Alaris Agent workflow during discovery",
          "type": "boolean"
        },
        "ActivateZebraDetection": {
          "description": "Activate the Zebra label printers detection",
          "type": "boolean"
        },
        "DisableMessagePanelReadingsOutsideWorkingDays": {
          "description": "Gets or sets a value indicating whether [disable message panel readings outside working days].",
          "type": "boolean"
        },
        "AllowUnicastAndBroadcast": {
          "description": "Gets or sets a value indicating whether [allow unicast and broadcast].",
          "type": "boolean"
        },
        "UseStandardWalk": {
          "description": "Gets or sets a value indicating whether [use standard walk].",
          "type": "boolean"
        },
        "AlternativeSnmpPort": {
          "format": "int32",
          "description": "Defines the snmp alternative port for DCA4",
          "type": "integer"
        },
        "AlternativeDiscoveryPorts": {
          "description": "Defines the alternative discovery ports for DCA4, separated by ,",
          "type": "string"
        },
        "ExplorerInterval": {
          "$ref": "#/definitions/ExplorerIntervalDto",
          "description": "Gets or sets the explorer interval."
        },
        "DefaultExplorerInterval": {
          "$ref": "#/definitions/ExplorerIntervalDto",
          "description": "Gets or sets the default explorer interval."
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "ExplorerDataSystemName": {
          "description": "Explorer Data",
          "type": "string"
        },
        "IsValidConfiguration": {
          "description": "IsValidConfiguration",
          "type": "boolean"
        },
        "IsEnable": {
          "description": "IsEnable",
          "type": "boolean"
        },
        "UseAutoAssign": {
          "description": "UseAutoAssign",
          "type": "boolean"
        },
        "ExplorerDataId": {
          "description": "Explorer Data",
          "type": "string"
        },
        "CustomerId": {
          "description": "Explorer Data",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ExplorerScheduleDto": {
      "description": "ExplorerScheduleDto",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "DeviceId",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ExplorerConfigurationId",
          "type": "string"
        },
        "Occurence": {
          "description": "Occurence",
          "type": "string"
        },
        "StartAt": {
          "format": "date-time",
          "description": "StartAt",
          "type": "string"
        },
        "Days": {
          "description": "Days",
          "type": "string"
        },
        "TimeZone": {
          "description": "TimeZone",
          "type": "string"
        },
        "LastRequest": {
          "format": "date-time",
          "description": "LastRequest",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ExplorerSubnetDto": {
      "description": "ExplorerSubnetDto",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "DeviceId",
          "type": "string"
        },
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeCode": {
          "description": "Gets or sets the office code.",
          "type": "string"
        },
        "OfficeDescription": {
          "description": "The office description",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ExplorerConfigurationId",
          "type": "string"
        },
        "SubnetMask": {
          "description": "SubnetMask",
          "type": "string"
        },
        "PartialWalkOID": {
          "description": "PartialWalkOID",
          "type": "string"
        },
        "IpStart": {
          "description": "IpStart",
          "type": "string"
        },
        "IpFrom": {
          "description": "IpFrom",
          "type": "string"
        },
        "IpEnd": {
          "description": "IpEnd",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ExplorerHostnameDto": {
      "description": "ExplorerHostnameDto",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "DeviceId",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ExplorerConfigurationId",
          "type": "string"
        },
        "Hostname": {
          "description": "Hostname",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CopyExplorerConfigurationRequest": {
      "description": "Represents a request to copy a configuration for the explorer",
      "required": [
        "CustomerId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer Id.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the configuration id.",
          "type": "string"
        }
      }
    },
    "CreateRequest[ExplorerConfigurationDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/ExplorerConfigurationDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[ExplorerConfigurationDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/ExplorerConfigurationDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "DeleteExplorerConfigurationRequest": {
      "description": "CreateExplorerSubnetRequest",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateImmediateScheduleRequest": {
      "description": "CreateExplorerSubnetRequest",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "Id": {
          "description": "ConfigurationCode",
          "type": "string"
        }
      }
    },
    "CreateRequest[TicketExplorerConfigurationDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/TicketExplorerConfigurationDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "TicketExplorerConfigurationDto": {
      "description": "",
      "type": "object",
      "properties": {
        "ExplorerDataId": {
          "description": "",
          "type": "string"
        },
        "CustomerCode": {
          "description": "",
          "type": "string"
        },
        "SerialAssetNumber": {
          "description": "",
          "type": "string"
        },
        "IpAddress": {
          "description": "",
          "type": "string"
        },
        "IdTicket": {
          "description": "",
          "type": "string"
        },
        "TableVersion": {
          "description": "",
          "type": "string"
        },
        "RunTests": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RunTestsDto"
          }
        },
        "Schedule": {
          "$ref": "#/definitions/ExplorerConfigurationTestScheduleDto",
          "description": ""
        }
      }
    },
    "RunTestsDto": {
      "description": "",
      "type": "object",
      "properties": {
        "TestType": {
          "description": "",
          "enum": [
            "ping",
            "httphttps",
            "screenshot",
            "snmpwalk",
            "snmpget"
          ],
          "type": "string"
        },
        "Parameters": {
          "description": "",
          "type": "string"
        }
      }
    },
    "ExplorerConfigurationTestScheduleDto": {
      "description": "",
      "type": "object",
      "properties": {
        "FromDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "",
          "type": "string"
        },
        "WeekDays": {
          "description": "",
          "type": "string"
        },
        "FromHours": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "ToHours": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "RepeatEveryMinutes": {
          "format": "int32",
          "description": "",
          "type": "integer"
        }
      }
    },
    "GetTestTableVersionsRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateExplorerScheduleRequest": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "Days": {
          "description": "SubnetIpStart",
          "type": "string"
        },
        "StartAtHours": {
          "description": "SubnetIpEnd",
          "type": "string"
        }
      }
    },
    "UpdateExplorerScheduleRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Id",
          "type": "string"
        },
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "Days": {
          "description": "SubnetIpStart",
          "type": "string"
        },
        "StartAtHours": {
          "description": "SubnetIpEnd",
          "type": "string"
        }
      }
    },
    "DeleteExplorerScheduleRequest": {
      "description": "CreateExplorerSubnetRequest",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateExplorerSubnetRequest": {
      "description": "CreateExplorerSubnetRequest",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "IpStart": {
          "description": "SubnetIpStart",
          "type": "string"
        },
        "IpEnd": {
          "description": "SubnetIpEnd",
          "type": "string"
        },
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "IpFreeText": {
          "type": "string"
        },
        "SubnetMask": {
          "type": "string"
        },
        "PartialWalkOID": {
          "type": "string"
        },
        "IpFreeTextIgnoreBroadcast": {
          "type": "boolean"
        }
      }
    },
    "UpdateExplorerSubnetRequest": {
      "description": "UpdateExplorerSubnetRequest",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Id",
          "type": "string"
        },
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "IpStart": {
          "description": "SubnetIpStart",
          "type": "string"
        },
        "IpEnd": {
          "description": "SubnetIpEnd",
          "type": "string"
        },
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "IpFreeText": {
          "type": "string"
        },
        "SubnetMask": {
          "type": "string"
        },
        "PartialWalkOID": {
          "type": "string"
        },
        "IpFreeTextIgnoreBroadcast": {
          "type": "boolean"
        }
      }
    },
    "DeleteExplorerSubnetRequest": {
      "description": "CreateExplorerSubnetRequest",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateExplorerHostnameRequest": {
      "description": "CreateExplorerSubnetRequest",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "Hostname": {
          "description": "Hostname",
          "type": "string"
        }
      }
    },
    "UpdateExplorerHostnameRequest": {
      "description": "UpdateExplorerHostnameRequest",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Id",
          "type": "string"
        },
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "Hostname": {
          "description": "Hostname",
          "type": "string"
        }
      }
    },
    "DeleteExplorerHostnameRequest": {
      "description": "CreateExplorerSubnetRequest",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateWorkingDaysRequest": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "ExplorerWorkingDays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerWorkingDayDto"
          }
        }
      }
    },
    "UpdateExplorerIntervalRequest": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "CustomerCode",
          "type": "string"
        },
        "ExplorerConfigurationId": {
          "description": "ConfigurationCode",
          "type": "string"
        },
        "ExplorerInterval": {
          "$ref": "#/definitions/ExplorerIntervalDto"
        }
      }
    },
    "SetDcaLogLevelRequest": {
      "description": "Set Dca Log Level Request",
      "required": [
        "LogLevel",
        "Id"
      ],
      "type": "object",
      "properties": {
        "LogLevel": {
          "description": "LogLevel string: Debug, Information",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "RequestSendLogsRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "SendLogFull": {
          "type": "boolean"
        },
        "SendCheckUrls": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "AutomaticUpdateRequest": {
      "required": [
        "IdExplorerData",
        "Enable"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "",
          "type": "string"
        },
        "Enable": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "UpdateAgentRequest": {
      "description": "",
      "required": [
        "IdExplorerData",
        "Version"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Defines the id explorer data versions",
          "type": "string"
        },
        "Version": {
          "description": "Defines the version to update",
          "type": "string"
        }
      }
    },
    "UpdateServiceRequest": {
      "description": "",
      "required": [
        "IdExplorerData"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Defines the id explorer data versions",
          "type": "string"
        },
        "Version": {
          "description": "Defines the version to update",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DataPingDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataPingDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DataPingDto": {
      "type": "object",
      "properties": {
        "PingDateUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DataLogDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataLogDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DataLogDto": {
      "type": "object",
      "properties": {
        "SystemName": {
          "type": "string"
        },
        "BuildNumber": {
          "type": "string"
        },
        "TableVersion": {
          "format": "int32",
          "type": "integer"
        },
        "Updated": {
          "type": "boolean"
        },
        "BuildDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "CreationUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ServerVersion": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[IdDescDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdDescDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "IdDescDto": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "UpdateDca4Request": {
      "description": "",
      "required": [
        "IdExplorerData"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Defines the id explorer data versions",
          "type": "string"
        },
        "Version": {
          "description": "Defines the version to update",
          "type": "string"
        }
      }
    },
    "SetPollingServiceRequest": {
      "description": "",
      "required": [
        "IdExplorerData"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "",
          "type": "string"
        },
        "Minutes": {
          "format": "int32",
          "description": "",
          "type": "integer"
        }
      }
    },
    "ListResultResponse[DcaReleaseNoteDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DcaReleaseNoteDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DcaReleaseNoteDto": {
      "description": "Represents a single release note",
      "type": "object",
      "properties": {
        "Version": {
          "description": "The version",
          "type": "string"
        },
        "TableVersion": {
          "description": "The table version",
          "type": "string"
        },
        "ReleaseDate": {
          "format": "date-time",
          "description": "The release date of the version",
          "type": "string"
        },
        "ReleaseNotes": {
          "description": "The notes of the version",
          "type": "string"
        }
      }
    },
    "UploadUniversalPrintAgentLogsRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "The customer code",
          "type": "string"
        },
        "AgentId": {
          "description": "The customer code",
          "type": "string"
        },
        "Attachment": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "The base64 attachment object"
        }
      }
    },
    "SingleResultResponse[Dca4OtpDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/Dca4OtpDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "Dca4OtpDto": {
      "type": "object",
      "properties": {
        "OtpCode": {
          "description": "Gets or sets the otp code.",
          "type": "string"
        },
        "OtpRemainingSeconds": {
          "format": "int32",
          "description": "Gets or sets the otp remaining seconds.",
          "type": "integer"
        }
      }
    },
    "ImmediateScanDca4Request": {
      "required": [
        "IdExplorerData",
        "IdDevice"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Gets or sets the identifier explorer data.",
          "type": "string"
        },
        "IdDevice": {
          "description": "Gets or sets the identifier device.",
          "type": "string"
        }
      }
    },
    "SendGetOrWalkByPrinterRequest": {
      "required": [
        "IdExplorerData",
        "IdDevice",
        "RootOid",
        "DoWalk"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Gets or sets the identifier explorer data.",
          "type": "string"
        },
        "IdDevice": {
          "description": "Gets or sets the identifier device.",
          "type": "string"
        },
        "RootOid": {
          "description": "Gets or sets the root oid.",
          "type": "string"
        },
        "DoWalk": {
          "description": "Gets or sets a value indicating whether [do walk].",
          "type": "boolean"
        },
        "ContentType": {
          "description": "Gets or sets the type of the content.",
          "type": "string"
        },
        "CustomerConfigurationId": {
          "format": "int32",
          "description": "Gets or sets the customer configuration identifier.",
          "type": "integer"
        },
        "Port": {
          "format": "int32",
          "description": "Gets or sets the port.",
          "type": "integer"
        },
        "Timeout": {
          "format": "int32",
          "description": "Gets or sets the timeout.",
          "type": "integer"
        }
      }
    },
    "SendGetOrWalkRequest": {
      "required": [
        "IdExplorerData",
        "RootOid",
        "IpAddress",
        "Version",
        "DoWalk"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Gets or sets the identifier explorer data.",
          "type": "string"
        },
        "RootOid": {
          "description": "Gets or sets the root oid.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "Version": {
          "description": "Gets or sets the authentication protocol.",
          "type": "string"
        },
        "Community": {
          "description": "Gets or sets the community.",
          "type": "string"
        },
        "UserName": {
          "description": "Gets or sets the name of the user (SNMP V3).",
          "type": "string"
        },
        "AuthenticationProtocol": {
          "description": "Gets or sets the authentication protocol (SNMP V3).",
          "type": "string"
        },
        "AuthenticationPassword": {
          "description": "Gets or sets the authentication password (SNMP V3).",
          "type": "string"
        },
        "PrivacyProtocol": {
          "description": "Gets or sets the privacy protocol (SNMP V3).",
          "type": "string"
        },
        "PrivacyPassword": {
          "description": "Gets or sets the privacy password (SNMP V3).",
          "type": "string"
        },
        "Context": {
          "description": "Gets or sets the context (SNMP V3).",
          "type": "string"
        },
        "DoWalk": {
          "description": "Gets or sets a value indicating whether [do walk].",
          "type": "boolean"
        }
      }
    },
    "SendPingRequest": {
      "required": [
        "IdExplorerData",
        "IpAddress"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Gets or sets the identifier explorer data.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        }
      }
    },
    "SendHpLfpXmlRequest": {
      "required": [
        "IdExplorerData",
        "IpAddress"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Gets or sets the identifier explorer data.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        }
      }
    },
    "SendHpLfpXmlByPrinterRequest": {
      "required": [
        "IdExplorerData",
        "IdDevice"
      ],
      "type": "object",
      "properties": {
        "IdExplorerData": {
          "description": "Gets or sets the identifier explorer data.",
          "type": "string"
        },
        "IdDevice": {
          "description": "",
          "type": "string"
        }
      }
    },
    "GetExportsRequest": {
      "description": "Get Export list request",
      "required": [
        "IdDealer"
      ],
      "type": "object",
      "properties": {
        "IdDealer": {
          "description": "The Dealer Id.",
          "type": "string"
        },
        "IdCustomer": {
          "description": "The Customer Id.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[ExportDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExportDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateExportRequest": {
      "description": "Represents the request for creating an Export",
      "required": [
        "DealerCode",
        "Export"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the Code of the Dealer that the Export belongs to",
          "type": "string"
        },
        "IdCustomer": {
          "description": "Gets or sets the Id of the Customer that the Export belongs to",
          "type": "string"
        },
        "Export": {
          "$ref": "#/definitions/ExportDto",
          "description": "Gets or sets the Export to create."
        }
      }
    },
    "GetExportResultRequest": {
      "description": "Get Export result request",
      "required": [
        "Export",
        "IdDealer"
      ],
      "type": "object",
      "properties": {
        "Export": {
          "$ref": "#/definitions/ExportDto",
          "description": "Gets or sets the export filters and fields."
        },
        "IdDealer": {
          "description": "The Dealer Id.",
          "type": "string"
        },
        "IdCustomer": {
          "description": "The Customer Id.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[AccountPreferenceDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountPreferenceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AccountPreferenceDto": {
      "type": "object",
      "properties": {
        "Key": {
          "enum": [
            "DealerDevice",
            "CustomerDevice",
            "DealerConnector",
            "DealerSupplyAlert",
            "CustomerSupplyAlert",
            "DevicePages",
            "ConsumableLevels",
            "DeviceClassification",
            "DealerSupplyAlertHistory",
            "CustomerSupplyAlertHistory",
            "DealerShippedSupply",
            "CustomerShippedSupply",
            "CustomerOffice",
            "CustomerProject",
            "CustomerInvoice",
            "Invoice",
            "Tickets",
            "Account",
            "DealerSupply",
            "DevicesNotInProject",
            "Role",
            "Dealer",
            "PassiveInvoice",
            "DealerDeviceAssessRemediate",
            "DealerDeviceUpdateFirmware",
            "DealerDeviceSetCredentials",
            "DealerDeviceRapaOperations",
            "DealerDeviceMsgVisibilty",
            "CustomerDeviceAssessRemediate",
            "CustomerDeviceSetCredentials",
            "DeviceDeleted",
            "Communications",
            "DealerDeviceReboot",
            "PowerBiDashboard",
            "Customers",
            "TradingPartner",
            "TradingPartnerSupply",
            "ImportExcel",
            "OfficeConsumableLevels",
            "ApiClient",
            "AccountApiClient",
            "EmailQueues",
            "StandardModelsOperations",
            "StandarModelsDevices",
            "StandarModelsDevicesInOperation",
            "CustomerCostCenter",
            "Sagas",
            "AccountActivities",
            "DealerOrganization",
            "DeviceImportedFiles",
            "DeviceShow",
            "WorkflowProcess",
            "Panel_ProductInfo",
            "Panel_PanelMessage",
            "Panel_TraceVolume",
            "Panel_Consumables",
            "Panel_ConsumablesZebra",
            "Panel_AlertLimits",
            "Panel_EventLogs",
            "Panel_AdditionalInfos",
            "Panel_ExplorerDataAffinities",
            "Panel_ShippedSupplies",
            "Panel_AlertHistory",
            "Panel_Counters",
            "Panel_Firmware",
            "Panel_ConsumableAlertLevels",
            "Panel_ConfigItems",
            "Panel_Credentials",
            "Panel_OperationResults",
            "Panel_SupportedFeatures",
            "Panel_FeaturesAvailability",
            "Panel_PrintQualityDiagnostics",
            "Panel_CountersLfp",
            "Panel_ConsumablesLfp"
          ],
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "AccountPreferenceType": {
          "enum": [
            "TableColumns",
            "Notifications",
            "Settings",
            "ResultViewType",
            "PagePanelsPosition",
            "PagePanelsStatus"
          ],
          "type": "string"
        }
      }
    },
    "SetPreferencesRequest": {
      "type": "object",
      "properties": {
        "Preferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountPreferenceDto"
          }
        }
      }
    },
    "RemovePreferenceRequest": {
      "type": "object",
      "properties": {
        "Key": {
          "enum": [
            "DealerDevice",
            "CustomerDevice",
            "DealerConnector",
            "DealerSupplyAlert",
            "CustomerSupplyAlert",
            "DevicePages",
            "ConsumableLevels",
            "DeviceClassification",
            "DealerSupplyAlertHistory",
            "CustomerSupplyAlertHistory",
            "DealerShippedSupply",
            "CustomerShippedSupply",
            "CustomerOffice",
            "CustomerProject",
            "CustomerInvoice",
            "Invoice",
            "Tickets",
            "Account",
            "DealerSupply",
            "DevicesNotInProject",
            "Role",
            "Dealer",
            "PassiveInvoice",
            "DealerDeviceAssessRemediate",
            "DealerDeviceUpdateFirmware",
            "DealerDeviceSetCredentials",
            "DealerDeviceRapaOperations",
            "DealerDeviceMsgVisibilty",
            "CustomerDeviceAssessRemediate",
            "CustomerDeviceSetCredentials",
            "DeviceDeleted",
            "Communications",
            "DealerDeviceReboot",
            "PowerBiDashboard",
            "Customers",
            "TradingPartner",
            "TradingPartnerSupply",
            "ImportExcel",
            "OfficeConsumableLevels",
            "ApiClient",
            "AccountApiClient",
            "EmailQueues",
            "StandardModelsOperations",
            "StandarModelsDevices",
            "StandarModelsDevicesInOperation",
            "CustomerCostCenter",
            "Sagas",
            "AccountActivities",
            "DealerOrganization",
            "DeviceImportedFiles",
            "DeviceShow",
            "WorkflowProcess",
            "Panel_ProductInfo",
            "Panel_PanelMessage",
            "Panel_TraceVolume",
            "Panel_Consumables",
            "Panel_ConsumablesZebra",
            "Panel_AlertLimits",
            "Panel_EventLogs",
            "Panel_AdditionalInfos",
            "Panel_ExplorerDataAffinities",
            "Panel_ShippedSupplies",
            "Panel_AlertHistory",
            "Panel_Counters",
            "Panel_Firmware",
            "Panel_ConsumableAlertLevels",
            "Panel_ConfigItems",
            "Panel_Credentials",
            "Panel_OperationResults",
            "Panel_SupportedFeatures",
            "Panel_FeaturesAvailability",
            "Panel_PrintQualityDiagnostics",
            "Panel_CountersLfp",
            "Panel_ConsumablesLfp"
          ],
          "type": "string"
        },
        "AccountPreferenceType": {
          "enum": [
            "TableColumns",
            "Notifications",
            "Settings",
            "ResultViewType",
            "PagePanelsPosition",
            "PagePanelsStatus"
          ],
          "type": "string"
        }
      }
    },
    "GetImportExcelHeadersRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "HasOperationId": {
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ImportExcelHeaderDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportExcelHeaderDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ImportExcelHeaderDto": {
      "type": "object",
      "properties": {
        "OperationId": {
          "type": "string"
        },
        "ImportType": {
          "enum": [
            "CustomersCreate",
            "CustomersUpdate",
            "OfficesCreate",
            "OfficesUpdate",
            "DevicesCreateOffline",
            "DevicesUpdate",
            "SupplyPriceUpdate",
            "StandardCountersUpdate"
          ],
          "type": "string"
        },
        "UploadDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ImportDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "DealerSupplyPriceListingId": {
          "type": "string"
        },
        "DealerSupplyPriceListingName": {
          "type": "string"
        },
        "FileName": {
          "type": "string"
        },
        "FileSize": {
          "format": "int32",
          "type": "integer"
        },
        "TotalErrors": {
          "format": "int32",
          "type": "integer"
        },
        "TotalSuccess": {
          "format": "int32",
          "type": "integer"
        },
        "TotalRows": {
          "format": "int32",
          "type": "integer"
        },
        "ImportInProgress": {
          "type": "boolean"
        },
        "ImportProgressPercentage": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UploadExcelRequest": {
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "type": "string"
        },
        "DealerSupplyPriceListingId": {
          "type": "string"
        },
        "Attachment": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "ImportType": {
          "enum": [
            "CustomersCreate",
            "CustomersUpdate",
            "OfficesCreate",
            "OfficesUpdate",
            "DevicesCreateOffline",
            "DevicesUpdate",
            "SupplyPriceUpdate",
            "StandardCountersUpdate"
          ],
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ImportExcelResultDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ImportExcelResultDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ImportExcelResultDto": {
      "type": "object",
      "properties": {
        "ExcelColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportExcelColumnDto"
          }
        },
        "PreviewExcelRows": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "ImportTypeProperties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportTypePropertyMapDto"
          }
        },
        "SkipFirstRow": {
          "type": "boolean"
        },
        "DateFormat": {
          "type": "string"
        },
        "BoolFormat": {
          "type": "string"
        },
        "DecimalSeparator": {
          "type": "string"
        },
        "ImportSubmitted": {
          "type": "boolean"
        },
        "OperationId": {
          "type": "string"
        },
        "TotalRows": {
          "format": "int32",
          "type": "integer"
        },
        "RowsInError": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImportExcelResultRowErrorDto"
          }
        },
        "IsFileInError": {
          "type": "boolean",
          "readOnly": true
        },
        "AllPropertyMapAutoAssigned": {
          "type": "boolean",
          "readOnly": true
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ImportExcelColumnDto": {
      "type": "object",
      "properties": {
        "Idx": {
          "format": "int32",
          "type": "integer"
        },
        "PropertyMapId": {
          "type": "string"
        },
        "Error": {
          "type": "string"
        },
        "PropertyMapAutoAssigned": {
          "type": "boolean"
        }
      }
    },
    "ImportTypePropertyMapDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsCustomField": {
          "type": "boolean"
        },
        "PropertyType": {
          "enum": [
            "String",
            "Number",
            "Date",
            "Boolean"
          ],
          "type": "string"
        },
        "Required": {
          "type": "boolean"
        },
        "Unique": {
          "type": "boolean"
        },
        "ValidatorType": {
          "enum": [
            "EmailAddress",
            "EmailAddresses",
            "RangeIp",
            "Url",
            "IpList"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ImportExcelResultRowErrorDto": {
      "type": "object",
      "properties": {
        "RowIndex": {
          "format": "int32",
          "type": "integer"
        },
        "Error": {
          "type": "string"
        }
      }
    },
    "UpdateRequest[ImportExcelResultDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/ImportExcelResultDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetExcelTemplateRequest": {
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "ImportType": {
          "enum": [
            "CustomersCreate",
            "CustomersUpdate",
            "OfficesCreate",
            "OfficesUpdate",
            "DevicesCreateOffline",
            "DevicesUpdate",
            "SupplyPriceUpdate",
            "StandardCountersUpdate"
          ],
          "type": "string"
        },
        "IsMultiCustomer": {
          "type": "boolean"
        },
        "UseWorkflow": {
          "type": "boolean"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "GetDealerGatewaysRequest": {
      "required": [
        "Code"
      ],
      "type": "object",
      "properties": {
        "IsActive": {
          "type": "boolean"
        },
        "IsForDelivery": {
          "type": "boolean"
        },
        "IsForMeters": {
          "type": "boolean"
        },
        "IsUpdateSupplies": {
          "type": "boolean"
        },
        "IsForNotification": {
          "type": "boolean"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DealerGatewayDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerGatewayDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DealerGatewayDto": {
      "type": "object",
      "properties": {
        "Gateway": {
          "$ref": "#/definitions/GatewayDto"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "IsMassiveEnabled": {
          "type": "boolean"
        },
        "Configuration": {
          "$ref": "#/definitions/DealerGatewayConfigurationDto"
        },
        "IdDealerNotification": {
          "type": "string"
        },
        "Topic": {
          "enum": [
            "Delivery",
            "MeterReadings",
            "Billing"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GatewayDto": {
      "type": "object",
      "properties": {
        "DealerGatewayType": {
          "enum": [
            "Email",
            "Callback",
            "CallbackXml",
            "Ftp",
            "Evatic",
            "EAutomate",
            "Jim2",
            "Europarts",
            "OneTrail",
            "Adv",
            "Advantis",
            "Also",
            "Esprinet",
            "Forza",
            "Nav",
            "PowerOffice",
            "Radix",
            "ToServ",
            "VantageOnline",
            "QuickBooks",
            "Xero",
            "DistributionManagement"
          ],
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "DisplayName": {
          "type": "string"
        },
        "IsForDelivery": {
          "type": "boolean"
        },
        "IsForMeters": {
          "type": "boolean"
        },
        "IsUpdateSupplies": {
          "type": "boolean"
        },
        "IsForNotification": {
          "type": "boolean"
        },
        "Link": {
          "type": "string"
        },
        "IsExternal": {
          "type": "boolean"
        }
      }
    },
    "DealerGatewayConfigurationDto": {
      "type": "object",
      "properties": {
        "GatewayEmailOptions": {
          "$ref": "#/definitions/GatewayEmailOptionsDto"
        },
        "GatewayFtpOptions": {
          "$ref": "#/definitions/GatewayFtpOptionsDto"
        },
        "GatewayEsprinetOptions": {
          "$ref": "#/definitions/GatewayEsprinetOptionsDto"
        },
        "GatewayAlsoOptions": {
          "$ref": "#/definitions/GatewayAlsoOptionsDto"
        },
        "GatewayEvaticOptions": {
          "$ref": "#/definitions/GatewayAsolviServiceOptionsDto"
        },
        "GatewayJim2Options": {
          "$ref": "#/definitions/GatewayJim2ServiceOptionsDto"
        },
        "GatewayEAutomateOptions": {
          "$ref": "#/definitions/GatewayEAutomateOptionsDto"
        },
        "GatewayAdvOptions": {
          "$ref": "#/definitions/GatewayAdvOptionsDto"
        },
        "GatewayQuickBooksOptions": {
          "$ref": "#/definitions/GatewayQuickBooksOptionsDto"
        },
        "GatewayXeroOptions": {
          "$ref": "#/definitions/GatewayXeroOptionsDto"
        },
        "GatewayCallbackJSONOptions": {
          "$ref": "#/definitions/GatewayCallbackJSONOptionsDto"
        },
        "GatewayDistributionManagementOptions": {
          "$ref": "#/definitions/GatewayDistributionManagementOptionsDto"
        }
      }
    },
    "GatewayEmailOptionsDto": {
      "type": "object",
      "properties": {
        "Fields": {
          "type": "string"
        },
        "Format": {
          "enum": [
            "XLS",
            "XML",
            "Json",
            "CSV"
          ],
          "type": "string"
        },
        "To": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "SendMassiveLogisticEmailToUser": {
          "type": "boolean"
        },
        "Body": {
          "type": "string"
        },
        "AsAttach": {
          "type": "boolean"
        },
        "XMLTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateFile"
          }
        },
        "JsonTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateFile"
          }
        }
      }
    },
    "GatewayFtpOptionsDto": {
      "type": "object",
      "properties": {
        "Fields": {
          "type": "string"
        },
        "Format": {
          "enum": [
            "XLS",
            "XML",
            "Json",
            "CSV"
          ],
          "type": "string"
        },
        "FtpUserName": {
          "type": "string"
        },
        "FtpPassword": {
          "type": "string"
        },
        "FtpHost": {
          "type": "string"
        },
        "FtpUsePassiveMode": {
          "type": "boolean"
        },
        "EnableSsl": {
          "type": "boolean"
        },
        "XMLTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateFile"
          }
        },
        "JsonTemplates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateFile"
          }
        }
      }
    },
    "GatewayEsprinetOptionsDto": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        },
        "UsePassiveMode": {
          "type": "boolean"
        }
      }
    },
    "GatewayAlsoOptionsDto": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Endpoint": {
          "type": "string"
        },
        "SenderID": {
          "type": "string"
        },
        "ReceiverID": {
          "type": "string"
        },
        "PartnerNumber": {
          "type": "string"
        },
        "ShippingTermDomestic": {
          "type": "string"
        },
        "ShippingTermForeign": {
          "type": "string"
        },
        "Ruleset": {
          "enum": [
            "Findland",
            "Norway"
          ],
          "type": "string"
        }
      }
    },
    "GatewayAsolviServiceOptionsDto": {
      "type": "object",
      "properties": {
        "Endpoint": {
          "type": "string"
        },
        "ExternalSystemId": {
          "format": "int32",
          "type": "integer"
        },
        "Password": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        }
      }
    },
    "GatewayJim2ServiceOptionsDto": {
      "type": "object",
      "properties": {
        "IsEmailActive": {
          "type": "boolean"
        },
        "From": {
          "type": "string"
        },
        "To": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "AttachFileName": {
          "type": "string"
        },
        "IsFtpActive": {
          "type": "boolean"
        },
        "Fields": {
          "type": "string"
        },
        "Format": {
          "enum": [
            "XLS",
            "XML",
            "Json",
            "CSV"
          ],
          "type": "string"
        },
        "FtpUserName": {
          "type": "string"
        },
        "FtpPassword": {
          "type": "string"
        },
        "FtpHost": {
          "type": "string"
        },
        "FtpUsePassiveMode": {
          "type": "boolean"
        },
        "EnableSsl": {
          "type": "boolean"
        },
        "FtpFileNamePrefix": {
          "type": "string"
        }
      }
    },
    "GatewayEAutomateOptionsDto": {
      "type": "object",
      "properties": {
        "User": {
          "description": "PIP user",
          "type": "string"
        },
        "Password": {
          "description": "PIP Password",
          "type": "string"
        },
        "CompanyID": {
          "description": "EAutomate Company Id",
          "type": "string"
        },
        "Version": {
          "description": "PIP Version",
          "type": "string"
        },
        "PartnerToken": {
          "description": "",
          "type": "string"
        },
        "Endpoint": {
          "description": "PIP Endpoint",
          "type": "string"
        },
        "MeterSource": {
          "description": "EAutomate Meter Source Code [MPSMonitor, External]",
          "type": "string"
        },
        "MeterTypes": {
          "description": "EAutomate Meter Types Code for mapping [mono:B\\W, color:ColouSr]",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeterType"
          }
        },
        "IncludeUnclassified": {
          "description": "default false: True means that classified and uncliassified devices will be joined.",
          "type": "boolean"
        },
        "JoinDevicesType": {
          "description": "Join Devices Type",
          "enum": [
            "ByCustomerHierarchy",
            "BySerialNumberAndAssetNumber"
          ],
          "type": "string"
        },
        "DiscardCountersOlderThanDays": {
          "format": "int32",
          "description": "Gets or sets the discard counters older than days.",
          "type": "integer"
        },
        "MatchRules": {
          "description": "Additional device matching rules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchRule"
          }
        },
        "CustomSchedule": {
          "description": "Custom schedule",
          "type": "boolean"
        }
      }
    },
    "GatewayAdvOptionsDto": {
      "type": "object",
      "properties": {
        "Endpoint": {
          "description": "ADV Endpoint",
          "type": "string"
        },
        "User": {
          "description": "ADV endpoint user",
          "type": "string"
        },
        "Password": {
          "description": "ADV endpoint Password",
          "type": "string"
        },
        "CompanyID": {
          "description": "ADV Company Id",
          "type": "string"
        },
        "MeterTypes": {
          "description": "ADV Meter Types Code for mapping [mono, color]",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeterType"
          }
        },
        "DeviceMatchRule": {
          "description": "Device Match Rule",
          "enum": [
            "SerialNumber",
            "ExternalIdentifier",
            "CoalesceExternalIdentifierSerialNumber"
          ],
          "type": "string"
        },
        "SupplyMatchRule": {
          "description": "Device Match Rule",
          "enum": [
            "Color",
            "PartNumber"
          ],
          "type": "string"
        }
      }
    },
    "GatewayQuickBooksOptionsDto": {
      "type": "object",
      "properties": {
        "AppEnvironment": {
          "description": "App Environment (production, sandbox)",
          "type": "string"
        },
        "ClientID": {
          "description": "Client ID",
          "type": "string"
        },
        "ClientSecret": {
          "description": "Client Secret",
          "type": "string"
        },
        "RedirectURI": {
          "description": "Redirect URI",
          "type": "string"
        },
        "AuthenticationCode": {
          "description": "Authentication Code",
          "type": "string"
        },
        "RealmID": {
          "description": "Realm ID",
          "type": "string"
        },
        "AccessToken": {
          "description": "Access Token",
          "type": "string"
        },
        "RefreshToken": {
          "description": "Refresh Token",
          "type": "string"
        },
        "TaxRatesMapping": {
          "description": "Tax Rates names Mapping",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxRateMapping"
          }
        },
        "ServiceItemsMapping": {
          "description": "Tax Service Item names Mapping",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceItemMapping"
          }
        }
      }
    },
    "GatewayXeroOptionsDto": {
      "type": "object",
      "properties": {
        "AppEnvironment": {
          "description": "App Environment (production, sandbox)",
          "type": "string"
        },
        "ClientID": {
          "description": "Client ID",
          "type": "string"
        },
        "ClientSecret": {
          "description": "Client Secret",
          "type": "string"
        },
        "AccountsMapping": {
          "description": "Account Mapping",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountMapping"
          }
        },
        "ServiceItemsMapping": {
          "description": "Tax Service Item names Mapping",
          "type": "array",
          "items": {
            "$ref": "#/definitions/XeroServiceItemMapping"
          }
        },
        "SendAttachments": {
          "description": "True means to send invoice attachments",
          "type": "boolean"
        }
      }
    },
    "GatewayCallbackJSONOptionsDto": {
      "type": "object",
      "properties": {
        "Endpoint": {
          "description": "Gets or sets the endpoint.",
          "type": "string"
        },
        "AuthenticationType": {
          "enum": [
            "None",
            "Basic",
            "Bearer"
          ],
          "type": "string"
        },
        "AuthenticationValue": {
          "type": "string"
        },
        "HttpMethod": {
          "type": "string"
        },
        "Payload": {
          "type": "string"
        }
      }
    },
    "GatewayDistributionManagementOptionsDto": {
      "type": "object",
      "properties": {
        "CustomSchedule": {
          "description": "Custom schedule",
          "type": "boolean"
        },
        "AppEnvironment": {
          "description": "App Environment (production, sandbox)",
          "type": "string"
        },
        "IncludeUnclassified": {
          "description": "default false: True means that classified and uncliassified devices will be sent.",
          "type": "boolean"
        },
        "DiscardCountersOlderThanHours": {
          "format": "int32",
          "description": "Gets or sets the discard counters older than hours.",
          "type": "integer"
        },
        "CustomerIds": {
          "description": "If empty, all customers will be sent.\r\n            If set, only the customers in the list will be sent.\r\n            Array of int or encrypted Ids",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Object"
          }
        }
      }
    },
    "TemplateFile": {
      "type": "object",
      "properties": {
        "FileName": {
          "type": "string"
        },
        "Template": {
          "type": "string"
        }
      }
    },
    "MeterType": {
      "type": "object",
      "properties": {
        "Mps": {
          "type": "string"
        },
        "Thirdparty": {
          "type": "string"
        },
        "Brand": {
          "type": "string"
        }
      }
    },
    "MatchRule": {
      "type": "object",
      "properties": {
        "MatchType": {
          "description": "es. prefix",
          "enum": [
            "Prefix",
            "Suffix"
          ],
          "type": "string"
        },
        "Pattern": {
          "type": "string"
        }
      }
    },
    "TaxRateMapping": {
      "description": "Tax Rate Mapping",
      "type": "object",
      "properties": {
        "MpsTaxRate": {
          "description": "The MPS Tax Rate Code",
          "type": "string"
        },
        "QuickbooksTaxRate": {
          "description": "The Quickbooks Tax Rate Name",
          "type": "string"
        }
      }
    },
    "ServiceItemMapping": {
      "description": "Service Item Mapping",
      "type": "object",
      "properties": {
        "MpsServiceItem": {
          "description": "The MPS billable service Code",
          "type": "string"
        },
        "QuickbooksItem": {
          "description": "The Quickbooks Item Name",
          "type": "string"
        }
      }
    },
    "AccountMapping": {
      "description": "Account Mapping",
      "type": "object",
      "properties": {
        "MpsItem": {
          "description": "The MPS Item Code",
          "type": "string"
        },
        "XeroAccount": {
          "description": "The Xero Account Code",
          "type": "string"
        }
      }
    },
    "XeroServiceItemMapping": {
      "description": "Xero Service Item Mapping",
      "type": "object",
      "properties": {
        "MpsServiceItem": {
          "description": "The MPS billable service Code",
          "type": "string"
        },
        "XeroItem": {
          "description": "The Xero Item Name",
          "type": "string"
        }
      }
    },
    "FilteredRequest": {
      "description": "Represents a request with an additional filter text",
      "type": "object",
      "properties": {
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[LogisticPlaceholderDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogisticPlaceholderDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "LogisticPlaceholderDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "GroupName": {
          "type": "string"
        },
        "SampleValue": {
          "type": "string"
        }
      }
    },
    "SingleResultResponse[DealerGatewayDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/DealerGatewayDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetDealerGatewayRequest": {
      "type": "object",
      "properties": {
        "DealerGatewayType": {
          "enum": [
            "Email",
            "Callback",
            "CallbackXml",
            "Ftp",
            "Evatic",
            "EAutomate",
            "Jim2",
            "Europarts",
            "OneTrail",
            "Adv",
            "Advantis",
            "Also",
            "Esprinet",
            "Forza",
            "Nav",
            "PowerOffice",
            "Radix",
            "ToServ",
            "VantageOnline",
            "QuickBooks",
            "Xero",
            "DistributionManagement"
          ],
          "type": "string"
        },
        "Topic": {
          "enum": [
            "Delivery",
            "MeterReadings",
            "Billing"
          ],
          "type": "string"
        }
      }
    },
    "CreateDealerGatewayRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "IsMassiveEnabled": {
          "type": "boolean"
        },
        "DealerGatewayType": {
          "enum": [
            "Email",
            "Callback",
            "CallbackXml",
            "Ftp",
            "Evatic",
            "EAutomate",
            "Jim2",
            "Europarts",
            "OneTrail",
            "Adv",
            "Advantis",
            "Also",
            "Esprinet",
            "Forza",
            "Nav",
            "PowerOffice",
            "Radix",
            "ToServ",
            "VantageOnline",
            "QuickBooks",
            "Xero",
            "DistributionManagement"
          ],
          "type": "string"
        },
        "Configuration": {
          "$ref": "#/definitions/DealerGatewayConfigurationDto"
        },
        "Topic": {
          "enum": [
            "Delivery",
            "MeterReadings",
            "Billing"
          ],
          "type": "string"
        }
      }
    },
    "CreateDealerGatewayToServRequest": {
      "description": "Create request for 2serv integration",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Recipient Dealer code",
          "type": "string"
        },
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "ToServEmail": {
          "description": "2serv email, where xml file will be sent",
          "type": "string"
        }
      }
    },
    "CreateDealerGatewayVantageOnlineRequest": {
      "description": "Create request for VantageOnline integration",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Recipient Dealer code",
          "type": "string"
        },
        "IsActive": {
          "description": "Is Active",
          "type": "boolean"
        },
        "VantageOnlineEmail": {
          "description": "VantageOnline email, where xml file will be sent",
          "type": "string"
        }
      }
    },
    "UpdateDealerGatewayRequest": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "IsMassiveEnabled": {
          "type": "boolean"
        },
        "DealerGatewayType": {
          "enum": [
            "Email",
            "Callback",
            "CallbackXml",
            "Ftp",
            "Evatic",
            "EAutomate",
            "Jim2",
            "Europarts",
            "OneTrail",
            "Adv",
            "Advantis",
            "Also",
            "Esprinet",
            "Forza",
            "Nav",
            "PowerOffice",
            "Radix",
            "ToServ",
            "VantageOnline",
            "QuickBooks",
            "Xero",
            "DistributionManagement"
          ],
          "type": "string"
        },
        "Configuration": {
          "$ref": "#/definitions/DealerGatewayConfigurationDto"
        },
        "Topic": {
          "enum": [
            "Delivery",
            "MeterReadings",
            "Billing"
          ],
          "type": "string"
        }
      }
    },
    "EAutomateJoinRequest": {
      "description": "eAutomate Join Request",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Dealer code",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Customer code",
          "type": "string"
        }
      }
    },
    "ListResultResponse[SagaOperationDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SagaOperationDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SagaOperationDto": {
      "type": "object",
      "properties": {
        "Gateway": {
          "description": "Gets or sets the gateway.",
          "enum": [
            "Email",
            "Callback",
            "CallbackXml",
            "Ftp",
            "Evatic",
            "EAutomate",
            "Jim2",
            "Europarts",
            "OneTrail",
            "Adv",
            "Advantis",
            "Also",
            "Esprinet",
            "Forza",
            "Nav",
            "PowerOffice",
            "Radix",
            "ToServ",
            "VantageOnline",
            "QuickBooks",
            "Xero",
            "DistributionManagement"
          ],
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "enum": [
            "Queued",
            "Progress",
            "Success",
            "Error",
            "Warning",
            "OperationNotFound",
            "Empty"
          ],
          "type": "string"
        },
        "LastUpdateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "SagaOperationLogs": {
          "description": "Gets or sets the saga operation logs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SagaOperationLogDto"
          }
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SagaOperationLogDto": {
      "type": "object",
      "properties": {
        "Status": {
          "format": "int32",
          "description": "Status for all kind of services.\r\n            Each service will cast the value to its specific enum.",
          "type": "integer"
        },
        "Message": {
          "type": "string"
        },
        "LastUpdateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "JamUploadHpPrintersRequest": {
      "type": "object",
      "properties": {
        "CustomerCode": {
          "type": "string"
        },
        "ExplorerDataIdentifier": {
          "type": "string"
        },
        "JamConnectorId": {
          "type": "string"
        },
        "JamConnectorVersion": {
          "type": "string"
        },
        "JamConnectorStatus": {
          "type": "string"
        },
        "ExplorerJamVersion": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[LocalizationDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalizationDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "LocalizationDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "CreateLocalizationLabelRequest": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Scope": {
          "enum": [
            "MPS",
            "WEBSITEIT",
            "SUPPORTTICKET",
            "MPSNG"
          ],
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "CopyTranslations": {
          "type": "boolean"
        }
      }
    },
    "CreateRequest[LogMessageDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/LogMessageDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "LogMessageDto": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "Url": {
          "type": "string"
        },
        "Dealer": {
          "$ref": "#/definitions/DealerInfoDto"
        },
        "Customer": {
          "$ref": "#/definitions/CustomerDto"
        }
      }
    },
    "SingleResultResponse[LogMessageDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/LogMessageDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetOfficesRequest": {
      "description": "Represents a request to retrieve a pagedlist of offices by DeviceId",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "HasSubnets": {
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[OfficeListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OfficeListDto": {
      "description": "Represent an office",
      "type": "object",
      "properties": {
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "Gets or sets the customer dto."
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "IsDefault": {
          "description": "Gets or sets a value indicating whether this instance is default.",
          "type": "boolean"
        },
        "DestinationCode": {
          "description": "Gets or sets the DestinationCode.",
          "type": "string"
        },
        "Address": {
          "description": "Gets or sets the address.",
          "type": "string"
        },
        "Sap": {
          "description": "Gets or sets the Sap.",
          "type": "string"
        },
        "Telephone": {
          "description": "Gets or sets the telephone.",
          "type": "string"
        },
        "Fax": {
          "description": "Gets or sets the fax.",
          "type": "string"
        },
        "City": {
          "description": "Gets or sets the city.",
          "type": "string"
        },
        "ZipCode": {
          "description": "Gets or sets the zip code.",
          "type": "string"
        },
        "Province": {
          "description": "Gets or sets the province.",
          "type": "string"
        },
        "Country": {
          "description": "Gets or sets the Country.",
          "type": "string"
        },
        "IdCountry": {
          "description": "Gets or sets the Country Id.",
          "type": "string"
        },
        "IsCountryEu": {
          "description": "Gets or sets a value indicating whether this instance is country eu.",
          "type": "boolean"
        },
        "Lat": {
          "format": "float",
          "description": "Gets or sets the latitude.",
          "type": "number"
        },
        "Lng": {
          "format": "float",
          "description": "Gets or sets the Longitute.",
          "type": "number"
        },
        "MailAddress": {
          "description": "Gets or sets the mail address.",
          "type": "string"
        },
        "DeliveryTonerMails": {
          "description": "Gets or sets the DeliveryTonerMails.",
          "type": "string"
        },
        "DestinationDescription": {
          "description": "Gets or sets the destinationDescription.",
          "type": "string"
        },
        "EnableAutoAssign": {
          "description": "Gets or sets the EnableAutoAssign.",
          "type": "boolean"
        },
        "Note": {
          "description": "Gets or sets the Note.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "AvailableDevices": {
          "format": "int32",
          "description": "Gets or sets the devices Numbers",
          "type": "integer"
        },
        "OfficeSubnets": {
          "description": "Gets or sets the subnets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeSubnetDto"
          }
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "OfficeSubnetDto": {
      "type": "object",
      "properties": {
        "IpRootFrom": {
          "description": "Gets or sets the IpRootFrom",
          "type": "string"
        },
        "IpRootTo": {
          "description": "Gets or sets the IpRootTo",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UploadOfficesRequest": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Attachment": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "ImportOptions": {
          "enum": [
            "IgnoreExist",
            "Update",
            "CreateAsNew"
          ],
          "type": "string"
        }
      }
    },
    "SingleResultResponse[OfficeDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/OfficeDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OfficeDto": {
      "description": "Represent an office",
      "type": "object",
      "properties": {
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "Gets or sets the customer dto."
        },
        "DestinationCode": {
          "description": "Gets or sets the DestinationCode.",
          "type": "string"
        },
        "IsDefault": {
          "description": "Gets or sets a value indicating whether this office is the default for the customer.",
          "type": "boolean"
        },
        "Address": {
          "description": "Gets or sets the address.",
          "type": "string"
        },
        "Sap": {
          "description": "Gets or sets the Sap.",
          "type": "string"
        },
        "Telephone": {
          "description": "Gets or sets the telephone.",
          "type": "string"
        },
        "Fax": {
          "description": "Gets or sets the fax.",
          "type": "string"
        },
        "City": {
          "description": "Gets or sets the city.",
          "type": "string"
        },
        "ZipCode": {
          "description": "Gets or sets the zip code.",
          "type": "string"
        },
        "Province": {
          "description": "Gets or sets the province.",
          "type": "string"
        },
        "Country": {
          "description": "Gets or sets the Country.",
          "type": "string"
        },
        "IdCountry": {
          "description": "Gets or sets the Country Id.",
          "type": "string"
        },
        "Lat": {
          "format": "float",
          "description": "Gets or sets the latitude.",
          "type": "number"
        },
        "Lng": {
          "format": "float",
          "description": "Gets or sets the Longitute.",
          "type": "number"
        },
        "MailAddress": {
          "description": "Gets or sets the mail address.",
          "type": "string"
        },
        "DeliveryTonerMails": {
          "description": "Gets or sets the DeliveryTonerMails.",
          "type": "string"
        },
        "DestinationDescription": {
          "description": "Gets or sets the destinationDescription.",
          "type": "string"
        },
        "EnableAutoAssign": {
          "description": "Gets or sets the EnableAutoAssign.",
          "type": "boolean"
        },
        "Note": {
          "description": "Gets or sets the Note.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "AvailableDevices": {
          "format": "int32",
          "description": "Gets or sets the devices Numbers",
          "type": "integer"
        },
        "OfficeSubnets": {
          "description": "Gets or sets the subnets",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeSubnetDto"
          }
        },
        "CustomFieldValues": {
          "description": "Gets or sets the custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "DeliveryNotes": {
          "description": "Gets or sets the delivery notes.",
          "type": "string"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateRequest[OfficeDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/OfficeDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[OfficeDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/OfficeDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "CreateOfficeSubnetRequest": {
      "description": "CreateExplorerSubnetRequest",
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "OfficeId",
          "type": "string"
        },
        "IpRootFrom": {
          "description": "IpRootFrom",
          "type": "string"
        },
        "IpRootTo": {
          "description": "IpRootTo",
          "type": "string"
        },
        "IpFreeTextIgnoreBroadcast": {
          "description": "IpFreeTextIgnoreBroadcast",
          "type": "boolean"
        }
      }
    },
    "ListResultResponse[OfficeSubnetDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeSubnetDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DeleteOfficeSubnetRequest": {
      "description": "CreateExplorerSubnetRequest",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "OfficeId",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[OfficeFloorDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeFloorDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OfficeFloorDto": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string"
        },
        "ImageBase64Content": {
          "type": "string"
        },
        "Devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeFloorDeviceDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "OfficeFloorDeviceDto": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "PositionTop": {
          "format": "double",
          "type": "number"
        },
        "PositionLeft": {
          "format": "double",
          "type": "number"
        },
        "SerialNumber": {
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateOfficeFloorRequest": {
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Map": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "Gets or sets the map."
        }
      }
    },
    "SingleResultResponse[OfficeFloorDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/OfficeFloorDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateOfficeFloorRequest": {
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeFloorId": {
          "description": "Gets or sets the office floor identifier.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Map": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "Gets or sets the map."
        }
      }
    },
    "DeleteOfficeFloorRequest": {
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeFloorId": {
          "description": "Gets or sets the office floor identifier.",
          "type": "string"
        }
      }
    },
    "SaveOfficeFloorPinRequest": {
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeFloorId": {
          "description": "Gets or sets the office floor identifier.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "PositionLeft": {
          "format": "double",
          "description": "Gets or sets the position left.",
          "type": "number"
        },
        "PositionTop": {
          "format": "double",
          "description": "Gets or sets the position top.",
          "type": "number"
        }
      }
    },
    "DeleteOfficeFloorPinRequest": {
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "OfficeFloorId": {
          "description": "Gets or sets the office floor identifier.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        }
      }
    },
    "CreateRequest[OktaDomainDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/OktaDomainDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "OktaDomainDto": {
      "description": "Represent a n okta domain",
      "type": "object",
      "properties": {
        "IdDealer": {
          "description": "Sets the dealer identifier",
          "type": "string"
        },
        "IdCustomer": {
          "description": "Sets the customer identifier",
          "type": "string"
        },
        "RolesMatch": {
          "description": "Sets the roles match",
          "type": "string"
        },
        "AllowCreateUsers": {
          "description": "If true, the user can be created automatically with login from okta",
          "type": "boolean"
        },
        "DomainUrl": {
          "description": "Sets the Okta complete domain url (iss parameter received in querystring from okta) (es. https://dev-981774.okta.com)",
          "type": "string"
        },
        "ClientId": {
          "description": "Sets the client id fro okta openid",
          "type": "string"
        },
        "ClientSecret": {
          "description": "Sets the client secret fro okta openid",
          "type": "string"
        },
        "Authority": {
          "description": "Sets the issuer Issuer (es. https://dev-981774.okta.com/oauth2/default)",
          "type": "string"
        },
        "MetadataAddress": {
          "description": "Sets the url of the configuration data of this open id connection (es. https://dev-981774.okta.com/oauth2/default/.well-known/openid-configuration)",
          "type": "string"
        },
        "Domain": {
          "description": "Sets the domain string used for the openid configuration (es. dev-981774)",
          "type": "string"
        },
        "ApiTokenForSDK": {
          "description": "Sets the api token used for calling okta sdk api",
          "type": "string"
        },
        "LoginUrl": {
          "description": "Sets the login url of okta",
          "type": "string"
        },
        "IsValidated": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[OktaDomainDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/OktaDomainDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[OktaDomainDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/OktaDomainDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetByOktaDomainRequest": {
      "description": "Represents a request to retrieve an object by name",
      "required": [
        "OktaDomain"
      ],
      "type": "object",
      "properties": {
        "OktaDomain": {
          "description": "Gets or sets the okta domain.",
          "type": "string"
        }
      }
    },
    "GetOrderRequest": {
      "description": "Represents a request to retrieve a pagedlist of accounts",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the Dealer Id.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets or sets the Customer Id.",
          "type": "string"
        },
        "PurchaseOrderId": {
          "format": "int32",
          "description": "Gets or sets the Purchase Order Id.",
          "type": "integer"
        },
        "SerialNumber": {
          "description": "Gets or sets the Purchase Order Id.",
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "description": "Gets or sets the From Date.",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "Gets or sets the To Date.",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Gets or sets the Purchase Order Id.",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[OrderListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OrderListDto": {
      "type": "object",
      "properties": {
        "PurchaseOrderId": {
          "format": "int32",
          "description": "Gets or sets the alternative asset description.",
          "type": "integer"
        },
        "CustomerId": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Gets or sets the alternative asset description.",
          "type": "integer"
        },
        "IdIntegrationType": {
          "format": "int32",
          "description": "Gets or sets the alternative asset description.",
          "type": "integer"
        },
        "CreatedUtc": {
          "format": "date-time",
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_CompanyName": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_Address1": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_Address2": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_Postal": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_City": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_FullName": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_Phone": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_Email": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Delivery_Country": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "CustomerSupplyReplaceLogicID": {
          "format": "int32",
          "description": "Gets or sets the alternative asset description.",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetOrderLinesRequest": {
      "description": "Represents a request to retrieve a pagedlist of accounts",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the Dealer Id.",
          "type": "string"
        },
        "OrderId": {
          "description": "Gets or sets the Customer Id.",
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "description": "Gets or sets the From Date.",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "description": "Gets or sets the To Date.",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Gets or sets the Purchase Order Id.",
          "type": "integer"
        },
        "ProvideAllRows": {
          "format": "int32",
          "description": "Gets or sets the Purchase Order Id.",
          "type": "integer"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[OrderLineListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OrderLineListDto": {
      "type": "object",
      "properties": {
        "LineNumber": {
          "format": "int32",
          "description": "Gets or sets the alternative asset description.",
          "type": "integer"
        },
        "SupplyAlertId": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "SKU": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "LocationBuilding": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "LocationFloor": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "LocationZone": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "LocationDepartment": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "OrderLineStatus": {
          "$ref": "#/definitions/OrderLineStatusDto",
          "description": "Gets or sets the alternative asset description."
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "OrderLineStatusDto": {
      "type": "object",
      "properties": {
        "CreatedUtc": {
          "format": "date-time",
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Gets or sets the alternative asset description.",
          "type": "integer"
        },
        "VendorStatus": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetOrderDetailsRequest": {
      "description": "Represents a request to retrieve a pagedlist of accounts",
      "type": "object",
      "properties": {
        "OrderId": {
          "description": "Gets or sets the Customer Id.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[OrderLineStatusDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineStatusDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[OrderAdditionalInfoDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderAdditionalInfoDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OrderAdditionalInfoDto": {
      "type": "object",
      "properties": {
        "Infos": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[OrderProofOfDeliveryDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderProofOfDeliveryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "OrderProofOfDeliveryDto": {
      "type": "object",
      "properties": {
        "SignedForUtc": {
          "format": "date-time",
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Image": {
          "format": "byte",
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Link": {
          "description": "Gets or sets the alternative asset description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[PanelMessageAlertCodeDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PanelMessageAlertCodeDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PanelMessageAlertCodeDto": {
      "description": "Panel message alert list configuration",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetPanelMessageAlertConfigurationsRequest": {
      "description": "Represents a request to retrieve a list of panel message alert configurations",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "IdProduct": {
          "description": "Gets or sets the product",
          "type": "string"
        },
        "IdInstalledProduct": {
          "description": "Gets or sets the installedproduct",
          "type": "string"
        },
        "SupplyType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the type of the supply."
        },
        "ColorType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the type of the color."
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[PanelMessageAlertListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PanelMessageAlertListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PanelMessageAlertListDto": {
      "description": "Panel message alert list configuration",
      "type": "object",
      "properties": {
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "Gets or sets the customer ."
        },
        "Device": {
          "$ref": "#/definitions/InstalledProductBaseDto",
          "description": "Gets or sets the IdInstalledProduct."
        },
        "Brands": {
          "description": "Gets or sets the Brands",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Products": {
          "description": "Gets or sets the Products",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductBaseDto"
          }
        },
        "ErrorCodes": {
          "description": "Gets or sets the Error codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PanelMessageAlertCodeDto"
          }
        },
        "FilteredDescriptions": {
          "description": "Gets or sets the filtered descriptions",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "CreatedAtUTC": {
          "format": "date-time",
          "description": "Gets or sets the createdAt.",
          "type": "string"
        },
        "UpdatedAtUTC": {
          "format": "date-time",
          "description": "Gets or sets the updatedAt.",
          "type": "string"
        },
        "DeletedAtUTC": {
          "format": "date-time",
          "description": "Gets or sets the deletedAtUTC.",
          "type": "string"
        },
        "SupplyType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the supply type ."
        },
        "ColorType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the color type ."
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the maintenance kit type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the maintenance kit color."
        },
        "SendMail": {
          "description": "Gets or sets the send mail option.",
          "type": "boolean"
        },
        "OpenAlert": {
          "description": "Gets or sets the open alert option.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "InstalledProductBaseDto": {
      "type": "object",
      "properties": {
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "Firmware": {
          "description": "Gets or sets the firmware.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Gets or sets the product."
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateRequest[PanelMessageAlertConfigurationDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/PanelMessageAlertConfigurationDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "PanelMessageAlertConfigurationDto": {
      "description": "Panel message alert configuration",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto",
          "description": "Gets or sets the Customer."
        },
        "Device": {
          "$ref": "#/definitions/InstalledProductBaseDto",
          "description": "Gets or sets the DeviceId."
        },
        "Brands": {
          "description": "Gets or sets the Brands",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Products": {
          "description": "Gets or sets the Products",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductBaseDto"
          }
        },
        "FilteredDescriptions": {
          "description": "Gets or sets the Products",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ErrorCodes": {
          "description": "Gets or sets the Error codes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PanelMessageAlertCodeDto"
          }
        },
        "SupplyType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the supply type ."
        },
        "ColorType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the color type ."
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the maintenance kit type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the maintenance kit color."
        },
        "SendMail": {
          "description": "Gets or sets the send mail option.",
          "type": "boolean"
        },
        "OpenAlert": {
          "description": "Gets or sets the open alert option.",
          "type": "boolean"
        },
        "ApplyAndFilterCondition": {
          "description": "Gets or sets the And/Or code-Description filter condition",
          "type": "boolean"
        },
        "Description": {
          "description": "Gets or sets the Description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[PanelMessageAlertConfigurationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PanelMessageAlertConfigurationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[PanelMessageAlertConfigurationDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/PanelMessageAlertConfigurationDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetPowerBiReportsRequest": {
      "type": "object",
      "properties": {
        "ReportType": {
          "description": "Gets or sets the type of the report.",
          "enum": [
            "System",
            "Personal",
            "Shared"
          ],
          "type": "string"
        },
        "ContextType": {
          "description": "Gets or sets the type of the context.",
          "enum": [
            "Dealer",
            "CustomerPaperCut"
          ],
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[PowerBiReportBaseDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PowerBiReportBaseDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PowerBiReportBaseDto": {
      "type": "object",
      "properties": {
        "IsNew": {
          "description": "Gets or sets a value indicating whether this instance is new.",
          "type": "boolean"
        },
        "SkipChangeLanguage": {
          "description": "Gets or sets a value indicating whether [skip change language].",
          "type": "boolean"
        },
        "ReportType": {
          "enum": [
            "System",
            "Personal",
            "Shared"
          ],
          "type": "string"
        },
        "Creator": {
          "type": "string"
        },
        "TotalShare": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "DatasetId": {
          "description": "Gets or sets the dataset identifier.",
          "type": "string"
        },
        "WorkspaceId": {
          "description": "Gets or sets the Workspace identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetPowerBiTemplatesRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[PowerBiReportInfoDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PowerBiReportInfoDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PowerBiReportInfoDto": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "DatasetId": {
          "description": "Gets or sets the dataset identifier.",
          "type": "string"
        },
        "WorkspaceId": {
          "description": "Gets or sets the Workspace identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetPowerBiReportRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "WorkspaceId": {
          "description": "Gets or sets the WorkspaceId.",
          "type": "string"
        },
        "EditMode": {
          "description": "Gets or sets the EditMode.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[PowerBiReportDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PowerBiReportDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PowerBiReportDto": {
      "type": "object",
      "properties": {
        "Token": {
          "description": "Gets or sets the token.",
          "type": "string"
        },
        "EmbedUrl": {
          "description": "Gets or sets the embed URL.",
          "type": "string"
        },
        "AccessLevel": {
          "description": "Gets or sets the access level.",
          "type": "string"
        },
        "IsNew": {
          "description": "Gets or sets a value indicating whether this instance is new.",
          "type": "boolean"
        },
        "SkipChangeLanguage": {
          "description": "Gets or sets a value indicating whether [skip change language].",
          "type": "boolean"
        },
        "ReportType": {
          "enum": [
            "System",
            "Personal",
            "Shared"
          ],
          "type": "string"
        },
        "Creator": {
          "type": "string"
        },
        "TotalShare": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "description": "Gets or sets the name.",
          "type": "string"
        },
        "DatasetId": {
          "description": "Gets or sets the dataset identifier.",
          "type": "string"
        },
        "WorkspaceId": {
          "description": "Gets or sets the Workspace identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetPowerBiWidgetRequest": {
      "type": "object",
      "properties": {
        "Identifier": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "DeviceId": {
          "type": "string"
        },
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        }
      }
    },
    "SingleResultResponse[PowerBiWidgetDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PowerBiWidgetDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PowerBiWidgetDto": {
      "type": "object",
      "properties": {
        "Identifier": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "ReportId": {
          "description": "Gets or sets the report identifier.",
          "type": "string"
        },
        "WorkspaceId": {
          "description": "Gets or sets the Workspace identifier.",
          "type": "string"
        },
        "Filter": {
          "description": "Gets or sets the filter.",
          "type": "string"
        },
        "DetailWorkspaceId": {
          "description": "Gets or sets the detail workspace identifier.",
          "type": "string"
        },
        "DetailReportId": {
          "description": "Gets or sets the detail report identifier.",
          "type": "string"
        },
        "WindowWidth": {
          "description": "Gets or sets the width of the window.",
          "enum": [
            "HalfSize",
            "FullSize"
          ],
          "type": "string"
        },
        "WindowHeight": {
          "description": "Gets or sets the height of the window.",
          "enum": [
            "HalfSize",
            "FullSize"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[PowerBiReporSharePreferencestDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PowerBiReporSharePreferencestDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PowerBiReporSharePreferencestDto": {
      "type": "object",
      "properties": {
        "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBaseDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[PowerBiReporSchedulePreferencesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PowerBiReporSchedulePreferencesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PowerBiReporSchedulePreferencesDto": {
      "type": "object",
      "properties": {
        "Schedule": {
          "$ref": "#/definitions/ScheduleDto"
        },
        "Emails": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "FileFormat": {
          "enum": [
            "PPTX",
            "PDF",
            "PNG",
            "XLSX",
            "DOCX",
            "CSV",
            "XML"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CopyPowerBiReportRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "WorkspaceId": {
          "description": "Gets or sets the WorkspaceId.",
          "type": "string"
        },
        "CopyReportName": {
          "description": "Gets or sets the CopyReportName.",
          "type": "string"
        },
        "DeleteSourceReport": {
          "description": "Gets or sets a value indicating whether [delete source report].",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreatePowerBiReportFromTemplateRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "WorkspaceId": {
          "description": "Gets or sets the WorkspaceId.",
          "type": "string"
        },
        "NewReportName": {
          "description": "Gets or sets the CopyReportName.",
          "type": "string"
        },
        "ContextType": {
          "description": "Gets or sets the type of the context.",
          "enum": [
            "Dealer",
            "CustomerPaperCut"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SavePowerBiReportSharePreferencesRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountBaseDto"
          }
        },
        "WorkspaceId": {
          "description": "Gets or sets the WorkspaceId.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SavePowerBiReportPreferencesRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "WorkspaceId": {
          "description": "Gets or sets the WorkspaceId.",
          "type": "string"
        },
        "IsNew": {
          "description": "Gets or sets a value indicating whether this instance is new.",
          "type": "boolean"
        },
        "SkipChangeLanguage": {
          "description": "Gets or sets the skip change language.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SavePowerBiReportSchedulePreferencesRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "WorkspaceId": {
          "description": "Gets or sets the WorkspaceId.",
          "type": "string"
        },
        "Schedule": {
          "$ref": "#/definitions/ScheduleDto"
        },
        "Emails": {
          "type": "string"
        },
        "Delete": {
          "type": "boolean"
        },
        "Subject": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "FileFormat": {
          "enum": [
            "PPTX",
            "PDF",
            "PNG",
            "XLSX",
            "DOCX",
            "CSV",
            "XML"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ChangePowerBiAccountLanguageRequest": {
      "type": "object",
      "properties": {
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        }
      }
    },
    "DeletePowerBiReportRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PrintReleafSignUpDealerRequest": {
      "required": [
        "Email",
        "Id"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "maxLength": 150,
          "minLength": 0,
          "pattern": "^(([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}){1,25})",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PrintReleafSignUpCustomerRequest": {
      "required": [
        "IdCustomer",
        "Id"
      ],
      "type": "object",
      "properties": {
        "IdCustomer": {
          "type": "string"
        },
        "SendInvitation": {
          "type": "boolean"
        },
        "AccountEmail": {
          "maxLength": 150,
          "minLength": 0,
          "pattern": "^(([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5}){1,25})",
          "type": "string"
        },
        "AccountLanguage": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[PrintReleafExternalDealerDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PrintReleafExternalDealerDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PrintReleafExternalDealerDto": {
      "type": "object",
      "properties": {
        "ServerUrl": {
          "type": "string"
        },
        "DealerToken": {
          "type": "string"
        }
      }
    },
    "SingleResultResponse[PrintReleafDealerDashboardDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PrintReleafDealerDashboardDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PrintReleafDealerDashboardDto": {
      "type": "object",
      "properties": {
        "Account": {
          "$ref": "#/definitions/PrintReleafAccountDto"
        },
        "Volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintReleafVolumeDto"
          }
        },
        "LifeTimeCertificateUrl": {
          "type": "string"
        }
      }
    },
    "PrintReleafAccountDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "parent_id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "activated_at": {
          "format": "date-time",
          "type": "string"
        },
        "deactivated_at": {
          "$ref": "#/definitions/Object"
        },
        "accounts_count": {
          "format": "int32",
          "type": "integer"
        },
        "users_count": {
          "format": "int32",
          "type": "integer"
        },
        "mtd_pages": {
          "format": "float",
          "type": "number"
        },
        "qtd_pages": {
          "format": "float",
          "type": "number"
        },
        "ytd_pages": {
          "format": "float",
          "type": "number"
        },
        "lifetime_pages": {
          "format": "float",
          "type": "number"
        },
        "mtd_trees": {
          "format": "float",
          "type": "number"
        },
        "qtd_trees": {
          "format": "float",
          "type": "number"
        },
        "ytd_trees": {
          "format": "float",
          "type": "number"
        },
        "lifetime_trees": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "PrintReleafVolumeDto": {
      "type": "object",
      "properties": {
        "account_id": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "pages": {
          "format": "int32",
          "type": "integer"
        },
        "trees": {
          "format": "float",
          "type": "number"
        }
      }
    },
    "SingleResultResponse[PrintReleafCustomerDashboardDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/PrintReleafCustomerDashboardDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PrintReleafCustomerDashboardDto": {
      "type": "object",
      "properties": {
        "Volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintReleafVolumeDto"
          }
        },
        "Projects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintReleafProjectDto"
          }
        },
        "FavoriteProjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintReleafProjectDto"
          }
        },
        "Account": {
          "$ref": "#/definitions/PrintReleafAccountDto"
        },
        "Certificates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintReleafCertificateDto"
          }
        },
        "LifeTimeCertificateUrl": {
          "type": "string"
        }
      }
    },
    "PrintReleafProjectDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "forest_latitude": {
          "format": "float",
          "type": "number"
        },
        "forest_longitude": {
          "format": "float",
          "type": "number"
        },
        "content_logo": {
          "type": "string"
        },
        "content_masthead": {
          "type": "string"
        },
        "content_introduction": {
          "type": "string"
        },
        "content_body_html": {
          "type": "string"
        },
        "content_images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "project_page_link": {
          "type": "string"
        }
      }
    },
    "PrintReleafCertificateDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "account_id": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "pages": {
          "format": "int32",
          "type": "integer"
        },
        "trees": {
          "format": "float",
          "type": "number"
        },
        "project_id": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/PrintReleafProjectDto"
        },
        "url": {
          "type": "string"
        },
        "pdf_url": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[CustomerPrintReleafTransactionRequest]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerPrintReleafTransactionRequest"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerPrintReleafTransactionRequest": {
      "type": "object",
      "properties": {
        "IdDealer": {
          "format": "int32",
          "type": "integer"
        },
        "IdCustomer": {
          "format": "int32",
          "type": "integer"
        },
        "IdAccount": {
          "format": "int32",
          "type": "integer"
        },
        "Ip": {
          "type": "string"
        },
        "CreatedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "TransactionDate": {
          "format": "date-time",
          "type": "string"
        },
        "Trees": {
          "format": "float",
          "type": "number"
        },
        "Project": {
          "type": "string"
        },
        "ProjectName": {
          "type": "string"
        },
        "CertificateId": {
          "type": "string"
        },
        "TransactionId": {
          "type": "string"
        },
        "DeletedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "DeletedByIdAccount": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "PrintReleafNewTransactionRequest": {
      "required": [
        "PrintReleafProject",
        "Trees",
        "Date",
        "Id"
      ],
      "type": "object",
      "properties": {
        "PrintReleafProject": {
          "type": "string"
        },
        "Trees": {
          "format": "float",
          "maximum": 99999,
          "minimum": 1,
          "type": "number"
        },
        "Date": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetByCodePagedRequest": {
      "description": "Represents a request to retrieve an object by code",
      "required": [
        "Code",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[PrintReleafDeviceDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintReleafDeviceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PrintReleafDeviceDto": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "SystemName": {
          "type": "string"
        },
        "Brand": {
          "type": "string"
        },
        "Model": {
          "type": "string"
        },
        "ShowCustomField": {
          "type": "boolean"
        }
      }
    },
    "ManagePrintReleafPrintersRequest": {
      "description": "",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ManagePrintersFlag": {
          "description": "Gets or sets a value indicating whether [manage printers flag].",
          "type": "boolean"
        },
        "PrintersId": {
          "description": "Gets or sets the printers identifier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ManagePrintReleafProjectRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "Activate": {
          "description": "Gets or sets a value indicating whether this {MpsMonitor.Models.Contracts.PrintReleaf.ManagePrintReleafProjectRequest} is activate.",
          "type": "boolean"
        },
        "ProjectId": {
          "description": "Gets or sets the project identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerBaseDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerBaseDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetProductsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ProductDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[String]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetModelsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "DealerModelsFilteredPagedRequest": {
      "description": "DealerFilteredPaged Request",
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "The dealer code.",
          "type": "string"
        },
        "Brand": {
          "description": "The brand",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "ListModelsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Brand": {
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ProductDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetProjectsRequest": {
      "description": "Represents a request to retrieve a pagedlist of project",
      "required": [
        "CustomerId",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "IsDefaultProject": {
          "description": "Gets or sets the is default project.",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ProjectListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ProjectListDto": {
      "description": "Represent a device",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the project description.",
          "type": "string"
        },
        "Start": {
          "format": "date-time",
          "description": "Gets or sets the project start.",
          "type": "string"
        },
        "Finish": {
          "format": "date-time",
          "description": "Gets or sets the project finish.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ProjectFullDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ProjectFullDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ProjectFullDto": {
      "description": "Represents a project detail",
      "type": "object",
      "properties": {
        "ContractBaseCosts": {
          "$ref": "#/definitions/ContractBaseCostsDto",
          "description": "Gets or sets the ContractBaseCosts"
        },
        "CustomFieldValues": {
          "description": "Gets or sets the custom fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "Supplies": {
          "description": "Gets or sets the supplies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectVolumeDto"
          }
        },
        "PageCosts": {
          "description": "Gets or sets the project details.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PageCostsDto"
          }
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Start": {
          "format": "date-time",
          "description": "Gets or sets the start.",
          "type": "string"
        },
        "Finish": {
          "format": "date-time",
          "description": "Gets or sets the finish.",
          "type": "string"
        },
        "ContractFileName": {
          "description": "Contract file name",
          "type": "string"
        },
        "EnableMassiveShipping": {
          "description": "Gets or sets the enable massive shipping.",
          "type": "boolean"
        },
        "MassiveShippingSendNotification": {
          "description": "Gets or sets the enable massive shipping notification",
          "type": "boolean"
        },
        "MassiveShippingSendLogistic": {
          "description": "Gets or sets the enable massive shipping logistic notification",
          "type": "boolean"
        },
        "AlertInformationBox": {
          "description": "Gets or sets the alert information box.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ContractBaseCostsDto": {
      "type": "object",
      "properties": {
        "EnableMonthlyContract": {
          "description": "Gets or sets the EnableMonthlyContract",
          "type": "boolean"
        },
        "MonoVolume": {
          "format": "int32",
          "description": "Gets or sets the MonoVolume",
          "type": "integer"
        },
        "ColorVolume": {
          "format": "int32",
          "description": "Gets or sets the ColorVolume",
          "type": "integer"
        },
        "MonthlyCPPMono": {
          "format": "float",
          "description": "Gets or sets the MonthlyCPPMono",
          "type": "number"
        },
        "MonthlyCPPColor": {
          "format": "float",
          "description": "Gets or sets the MonthlyCPPColor",
          "type": "number"
        },
        "Charge": {
          "format": "float",
          "description": "Gets or sets the Charge",
          "type": "number"
        }
      }
    },
    "PageCostsDto": {
      "description": "Represents a project detail",
      "type": "object",
      "properties": {
        "Product": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the Product."
        },
        "MonthlyMonoVolume": {
          "format": "int32",
          "description": "Gets or sets the MonthlyMonoVolume.",
          "type": "integer"
        },
        "MonthlyColorVolume": {
          "format": "int32",
          "description": "Gets or sets the MonthlyColorVolume.",
          "type": "integer"
        },
        "MonthlyCharge": {
          "format": "float",
          "description": "Gets or sets the MonthlyCharge.",
          "type": "number"
        },
        "CPPMono": {
          "format": "float",
          "description": "Gets or sets the CPPMono.",
          "type": "number"
        },
        "CPPColor": {
          "format": "float",
          "description": "Gets or sets the CPPColor.",
          "type": "number"
        },
        "MinimumGuaranteed": {
          "description": "Gets or sets the MinimumGuaranteed.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DealerSupplyListDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplyListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateProjectRequest": {
      "description": "CreateProjectRequest",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Start": {
          "format": "date-time",
          "description": "Gets or sets the start.",
          "type": "string"
        },
        "Finish": {
          "format": "date-time",
          "description": "Gets or sets the finish.",
          "type": "string"
        },
        "EnableMassiveShipping": {
          "description": "Gets or sets the enable massive shipping.",
          "type": "boolean"
        },
        "MassiveShippingSendNotification": {
          "description": "Gets or sets the enable massive shipping notification",
          "type": "boolean"
        },
        "MassiveShippingSendLogistic": {
          "description": "Gets or sets the enable massive shipping logistic notification",
          "type": "boolean"
        },
        "AlertInformationBox": {
          "description": "Gets or sets the AlertInformationBox",
          "type": "string"
        },
        "Contract": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "Gets or sets the Contract"
        },
        "CustomFieldValues": {
          "description": "Sets the custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "EnableMonthlyContract": {
          "description": "Gets or sets a value indicating whether [enable monthly contract].",
          "type": "boolean"
        },
        "MonoVolume": {
          "format": "int32",
          "description": "Gets or sets the mono volume.",
          "type": "integer"
        },
        "ColorVolume": {
          "format": "int32",
          "description": "Gets or sets the color volume.",
          "type": "integer"
        },
        "Charge": {
          "format": "float",
          "description": "Gets or sets the charge.",
          "type": "number"
        },
        "MonthlyCPPMono": {
          "format": "float",
          "description": "Gets or sets the monthly CPP mono.",
          "type": "number"
        },
        "MonthlyCPPColor": {
          "format": "float",
          "description": "Gets or sets the color of the monthly CPP.",
          "type": "number"
        }
      }
    },
    "UpdateProjectRequest": {
      "description": "UpdateProjectRequest",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Start": {
          "format": "date-time",
          "description": "Gets or sets the start.",
          "type": "string"
        },
        "Finish": {
          "format": "date-time",
          "description": "Gets or sets the finish.",
          "type": "string"
        },
        "EnableMassiveShipping": {
          "description": "Gets or sets the enable massive shipping.",
          "type": "boolean"
        },
        "MassiveShippingSendNotification": {
          "description": "Gets or sets the enable massive shipping notification",
          "type": "boolean"
        },
        "MassiveShippingSendLogistic": {
          "description": "Gets or sets the enable massive shipping logistic notification",
          "type": "boolean"
        },
        "AlertInformationBox": {
          "description": "Gets or sets the AlertInformationBox",
          "type": "string"
        },
        "Contract": {
          "$ref": "#/definitions/FileInfoDto",
          "description": "Gets or sets the Contract"
        },
        "DeleteContractFile": {
          "description": "Gets or sets the DeleteContractFile",
          "type": "boolean"
        },
        "CustomFieldValues": {
          "description": "Sets the custom fields",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomFieldValueDto"
          }
        },
        "EnableMonthlyContract": {
          "description": "Gets or sets a value indicating whether [enable monthly contract].",
          "type": "boolean"
        },
        "MonoVolume": {
          "format": "int32",
          "description": "Gets or sets the mono volume.",
          "type": "integer"
        },
        "ColorVolume": {
          "format": "int32",
          "description": "Gets or sets the color volume.",
          "type": "integer"
        },
        "Charge": {
          "format": "float",
          "description": "Gets or sets the charge.",
          "type": "number"
        },
        "MonthlyCPPMono": {
          "format": "float",
          "description": "Gets or sets the monthly CPP mono.",
          "type": "number"
        },
        "MonthlyCPPColor": {
          "format": "float",
          "description": "Gets or sets the color of the monthly CPP.",
          "type": "number"
        }
      }
    },
    "SetAlertGeneratorRequest": {
      "description": "UpdateProjectRequest",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "AlertGenerator": {
          "description": "Gets or sets the alertGenerator",
          "type": "boolean"
        }
      }
    },
    "ManageDevicesAssociationRequest": {
      "description": "ManageDevicesAssociationRequest",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "Devices": {
          "description": "Gets or sets the devices to associate",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SaveProjectDetailRequest": {
      "type": "object",
      "properties": {
        "ProjectId": {
          "description": "Gets or sets the project identifier.",
          "type": "string"
        },
        "ProductId": {
          "description": "Gets or sets the product model identifier.",
          "type": "string"
        },
        "ProjectDetailId": {
          "description": "Gets or sets the project detail identifier.",
          "type": "string"
        },
        "MonthlyCharge": {
          "format": "float",
          "description": "Gets or sets the monthly charge.",
          "type": "number"
        },
        "CPPMono": {
          "format": "double",
          "description": "Gets or sets the CPP mono.",
          "type": "number"
        },
        "CPPColor": {
          "format": "double",
          "description": "Gets or sets the color of the CPP.",
          "type": "number"
        },
        "MonthlyMonoVolume": {
          "format": "int32",
          "description": "Gets or sets the monthly mono volume.",
          "type": "integer"
        },
        "MonthlyColorVolume": {
          "format": "int32",
          "description": "Gets or sets the monthly color volume.",
          "type": "integer"
        },
        "MinimumGuaranteed": {
          "description": "Gets or sets a value indicating whether [minimum guaranteed].",
          "type": "boolean"
        }
      }
    },
    "SaveProjectVolumeRequest": {
      "type": "object",
      "properties": {
        "ProjectId": {
          "description": "Gets or sets the project identifier.",
          "type": "string"
        },
        "SupplyId": {
          "description": "Gets or sets the supply identifier.",
          "type": "string"
        },
        "ProductId": {
          "description": "Gets or sets the product model identifier.",
          "type": "string"
        },
        "ProjectVolumeId": {
          "description": "Gets or sets the project volume identifier.",
          "type": "string"
        },
        "TotalQuantity": {
          "format": "double",
          "description": "Gets or sets the total quantity.",
          "type": "number"
        },
        "PriceBid": {
          "format": "float",
          "description": "Gets or sets the price bid.",
          "type": "number"
        },
        "PriceDealer": {
          "format": "float",
          "description": "Gets or sets the price dealer.",
          "type": "number"
        },
        "PriceRetailer": {
          "format": "float",
          "description": "Gets or sets the price retailer.",
          "type": "number"
        },
        "PriceCustomer": {
          "format": "float",
          "description": "Gets or sets the price customer.",
          "type": "number"
        },
        "BidNumber": {
          "description": "Gets or sets the bid number.",
          "type": "string"
        },
        "UniquePhotoconductor": {
          "description": "Gets or sets a value indicating whether [unique photoconductor].",
          "type": "boolean"
        },
        "ExpiryBid": {
          "format": "date-time",
          "description": "Gets or sets the expiry bid.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ProjectBillBooksDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ProjectBillBooksDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ProjectBillBooksDto": {
      "type": "object",
      "properties": {
        "BillBooks": {
          "description": "Gets or sets the bill books.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectBillBookDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ProjectBillBookDto": {
      "type": "object",
      "properties": {
        "BillBookIndex": {
          "format": "int32",
          "description": "Gets or sets the index of the bill book.",
          "type": "integer"
        },
        "EnableSubscription": {
          "description": "Gets or sets a value indicating whether [enable subscription].",
          "type": "boolean"
        },
        "FirstDate": {
          "format": "date-time",
          "description": "Gets or sets the first date.",
          "type": "string"
        },
        "Recurrence": {
          "description": "Gets or sets the recurrence.",
          "enum": [
            "Month",
            "Quarter",
            "HalfYear",
            "Yearly",
            "Months24",
            "Months36",
            "Months48"
          ],
          "type": "string"
        },
        "RecurrenceType": {
          "description": "Gets or sets the type of the recurrence.",
          "enum": [
            "LikeFirstDate",
            "LastMonthDay",
            "DayEqualTo"
          ],
          "type": "string"
        },
        "AlternateDay": {
          "format": "int32",
          "description": "Gets or sets the alternate day.",
          "type": "integer"
        }
      }
    },
    "PreviewBillBookRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ProjectBillBook": {
          "$ref": "#/definitions/ProjectBillBookDto"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DateTime]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "format": "date-time",
            "type": "string"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[ProjectBillBooksDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/ProjectBillBooksDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "ListResultResponse[ReportBaseDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportBaseDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ReportDashboardDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ReportDashboardDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ReportDashboardDto": {
      "description": "Represent the available Reports for a customer",
      "type": "object",
      "properties": {
        "Reports": {
          "description": "Available standard reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportBaseDto"
          }
        },
        "CustomReports": {
          "description": "Available custom reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportBaseDto"
          }
        },
        "SubscribedReports": {
          "description": "Reports that has an active subscription",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportBaseDto"
          }
        },
        "SavedReports": {
          "description": "Reports that has saved filter parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportBaseDto"
          }
        }
      }
    },
    "GetReportRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Sets the customer code.",
          "type": "string"
        },
        "ReportCode": {
          "description": "Set the report code.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ReportBaseDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ReportBaseDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ReportSchedulePreferencesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ReportSchedulePreferencesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ReportSchedulePreferencesDto": {
      "type": "object",
      "properties": {
        "To": {
          "type": "string"
        },
        "Cc": {
          "type": "string"
        },
        "Bcc": {
          "type": "string"
        },
        "RenderFormatPdf": {
          "type": "boolean"
        },
        "RenderFormatExcel": {
          "type": "boolean"
        },
        "Schedule": {
          "$ref": "#/definitions/ScheduleDto"
        },
        "IsNew": {
          "type": "boolean"
        },
        "ReportNumber": {
          "type": "string"
        },
        "IdCustomer": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "SaveReportSchedulePreferencesRequest": {
      "type": "object",
      "properties": {
        "ReportSchedulePreferences": {
          "$ref": "#/definitions/ReportSchedulePreferencesDto"
        },
        "Delete": {
          "type": "boolean"
        }
      }
    },
    "PagedResultResponse[RiBaDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiBaDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "RiBaDto": {
      "description": "RiBa",
      "type": "object",
      "properties": {
        "Issuer": {
          "$ref": "#/definitions/DealerBaseDto",
          "description": "Issuer"
        },
        "Mittente": {
          "description": "Issuer",
          "type": "string"
        },
        "ABIRicevente": {
          "description": "ABI Recipient",
          "type": "string"
        },
        "CABRicevente": {
          "description": "CAB Recipient",
          "type": "string"
        },
        "BancaRiceventeDescr": {
          "description": "Recipient Bank description",
          "type": "string"
        },
        "BancaRiceventeConto": {
          "description": "Recipient Bank account",
          "type": "string"
        },
        "NomeSupporto": {
          "description": "Name of the RiBa file",
          "type": "string"
        },
        "ContentBase64": {
          "format": "byte",
          "description": "Content file bytes",
          "type": "string"
        },
        "DataCreazione": {
          "format": "date-time",
          "description": "Creation date",
          "type": "string"
        },
        "TotImportiPositivi": {
          "format": "double",
          "description": "Positive amount",
          "type": "number"
        },
        "TotImportiNegativi": {
          "format": "double",
          "description": "Negative amount",
          "type": "number"
        },
        "DealerBankAccount": {
          "$ref": "#/definitions/DealerBankAccountDto",
          "description": "Dealer Bank Account"
        },
        "InvoiceHeaders": {
          "description": "All invoices related to this RiBa",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvoiceHeaderDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[RiBaDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/RiBaDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[RiBaDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RiBaDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[RiBaDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/RiBaDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "GetRolesRequest": {
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ShowOnlyRolesForCustomer": {
          "type": "boolean"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[RoleDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "RoleDto": {
      "description": "Role (Capability set) object",
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name of the role",
          "type": "string"
        },
        "Description": {
          "description": "Description of the role",
          "type": "string"
        },
        "Code": {
          "description": "Code of the role",
          "type": "string"
        },
        "Capabilities": {
          "description": "Capabilities associated to the role",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityDto"
          }
        },
        "DealerCode": {
          "description": "Dealer associated to that role",
          "type": "string"
        },
        "IsCustomRole": {
          "description": "True if it is a custom role",
          "type": "boolean"
        },
        "IsShared": {
          "description": "True if it is a shared role",
          "type": "boolean"
        },
        "IsSharedByCurrentDealer": {
          "description": "True if it is the role is shared by the requesting dealer",
          "type": "boolean"
        },
        "Force2fa": {
          "description": "Gets or sets a value indicating whether this {MpsMonitor.Models.RoleDto} must use 2fa.",
          "type": "boolean"
        },
        "ForceSso": {
          "description": "Gets or sets a value indicating whether [force sso].",
          "type": "boolean"
        },
        "MaxLoginFailedAttempts": {
          "format": "int32",
          "description": "Gets or sets the maximum login failed attempts.",
          "type": "integer"
        },
        "DisableAfterInactivesDays": {
          "format": "int32",
          "description": "Gets or sets the disable after inactives days.",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[RoleDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/RoleDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[RoleDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/RoleDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "CopyRoleRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "type": "string"
        },
        "CopyRoleName": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[RoleDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/RoleDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetAllCapabilitiesRequest": {
      "required": [
        "IsForAccount",
        "Code"
      ],
      "type": "object",
      "properties": {
        "IsForAccount": {
          "type": "boolean"
        },
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[CapabilityDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CapabilityDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetSagasRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "QueueProcessType": {
          "enum": [
            "Notification",
            "MeterReadings",
            "Delivery",
            "UpdateSupplies",
            "Billing",
            "UpdateDevices",
            "CheckRetry"
          ],
          "type": "string"
        },
        "NotificationType": {
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "Status": {
          "enum": [
            "Queued",
            "Progress",
            "Success",
            "Error",
            "Pending",
            "Warning",
            "Aborted",
            "Empty"
          ],
          "type": "string"
        },
        "IdDealer": {
          "type": "string"
        },
        "IdCustomer": {
          "type": "string"
        },
        "IdInstalledProduct": {
          "type": "string"
        },
        "IdSupplyAlert": {
          "type": "string"
        },
        "IdShippedSupply": {
          "type": "string"
        },
        "IdAccount": {
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SagaListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SagaListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SagaListDto": {
      "type": "object",
      "properties": {
        "QueueProcessType": {
          "enum": [
            "Notification",
            "MeterReadings",
            "Delivery",
            "UpdateSupplies",
            "Billing",
            "UpdateDevices",
            "CheckRetry"
          ],
          "type": "string"
        },
        "NotificationType": {
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "Status": {
          "enum": [
            "Queued",
            "Progress",
            "Success",
            "Error",
            "Pending",
            "Warning",
            "Aborted",
            "Empty"
          ],
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets the customer id.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "CreatedAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the created at UTC.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "DeviceSerialNumber": {
          "description": "Gets or sets the device serial number.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SagaDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SagaDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SagaDto": {
      "type": "object",
      "properties": {
        "SagaOperations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SagaOperationDto"
          }
        },
        "QueueProcessType": {
          "enum": [
            "Notification",
            "MeterReadings",
            "Delivery",
            "UpdateSupplies",
            "Billing",
            "UpdateDevices",
            "CheckRetry"
          ],
          "type": "string"
        },
        "NotificationType": {
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "Status": {
          "enum": [
            "Queued",
            "Progress",
            "Success",
            "Error",
            "Pending",
            "Warning",
            "Aborted",
            "Empty"
          ],
          "type": "string"
        },
        "Dealer": {
          "$ref": "#/definitions/DealerBaseDto"
        },
        "Customer": {
          "$ref": "#/definitions/CustomerBaseDto"
        },
        "Device": {
          "$ref": "#/definitions/InstalledProductBaseDto"
        },
        "SupplyAlert": {
          "$ref": "#/definitions/CodeDesc"
        },
        "ShippedSupply": {
          "$ref": "#/definitions/CodeDesc"
        },
        "Account": {
          "$ref": "#/definitions/CodeDesc"
        },
        "Gateways": {
          "type": "array",
          "items": {
            "enum": [
              "Email",
              "Callback",
              "CallbackXml",
              "Ftp",
              "Evatic",
              "EAutomate",
              "Jim2",
              "Europarts",
              "OneTrail",
              "Adv",
              "Advantis",
              "Also",
              "Esprinet",
              "Forza",
              "Nav",
              "PowerOffice",
              "Radix",
              "ToServ",
              "VantageOnline",
              "QuickBooks",
              "Xero",
              "DistributionManagement"
            ],
            "type": "string"
          }
        },
        "CreatedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "IdShippedSupply": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSagaOperationLogListRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "SagaOperationId": {
          "description": "Gets or sets the saga operation identifier.",
          "type": "string"
        },
        "Status": {
          "format": "int32",
          "description": "Gets or sets the status.",
          "type": "integer"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SagaOperationLogDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SagaOperationLogDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetSagaOperationsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "SagaId": {
          "type": "string"
        },
        "QueueProcessType": {
          "enum": [
            "Notification",
            "MeterReadings",
            "Delivery",
            "UpdateSupplies",
            "Billing",
            "UpdateDevices",
            "CheckRetry"
          ],
          "type": "string"
        },
        "NotificationType": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "enum": [
            "Queued",
            "Progress",
            "Success",
            "Error",
            "Warning",
            "OperationNotFound",
            "Empty"
          ],
          "type": "string"
        },
        "IdDealer": {
          "type": "string"
        },
        "IdCustomer": {
          "type": "string"
        },
        "IdInstalledProduct": {
          "type": "string"
        },
        "IdSupplyAlert": {
          "type": "string"
        },
        "IdShippedSupply": {
          "type": "string"
        },
        "IdAccount": {
          "type": "string"
        },
        "FromDate": {
          "format": "date-time",
          "type": "string"
        },
        "ToDate": {
          "format": "date-time",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SagaOperationListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SagaOperationListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SagaOperationListDto": {
      "type": "object",
      "properties": {
        "IdSaga": {
          "type": "string"
        },
        "QueueProcessType": {
          "enum": [
            "Notification",
            "MeterReadings",
            "Delivery",
            "UpdateSupplies",
            "Billing",
            "UpdateDevices",
            "CheckRetry"
          ],
          "type": "string"
        },
        "NotificationType": {
          "enum": [
            "HpSdsServiceRequest",
            "DealerDashboard",
            "Alert",
            "Delivery",
            "NewDevices",
            "ReplacedConsumables",
            "ReadingProblems",
            "InstallationProposal",
            "ReInstallationProposal",
            "ReadingProblemsExplorer",
            "PanelMessage",
            "Export",
            "PostAlert",
            "TraceVolume",
            "ReadingProblemsCustomerTemplate",
            "ReadingProblemsExplorerCustomerTemplate",
            "PrintReleafActivationCustomerTemplate"
          ],
          "type": "string"
        },
        "SagaStatus": {
          "enum": [
            "Queued",
            "Progress",
            "Success",
            "Error",
            "Pending",
            "Warning",
            "Aborted",
            "Empty"
          ],
          "type": "string"
        },
        "IdDealer": {
          "format": "int32",
          "type": "integer"
        },
        "IdCustomer": {
          "format": "int32",
          "type": "integer"
        },
        "SagaCreatedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "IdSagaOperation": {
          "format": "int32",
          "type": "integer"
        },
        "SagaOperationStatus": {
          "enum": [
            "Queued",
            "Progress",
            "Success",
            "Error",
            "Warning",
            "OperationNotFound",
            "Empty"
          ],
          "type": "string"
        },
        "SagaOperationLastUpdateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "SagaOperationMessage": {
          "type": "string"
        },
        "NumberOfLogs": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSalesActivitiesRequest": {
      "description": "Represents a request to retrieve a pagedlist of sales activities",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ExcludedIds": {
          "description": "Gets or sets the excluded ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ParentActivityId": {
          "description": "Gets or sets the parent activity identifier.",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "CreatedFrom": {
          "format": "date-time",
          "description": "Gets or sets the created from.",
          "type": "string"
        },
        "CreatedTo": {
          "format": "date-time",
          "description": "Gets or sets the created to.",
          "type": "string"
        },
        "Creator": {
          "description": "Gets or sets the creator.",
          "type": "string"
        },
        "NextStepAccountId": {
          "description": "Gets or sets the next step account identifier.",
          "type": "string"
        },
        "HasChildren": {
          "description": "Gets or sets the has children.",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SalesActivityDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SalesActivityDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SalesActivityDto": {
      "type": "object",
      "properties": {
        "CreatorId": {
          "type": "string"
        },
        "CreatorName": {
          "type": "string"
        },
        "CreationUtc": {
          "format": "date-time",
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "DemoContactId": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "PlainDescription": {
          "type": "string",
          "readOnly": true
        },
        "Channel": {
          "enum": [
            "Meeting",
            "Phone"
          ],
          "type": "string"
        },
        "Topics": {
          "type": "array",
          "items": {
            "enum": [
              "MpsMonitor",
              "ZeroZeroToner",
              "PrintReleaf"
            ],
            "type": "string"
          }
        },
        "NominativeType": {
          "enum": [
            "Business",
            "Technical",
            "Other"
          ],
          "type": "string"
        },
        "Nominative": {
          "type": "string"
        },
        "NominativeGsm": {
          "type": "string"
        },
        "NominativeEmail": {
          "type": "string"
        },
        "File1": {
          "type": "string"
        },
        "File2": {
          "type": "string"
        },
        "File3": {
          "type": "string"
        },
        "Attachment1": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "Attachment2": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "Attachment3": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "NextStepDescription": {
          "type": "string"
        },
        "PlainNextStepDescription": {
          "type": "string",
          "readOnly": true
        },
        "NextStepDeadlineUtc": {
          "format": "date-time",
          "type": "string"
        },
        "NextStepAccountId": {
          "type": "string"
        },
        "NextStepAccountName": {
          "type": "string"
        },
        "ParentSalesActivityId": {
          "type": "string"
        },
        "ChildrenSalesActivitiesCount": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SalesActivityDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SalesActivityDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[SalesActivityDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/SalesActivityDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "GetAttachmentRequest": {
      "description": "Represents a request to retrieve an attachment by IdEntity and IdFile",
      "required": [
        "IdEntity",
        "IdFile"
      ],
      "type": "object",
      "properties": {
        "IdEntity": {
          "description": "Gets or sets the identifier entity.",
          "type": "string"
        },
        "IdFile": {
          "format": "int32",
          "description": "Gets or sets the identifier file.",
          "type": "integer"
        }
      }
    },
    "GetDeviceActionsRequest": {
      "description": "GetDeviceActions Request",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "State": {
          "description": "Gets or sets the state.",
          "enum": [
            "Open",
            "Postponed",
            "ClosedCleared",
            "ClosedIgnored",
            "ClosedFixedAsDesigned",
            "ClosedIncorrectAction",
            "ClosedCanceled",
            "Closed"
          ],
          "type": "string"
        },
        "IsOpen": {
          "description": "Gets or sets the is open.",
          "type": "boolean"
        },
        "Severity": {
          "description": "Gets or sets the severity.",
          "enum": [
            "High",
            "Medium",
            "Low"
          ],
          "type": "string"
        },
        "IsPredictive": {
          "description": "Gets or sets the is predictive.",
          "type": "boolean"
        },
        "ActionType": {
          "description": "Gets or sets the type of the action.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SdsDeviceActionDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceActionDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetDeviceActionsDashboardRequest": {
      "description": "GetDeviceActionsDashboard Request",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "Group": {
          "description": "Gets or sets the group.",
          "enum": [
            "Code",
            "State",
            "Severity",
            "ActionType"
          ],
          "type": "string"
        },
        "State": {
          "description": "Gets or sets the state.",
          "enum": [
            "Open",
            "Postponed",
            "ClosedCleared",
            "ClosedIgnored",
            "ClosedFixedAsDesigned",
            "ClosedIncorrectAction",
            "ClosedCanceled",
            "Closed"
          ],
          "type": "string"
        },
        "IsOpen": {
          "description": "Gets or sets the is open.",
          "type": "boolean"
        },
        "Severity": {
          "description": "Gets or sets the severity.",
          "enum": [
            "High",
            "Medium",
            "Low"
          ],
          "type": "string"
        },
        "ActionType": {
          "description": "Gets or sets the type of the action.",
          "type": "string"
        },
        "IsPredictive": {
          "description": "Gets or sets the is predictive.",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[DashboardItemDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardItemDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "DashboardItemDto": {
      "description": "The Dashboard Item",
      "type": "object",
      "properties": {
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Total": {
          "format": "int32",
          "description": "Gets or sets the total.",
          "type": "integer"
        },
        "Color": {
          "description": "Gets the color.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SingleResultResponse[SdsDeviceActionDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SdsDeviceActionDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ChangeDeviceActionStatusRequest": {
      "description": "",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ActionJamId": {
          "description": "Gets or sets the action jam id identifier.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device id identifier.",
          "type": "string"
        },
        "State": {
          "description": "Gets or sets the state.",
          "enum": [
            "Open",
            "Postponed",
            "ClosedCleared",
            "ClosedIgnored",
            "ClosedFixedAsDesigned",
            "ClosedIncorrectAction",
            "ClosedCanceled",
            "Closed"
          ],
          "type": "string"
        },
        "Comments": {
          "description": "Gets or sets the comments.",
          "type": "string"
        },
        "TriageAction": {
          "description": "Gets or sets the triage action.",
          "type": "string"
        },
        "Parts": {
          "description": "Gets or sets the parts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetConnectorsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "Customerfilter": {
          "type": "string"
        },
        "IncludeNotRegistered": {
          "type": "boolean"
        },
        "SeverityFilter": {
          "enum": [
            "All",
            "OnlyWarning",
            "OnlyUrgent",
            "NonCommunicatingDevices",
            "NonGenuineHPDevices",
            "EarlyReplacementDevices",
            "NonCommunicatingConnectors",
            "CommonActionsToComplete",
            "PredictiveActionsToComplete"
          ],
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ExplorerDataSdsDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataSdsDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ExplorerDataSdsDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "ExplorerDataId": {
          "type": "string"
        },
        "ExplorerDataLastPing": {
          "format": "date-time",
          "type": "string"
        },
        "ExplorerDataBuildNumber": {
          "type": "string"
        },
        "ExplorerDataSystemName": {
          "type": "string"
        },
        "ExplorerDataIdentifier": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "Unknown",
            "OK",
            "NoRecentCommunication",
            "NeedsAttention",
            "WrongRegistration",
            "ConnectionNotAvailable",
            "NotRegistered",
            "Registered",
            "InvalidRegistrationKey",
            "ConnectorAlreadyRegistered",
            "InvalidApiKey",
            "JamcNotAvailable",
            "Initializing",
            "Registering",
            "CommunicationError",
            "ServiceNotStarted",
            "InvalidCertificate",
            "CannotFetchCertificateRevocationList",
            "JamcDiagnosticErrorNoInternet",
            "ConnectorRegisteredInAnotherCustomer"
          ],
          "type": "string"
        },
        "ConnectorId": {
          "type": "string"
        },
        "InstalledComputer": {
          "type": "string"
        },
        "RegistrationKey": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "LastContactTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastScanTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastUploadUtc": {
          "format": "date-time",
          "type": "string"
        },
        "WebProxyAddress": {
          "type": "string"
        },
        "WebProxyPort": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerJamEnabled": {
          "type": "boolean"
        },
        "DealerJamEnabled": {
          "type": "boolean"
        },
        "HasErrors": {
          "type": "boolean"
        },
        "HasWarnings": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetJamcConnectorsRequest": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[JamcConnectorDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JamcConnectorDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "JamcConnectorDto": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string"
        },
        "ConnectorId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "format": "int32",
          "type": "integer"
        },
        "InstalledComputer": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "LastContactTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "WebProxyAddress": {
          "type": "string"
        },
        "WebProxyPort": {
          "format": "int32",
          "type": "integer"
        },
        "IPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Version": {
          "type": "string"
        },
        "CommunicationGroup": {
          "type": "string"
        }
      }
    },
    "GetWppConnectorsRequest": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[WppConnectorDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WppConnectorDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "WppConnectorDto": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string"
        },
        "ConnectorId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "format": "int32",
          "type": "integer"
        },
        "InstalledComputer": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "LastContactTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "WebProxyAddress": {
          "type": "string"
        },
        "WebProxyPort": {
          "format": "int32",
          "type": "integer"
        },
        "IPAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Version": {
          "type": "string"
        },
        "CommunicationGroup": {
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ExplorerDataSdsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ExplorerDataSdsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AssociateSdsConnectorRequest": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "ConnectorId": {
          "type": "string"
        },
        "JamConnectorId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetLogsRequest": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "ConnectorId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListResultResponse[ExplorerDataSdsLogDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplorerDataSdsLogDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ExplorerDataSdsLogDto": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "Result": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "Details": {
          "type": "string"
        },
        "IsPending": {
          "type": "boolean",
          "readOnly": true
        },
        "IsSuccess": {
          "type": "boolean",
          "readOnly": true
        },
        "IsError": {
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "RetrieveLogRequest": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "ConnectorId": {
          "format": "int32",
          "type": "integer"
        },
        "RetrieveLogDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "DownloadLogRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "ConnectorId": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "DownloadAttachmentResult": {
      "description": "",
      "type": "object",
      "properties": {}
    },
    "DeleteLogRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "ConnectorId": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateSdsCustomerRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "EnableRemoteEws": {
          "type": "boolean"
        },
        "CSRFProtection": {
          "type": "boolean"
        },
        "EnableDeviceAnnouncement": {
          "type": "boolean"
        },
        "AssessAndRemediateEnabled": {
          "type": "boolean"
        },
        "IdAssessPolicies": {
          "type": "string"
        },
        "AssessAndRemediate": {
          "type": "boolean"
        },
        "PrintQualityOperationsDays": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SdsCredentialDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SdsCredentialDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SetJamCredentialRequest": {
      "type": "object",
      "properties": {
        "Ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CredentialType": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "AuthenticationProtocol": {
          "type": "string"
        },
        "AuthenticationPassword": {
          "type": "string"
        },
        "PrivacyProtocol": {
          "type": "string"
        },
        "PrivacyPassword": {
          "type": "string"
        },
        "UserName": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "DeleteSdsCredentialRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CredentialType": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomerOperationsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "OperationType": {
          "enum": [
            "All",
            "ShowWppOnly",
            "ShowNonWppOnly"
          ],
          "type": "string"
        },
        "OperationStatus": {
          "enum": [
            "All",
            "OnlySuccess",
            "OnlyPending",
            "OnlyErrors"
          ],
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerSdsOperationDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerSdsOperationDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerSdsOperationDto": {
      "type": "object",
      "properties": {
        "OperationId": {
          "format": "int32",
          "description": "Gets or sets the operation identifier.",
          "type": "integer"
        },
        "CreatedTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the created time UTC.",
          "type": "string"
        },
        "LastUpdatedTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the last updated time UTC.",
          "type": "string"
        },
        "Operation": {
          "description": "Gets or sets the operation.",
          "enum": [
            "AdminCredentials",
            "SnmpV1V2ReadCredentials",
            "SnmpV1V2ReadWriteCredentials",
            "SnmpV3Credentials",
            "PostWppDevices"
          ],
          "type": "string"
        },
        "UserAccountId": {
          "format": "int32",
          "description": "Gets or sets the user account identifier.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "Details": {
          "description": "Gets or sets the details.",
          "type": "string"
        },
        "IsPending": {
          "description": "Gets or sets a value indicating whether this instance is pending.",
          "type": "boolean"
        },
        "IsSuccess": {
          "description": "Gets or sets a value indicating whether this instance is success.",
          "type": "boolean"
        },
        "IsError": {
          "description": "Gets or sets a value indicating whether this instance is error.",
          "type": "boolean"
        },
        "IsCredentialsOperation": {
          "description": "Gets or sets a value indicating whether this instance is credentials operation.",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetCustomerOperationRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "OperationType": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerSdsOperationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerSdsOperationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UploadVJamcDevicesRequest": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Attachment": {
          "$ref": "#/definitions/FileInfoDto"
        }
      }
    },
    "PagedResultResponse[SdsCustomerAssessTemplateDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsCustomerAssessTemplateDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsCustomerAssessTemplateDto": {
      "type": "object",
      "properties": {
        "CreatedAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "Values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsAssessDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SdsAssessDto": {
      "type": "object",
      "properties": {
        "Label": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "ValueType": {
          "type": "string"
        },
        "ControlType": {
          "type": "string"
        },
        "Constraints": {
          "$ref": "#/definitions/SdsAssessConstraintsDto"
        },
        "IsEssentialSecurityPolicy": {
          "type": "boolean"
        },
        "SettingGroup": {
          "type": "string"
        },
        "SettingSubGroup": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        },
        "ExcludeFromApiCall": {
          "type": "boolean"
        },
        "LocalizedNotes": {
          "type": "string"
        }
      }
    },
    "SdsAssessConstraintsDto": {
      "type": "object",
      "properties": {
        "PossibleValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Range": {
          "$ref": "#/definitions/SdsAssessRangeDto"
        }
      }
    },
    "SdsAssessRangeDto": {
      "type": "object",
      "properties": {
        "Min": {
          "format": "int32",
          "type": "integer"
        },
        "Max": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "ListResultResponse[SdsAssessDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsAssessDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SdsCustomerAssessTemplateDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SdsCustomerAssessTemplateDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[SdsCustomerAssessTemplateDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/SdsCustomerAssessTemplateDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[SdsCustomerAssessTemplateDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/SdsCustomerAssessTemplateDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SingleResultResponse[SdsDealerInfoDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SdsDealerInfoDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsDealerInfoDto": {
      "type": "object",
      "properties": {
        "Stacks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDealerStackDto"
          }
        }
      }
    },
    "SdsDealerStackDto": {
      "type": "object",
      "properties": {
        "Stack": {
          "enum": [
            "US",
            "EU",
            "STG"
          ],
          "type": "string"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "IsDefault": {
          "type": "boolean"
        },
        "JamProviderId": {
          "format": "int32",
          "type": "integer"
        },
        "JamTenantId": {
          "format": "int32",
          "type": "integer"
        },
        "EventingSubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "ActionEventingSubscriptionId": {
          "type": "string"
        },
        "HppUsername": {
          "type": "string"
        },
        "HppUserId": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ActivateSdsRequest": {
      "required": [
        "DealerCode"
      ],
      "type": "object",
      "properties": {
        "Stack": {
          "enum": [
            "US",
            "EU",
            "STG"
          ],
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        }
      }
    },
    "CreateHppUserRequest": {
      "required": [
        "DealerCode",
        "Id"
      ],
      "type": "object",
      "properties": {
        "Username": {
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[SdsActionEventingSubscriptionDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsActionEventingSubscriptionDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsActionEventingSubscriptionDto": {
      "type": "object",
      "properties": {
        "SubscriptionId": {
          "type": "string"
        },
        "CallbackUri": {
          "type": "string"
        },
        "EventCategory": {
          "type": "string"
        },
        "EventSubcategory": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ListResultResponse[SdsEventSubscriptionDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsEventSubscriptionDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsEventSubscriptionDto": {
      "type": "object",
      "properties": {
        "SubscriptionId": {
          "format": "int32",
          "type": "integer"
        },
        "CallbackUri": {
          "type": "string"
        },
        "EventCategory": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "UpdateDateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SdsOnDeviceServicesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SdsOnDeviceServicesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsOnDeviceServicesDto": {
      "type": "object",
      "properties": {
        "OnDeviceServicesEnabled": {
          "type": "boolean"
        },
        "CanBeEnabled": {
          "type": "boolean"
        },
        "Icon": {
          "$ref": "#/definitions/IconDto"
        },
        "Title": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TitleDto"
          }
        },
        "OnDeviceServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OnDeviceServiceDto"
          }
        }
      }
    },
    "IconDto": {
      "type": "object",
      "properties": {
        "UseDefaultIcon": {
          "type": "boolean"
        },
        "MimeType": {
          "type": "string"
        },
        "Base64Representation": {
          "type": "string"
        }
      }
    },
    "TitleDto": {
      "type": "object",
      "properties": {
        "Locale": {
          "type": "string"
        },
        "Text": {
          "type": "string"
        }
      }
    },
    "OnDeviceServiceDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "CanBeEnabled": {
          "type": "boolean"
        },
        "IsEnabled": {
          "type": "boolean"
        },
        "Icon": {
          "$ref": "#/definitions/IconDto"
        },
        "Title": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TitleDto"
          }
        }
      }
    },
    "SetSdsOnDeviceServicesRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "SdsOnDeviceServiceOperation": {
          "description": "On Device Service operation type",
          "enum": [
            "InstallReportAProblemApp",
            "UninstallReportAProblemApp",
            "InstallPrinterQualityApp",
            "UninstallPrinterQuality"
          ],
          "type": "string"
        },
        "DeviceIds": {
          "description": "List of device id where to execute Sds On Device Service operation",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetDeviceOperationRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "OperationType": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SdsDeviceOperationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SdsDeviceOperationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetDeviceOperationsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SdsDeviceOperationDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceOperationDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SetDeviceRebootRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "OperationRebootAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SetDevicesRebootRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "OperationRebootAtUtc": {
          "format": "date-time",
          "description": "Defines the date when reboot the devices specified",
          "type": "string"
        },
        "DeviceIds": {
          "description": "List of device id",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetDevicePrintQualityDiagnosticsAuditLogsRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "DateFrom": {
          "format": "date-time",
          "type": "string"
        },
        "LogId": {
          "type": "string"
        }
      }
    },
    "ListResultResponse[PrintQualityDiagnosticsAuditLogDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrintQualityDiagnosticsAuditLogDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PrintQualityDiagnosticsAuditLogDto": {
      "type": "object",
      "properties": {
        "Result": {
          "type": "string"
        },
        "FailureReasonId": {
          "$ref": "#/definitions/Object"
        },
        "FailureReasonWhy": {
          "$ref": "#/definitions/Object"
        },
        "ConnectorResultDetails": {
          "$ref": "#/definitions/ConnectorResultDetailsDto"
        },
        "LogId": {
          "type": "string"
        },
        "DiagnosticType": {
          "type": "string"
        },
        "RequestedPagesToPrint": {
          "format": "int32",
          "type": "integer"
        },
        "InvocationTime": {
          "format": "date-time",
          "type": "string"
        },
        "LastOperationAction": {
          "type": "string"
        },
        "LastUpdatedTime": {
          "format": "date-time",
          "type": "string"
        },
        "DiagnosticImageArchiveUrl": {
          "type": "string"
        },
        "Actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Object"
          }
        }
      }
    },
    "ConnectorResultDetailsDto": {
      "type": "object",
      "properties": {
        "OperationControlPanelMessages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuditLogOperationControlPanelMessageDto"
          }
        },
        "Metrics": {
          "$ref": "#/definitions/AuditLogMetricsDto"
        },
        "DeviceAPIFailureDetails": {
          "$ref": "#/definitions/Object"
        }
      }
    },
    "AuditLogOperationControlPanelMessageDto": {
      "type": "object",
      "properties": {
        "TimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "Operation": {
          "type": "string"
        },
        "DeviceControlPanelMessage": {
          "type": "string"
        }
      }
    },
    "AuditLogMetricsDto": {
      "type": "object",
      "properties": {
        "ConnectorType": {
          "type": "string"
        },
        "ClientInstanceId": {
          "type": "string"
        },
        "ElapsedTimeToDownloadImageArchiveMs": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "GetPrintQualityDiagnosticsImageArchiveRequest": {
      "required": [
        "DeviceId",
        "Id"
      ],
      "type": "object",
      "properties": {
        "InvocationTime": {
          "format": "date-time",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SetDeviceUpdateFirmwareRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "FwVersion": {
          "type": "string"
        },
        "OperationFirmwareUpdateAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSupplyDetailsRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "SupplyType": {
          "description": "Gets or sets the type of the supply.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SupplyDetailsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SupplyDetailsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SupplyDetailsDto": {
      "type": "object",
      "properties": {
        "CurrentSupply": {
          "$ref": "#/definitions/InstalledProductJamSupplyDto",
          "description": "Gets or sets the current supply."
        },
        "Supplies": {
          "description": "Gets or sets the supplies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InstalledProductJamSupplyDto"
          }
        }
      }
    },
    "InstalledProductJamSupplyDto": {
      "type": "object",
      "properties": {
        "Consumable": {
          "description": "Gets or sets the consumable.",
          "type": "string"
        },
        "Occurrence": {
          "description": "Gets or sets the occurrence.",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "type": "string"
        },
        "ModelNumber": {
          "description": "Gets or sets the model number.",
          "type": "string"
        },
        "LastCollectionTimeUtc": {
          "format": "date-time",
          "description": "Gets or sets the last collection time UTC.",
          "type": "string"
        },
        "LevelValuePercent": {
          "format": "int32",
          "description": "Gets or sets the level value percent.",
          "type": "integer"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "ManufactureDateUtc": {
          "format": "date-time",
          "description": "Gets or sets the manufacture date UTC.",
          "type": "string"
        },
        "InstallDateUtc": {
          "format": "date-time",
          "description": "Gets or sets the install date UTC.",
          "type": "string"
        },
        "OcvStatus": {
          "description": "Gets or sets the ocv status.",
          "type": "string"
        },
        "ReplacementDateUtc": {
          "format": "date-time",
          "description": "Gets or sets the replacement date UTC.",
          "type": "string"
        },
        "ChangedTooEarly": {
          "description": "Gets or sets a value indicating whether [changed too early].",
          "type": "boolean"
        },
        "ChangedTooEarlyHiddentAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the changed too early hiddent at UTC.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "HideSupplyDetailRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "SupplyId": {
          "description": "Gets or sets the supply identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SdsConfigItemsDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SdsConfigItemsDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsConfigItemsDto": {
      "description": "ConfigItems",
      "type": "object",
      "properties": {
        "HasPendingConfigItemsOperation": {
          "description": "Gets or sets a value indicating whether this instance has pending configuration items operation.",
          "type": "boolean"
        },
        "ConfigItems": {
          "description": "Gets or sets the configuration item entry dto.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsConfigItemDto"
          }
        }
      }
    },
    "SingleResultResponse[ZendeskTicketInfoDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ZendeskTicketInfoDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ZendeskTicketInfoDto": {
      "type": "object",
      "properties": {
        "Stack": {
          "type": "string"
        },
        "CustomerId": {
          "format": "int32",
          "type": "integer"
        },
        "DeviceId": {
          "format": "int32",
          "type": "integer"
        },
        "PrinterModel": {
          "type": "string"
        },
        "JamcVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CredentialsSet": {
          "type": "string"
        }
      }
    },
    "RetrieveDeviceDataRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "DeviceConfigItems": {
          "description": "Gets or sets the device configuration items.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SetDeviceConfigDataRequest": {
      "type": "object",
      "properties": {
        "Ids": {
          "description": "Gets or sets the identifier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DeviceConfigItems": {
          "description": "Gets or sets the device configuration items.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Object"
          }
        }
      }
    },
    "SdsSendPanelMessageRequest": {
      "description": "SdsSendPanelMessageRequest object",
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "ServiceCalledMessagingEnabled": {
          "description": "If TRUE send the message, if FALSE remove the message from the printer panel",
          "type": "boolean"
        },
        "ServiceInvocationNotificationMessage": {
          "description": "The title of the panel message",
          "type": "string"
        },
        "ServiceInvocationNotificationDescription": {
          "description": "The text of the panel message",
          "type": "string"
        },
        "Locale": {
          "description": "Set the Locale of the message (should be one of en-US,fr-FR,de-DE,it-IT,es-ES,sv-SE,da-DK,nn-NO,nl-NL,fi-FI,pt-PT,tr-TR,pl-PL,ru-RU,cs-CZ,hu-HU,ja-JP,zh-TW,zh-CN,ko-KR,el-GR,hr-HR,ro-RO,sk-SK,ca-ES,th-TH,id-ID)",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CheckDeviceOperationRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "OperationId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListResultResponse[SdsNestedConfigItemDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsNestedConfigItemDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsNestedConfigItemDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "Children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsNestedConfigItemDto"
          }
        },
        "CreatedAtUtc": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetDevicesWithFirmwareOutOfDateRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FilterCustomerText": {
          "description": "Gets or sets the filter customer text.",
          "type": "string"
        },
        "Model": {
          "description": "Gets or sets the product model.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "OfficeCode": {
          "description": "Gets or sets the office code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SdsDeviceFirmwareOutOfDateDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceFirmwareOutOfDateDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsDeviceFirmwareOutOfDateDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the brand",
          "type": "string"
        },
        "Model": {
          "description": "Gets or sets the model",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ipaddress",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the department",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the Contact",
          "type": "string"
        },
        "FirmwareVersion": {
          "description": "Gets or sets the firmware version.",
          "type": "string"
        },
        "FirmwareDateCodeUtc": {
          "format": "date-time",
          "description": "Gets or sets the firmware date code UTC.",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "description": "Gets or sets the LastUpdate.",
          "type": "string"
        },
        "OperationFirmwareUpdateAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the OperationFirmwareUpdateAtUtc.",
          "type": "string"
        },
        "OperationFirmwareUpdateVersion": {
          "description": "Gets or sets the OperationFirmwareUpdateVersion.",
          "type": "string"
        },
        "HasGenuineHpCartridges": {
          "description": "Gets or sets the HasGenuineHpCartridges",
          "type": "boolean"
        },
        "FirmwareImageInfos": {
          "description": "Gets or sets the FirmwareImageInfo.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceFirmwareImageInfoDto"
          }
        },
        "FirmawareVersionUpgradeAvailable": {
          "description": "Gets or sets the firmaware version upgrade available.",
          "type": "string"
        },
        "LastFirmwareUpgradeOperationResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastFirmwareUpgradeOperationCreatedTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastFirmwareUpgradeOperationResultPending": {
          "type": "boolean"
        },
        "LastFirmwareUpgradeOperationResultIsSuccess": {
          "type": "boolean"
        },
        "LastFirmwareUpgradeOperationResultIsError": {
          "type": "boolean"
        },
        "OfficeCode": {
          "type": "string"
        },
        "OfficeDescription": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDevicesSdsMessageSuppressionRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ProductModel": {
          "description": "Gets or sets the product model.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterCustomerCode": {
          "description": "Filter by a string contained in CustomerCode",
          "type": "string"
        },
        "FilterDealerCode": {
          "description": "Gets or sets the filter dealer code.",
          "type": "string"
        },
        "CartridgeLifeValue": {
          "type": "string"
        },
        "LongLifeConsumablesLifeValue": {
          "type": "string"
        },
        "OfficeCode": {
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SdsMessageSuppressionDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsMessageSuppressionDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsMessageSuppressionDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "SystemName": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "IpAddress": {
          "type": "string"
        },
        "LastSetDeviceConfigOperationId": {
          "type": "string"
        },
        "LastSetDeviceConfigResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastSetDeviceConfigCreatedTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "ExternalIdentifier": {
          "type": "string"
        },
        "ProductBrand": {
          "type": "string"
        },
        "ProductModel": {
          "type": "string"
        },
        "CanSetConfigItem": {
          "type": "boolean"
        },
        "LastSetDeviceConfigResultPending": {
          "type": "boolean"
        },
        "LastSetDeviceConfigIsSuccess": {
          "type": "boolean"
        },
        "LastSetDeviceConfigIsError": {
          "type": "boolean"
        },
        "Product": {
          "$ref": "#/definitions/ProductDto"
        },
        "OperationCartridgeLifeValue": {
          "type": "string"
        },
        "OperationLongLifeConsumablesLifeValue": {
          "type": "string"
        },
        "CartridgeLowMessageStrategy": {
          "description": "Cartridge Low message strategy setting",
          "type": "string"
        },
        "LongLifeConsumablesLowMessageStrategy": {
          "description": "Long Life Consumables Low Message Strategy strategy setting",
          "type": "string"
        },
        "OfficeCode": {
          "type": "string"
        },
        "OfficeDescription": {
          "type": "string"
        },
        "SetCartridgeLifeSupported": {
          "type": "boolean"
        },
        "SetLongLifeConsumablesLifeSupported": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDevicesSdsRapaRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ProductModel": {
          "description": "Gets or sets the product model.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterCustomerCode": {
          "description": "Filter by a string contained in CustomerCode",
          "type": "string"
        },
        "FilterDealerCode": {
          "description": "Gets or sets the filter dealer code.",
          "type": "string"
        },
        "HasRapaInstalled": {
          "type": "boolean"
        },
        "OfficeCode": {
          "description": "Gets or sets the office code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SdsRapaDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsRapaDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsRapaDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "SystemName": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "IpAddress": {
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "Install": {
          "format": "date-time",
          "type": "string"
        },
        "ExternalIdentifier": {
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductDto"
        },
        "ProductSupplyDeviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "LastRapaOperationResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastRapaOperationCreatedTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastRapaOperationResultPending": {
          "type": "boolean"
        },
        "LastRapaOperationResultIsSuccess": {
          "type": "boolean"
        },
        "LastRapaOperationResultIsError": {
          "type": "boolean"
        },
        "OfficeCode": {
          "type": "string"
        },
        "OfficeDescription": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDevicesSdsCredentialsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ProductModel": {
          "description": "Gets or sets the product model.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterDealerCode": {
          "description": "Gets or sets the filter dealer code.",
          "type": "string"
        },
        "FilterCustomerCode": {
          "description": "Filter by a string contained in CustomerCode or CustomerDescription",
          "type": "string"
        },
        "OfficeId": {
          "type": "string"
        },
        "ProjectId": {
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SdsCredentialsDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsCredentialsDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsCredentialsDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "SystemName": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "MacAddress": {
          "type": "string"
        },
        "IpAddress": {
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "Install": {
          "format": "date-time",
          "type": "string"
        },
        "ExternalIdentifier": {
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductDto"
        },
        "ProductSupplyDeviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "LastSetCredentialsOperationResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastSetCredentialsOperationCreatedTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "IsPending": {
          "type": "boolean"
        },
        "IsSuccess": {
          "type": "boolean"
        },
        "IsError": {
          "type": "boolean"
        },
        "ProjectId": {
          "format": "int32",
          "type": "integer"
        },
        "ProjectDescription": {
          "type": "string"
        },
        "OfficeId": {
          "format": "int32",
          "type": "integer"
        },
        "OfficeCode": {
          "type": "string"
        },
        "OfficeDescription": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetDevicesRebootRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ProductModel": {
          "description": "Gets or sets the product model.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterDealerCode": {
          "description": "Gets or sets the filter dealer code.",
          "type": "string"
        },
        "FilterCustomerCode": {
          "description": "Filter by a string contained in CustomerCode or CustomerDescription",
          "type": "string"
        },
        "OfficeCode": {
          "description": "Gets or sets the office code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SdsRebootDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsRebootDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsRebootDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "SystemName": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "IpAddress": {
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "Install": {
          "format": "date-time",
          "type": "string"
        },
        "ExternalIdentifier": {
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductDto"
        },
        "ProductSupplyDeviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "LastRebootOperationResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastRebootOperationPending": {
          "type": "boolean"
        },
        "OperationRebootAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "OfficeCode": {
          "type": "string"
        },
        "OfficeDescription": {
          "type": "string"
        },
        "LastRebootOperationCreatedTimeUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastRebootOperationIsSuccess": {
          "type": "boolean"
        },
        "LastRebootOperationIsError": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SdsAssessAndRemediateDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsAssessAndRemediateDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsAssessAndRemediateDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "SerialNumber": {
          "type": "string"
        },
        "AssetNumber": {
          "type": "string"
        },
        "IpAddress": {
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "Install": {
          "format": "date-time",
          "type": "string"
        },
        "ExternalIdentifier": {
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductDto"
        },
        "ProductSupplyDeviceTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "LastAssessRemediateOperationId": {
          "type": "string"
        },
        "LastAssessRemediateOperationResult": {
          "enum": [
            "Error",
            "Queued",
            "AbortedByMps",
            "Unknown",
            "Pending",
            "InProgress",
            "SubmittedToConnectorQueue",
            "Success",
            "Applied",
            "UserCanceled",
            "FinishedWithErrors",
            "TimedOut",
            "SnmpV1V2ReadCredentialsNeeded",
            "SnmpV1V2WriteCredentialsNeeded",
            "SnmpV1V2ReadOnlyMode",
            "SnmpV3CredentialsNeeded",
            "HttpCredentialsNeeded",
            "DeviceCommunicationError",
            "DeviceIdentityUnverifiedCredentialError",
            "NonHPCartridgeInstalled",
            "UsedCartridgeInstalled",
            "CartridgeInBadState",
            "NonHPCartridgeUsageExceedsLimit",
            "DeviceIdentityMismatch",
            "ConnectorNameResolutionError",
            "ConnectorNameResolutionFailure",
            "SetVerificationError",
            "DeviceError",
            "InvalidDeviceData",
            "DeviceDateTimeNotInSync",
            "DeviceNotFound",
            "PartialSupport",
            "PolicyNotSupported",
            "DeviceNotSupported",
            "UnsupportedNetworkModel",
            "ConnectorUnavailable",
            "ConnectorNotEnabled",
            "InternalError",
            "DeviceDeleted",
            "ValueNotSupported",
            "NonHPAuthorizedDealer",
            "FirmwareUpgradeInProgress",
            "RebootModeDeviceMonitorFailure",
            "MissingLicense",
            "ItemNotFound",
            "NotSupportedByModel",
            "DeviceLicenseNotSupportedByFirmware",
            "DownloadFirmwareFailure",
            "NotSupported",
            "OperationDelayed",
            "Snapped",
            "FinishedWithFirmwareMismatch",
            "DeviceIdentificationFailed",
            "ItemNotSupported",
            "LicenseExpired",
            "LicenseSetFailed",
            "UpgradeFirmwareDeviceMonitorFailure",
            "ConnectorUpgradeInProgress",
            "HostSnmpV3FipsComplianceFailure",
            "SendingFirmwareToDeviceFailed",
            "Compliant",
            "NonCompliant",
            "PartialSuccess",
            "InvalidValue",
            "NotSupportedByFirmware",
            "Failed",
            "DeviceShutdownFailure",
            "OAuth"
          ],
          "type": "string"
        },
        "LastAssessRemediateOperationPending": {
          "type": "boolean"
        },
        "LastAssessRemediateOperationPolicyName": {
          "type": "string"
        },
        "LastAssessRemediateOperationAssessAndRemediate": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[SdsSetDevicesUpdateFirmwareRequest]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/SdsSetDevicesUpdateFirmwareRequest",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "SdsSetDevicesUpdateFirmwareRequest": {
      "type": "object",
      "properties": {
        "OperationFirmwareUpdateAtUtc": {
          "format": "date-time",
          "description": "Gets or sets the operation date",
          "type": "string"
        },
        "CancelFirmwareUpdate": {
          "description": "Gets or sets the cancel operation",
          "type": "boolean"
        },
        "DevicesToUpdate": {
          "description": "Gets or sets the Devices and Firmware to update",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicesIdAndFirmware"
          }
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        }
      }
    },
    "DevicesIdAndFirmware": {
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the Device Id",
          "type": "string"
        },
        "Firmware": {
          "description": "Gets or sets the Device Firmware",
          "type": "string"
        },
        "Message": {
          "description": "Gets or sets the Device Message",
          "type": "string"
        }
      }
    },
    "SdsSetDevicesUpdateFirmwareResponse": {
      "type": "object",
      "properties": {
        "DevicesSetFirmwareWithSuccess": {
          "description": "Gets or sets the Set Firmware Operation success",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicesIdAndFirmware"
          }
        },
        "DevicesSetFirmwareWithFail": {
          "description": "Gets or sets the Set Firmware Operation fail",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicesIdAndFirmware"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CopyPolicyRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "CopyToCustomer": {
          "description": "Gets or sets a value indicating whether [copy to customer].",
          "type": "boolean"
        }
      }
    },
    "AssessAndRemediateRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "AssessTemplateId": {
          "description": "Gets or sets a value indicating whether [copy to customer].",
          "type": "string"
        },
        "AssessAndRemediate": {
          "type": "boolean"
        }
      }
    },
    "GetDeviceEventsRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "DateFrom": {
          "format": "date-time",
          "type": "string"
        },
        "EventType": {
          "enum": [
            "Undefined",
            "Error",
            "Warning",
            "Info",
            "BlackBox"
          ],
          "type": "string"
        }
      }
    },
    "ListResultResponse[SdsDeviceEventDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SdsDeviceEventDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SdsDeviceEventDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SdsDeviceEventDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SdsScanRequest": {
      "type": "object",
      "properties": {
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        }
      }
    },
    "FreeSearchRequest": {
      "description": "The free search request",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ResultType": {
          "description": "Gets or sets the type of the result.",
          "enum": [
            "Dealer",
            "Customer",
            "Device",
            "Ticket"
          ],
          "type": "string"
        },
        "DealerId": {
          "description": "Set the dealerId",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "ListResultResponse[FreeSearchResultDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FreeSearchResultDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "FreeSearchResultDto": {
      "description": "",
      "type": "object",
      "properties": {
        "ResultType": {
          "description": "Gets or sets the type of the result.",
          "enum": [
            "Dealer",
            "Customer",
            "Device",
            "Ticket"
          ],
          "type": "string"
        },
        "TotalItems": {
          "format": "int32",
          "description": "Gets or sets the total items.",
          "type": "integer"
        },
        "ResultItem": {
          "$ref": "#/definitions/EntityDto",
          "description": "Gets or sets the result item."
        },
        "Index": {
          "format": "int32",
          "description": "Gets or sets the index.",
          "type": "integer"
        }
      }
    },
    "EntityDto": {
      "description": "Represent the base class for all entities' dto",
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetShippedSuppliesRequest": {
      "description": "Represents a request to retrieve a list of archived shipped supplies",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "Model": {
          "description": "Gets or sets the model.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "FilterCustomerText": {
          "description": "Gets or sets the filter customer text.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "InstalledProductId": {
          "description": "Gets or sets the installed product identifier.",
          "type": "string"
        },
        "InstalledProductIsManaged": {
          "description": "Gets or sets the InstalledProductIsManaged",
          "type": "boolean"
        },
        "Generations": {
          "description": "Gets or sets the generations.",
          "enum": [
            "Manual",
            "Automatic",
            "ForStock"
          ],
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the type of the supply.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the type of the color.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "PartNumber": {
          "description": "Filter by shipped partnumber",
          "type": "string"
        },
        "CreationDateFrom": {
          "format": "date-time",
          "description": "Filter list by a starting creation date",
          "type": "string"
        },
        "CreationDateTo": {
          "format": "date-time",
          "description": "Filter list by an ending creation date",
          "type": "string"
        },
        "OfficeDescription": {
          "description": "Filter list by office description",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[ShippedSupplyDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShippedSupplyDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ShippedSupplyDto": {
      "description": "Represent an shipped supply",
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer id.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "CustomerId": {
          "description": "Gets or sets the customer id.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "Supply": {
          "$ref": "#/definitions/SupplyBaseDto",
          "description": "Gets or sets the supply."
        },
        "InstalledProductId": {
          "description": "Gets or sets the InstalledProductd Id",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the system name",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Gets or sets the Product"
        },
        "Project": {
          "$ref": "#/definitions/ProjectDto",
          "description": "Gets or sets the Project"
        },
        "Office": {
          "$ref": "#/definitions/OfficeDto",
          "description": "Gets or sets the Office"
        },
        "Quantity": {
          "format": "int32",
          "description": "Gets or sets the quantity.",
          "type": "integer"
        },
        "PartNumber": {
          "description": "Gets or sets the partnumber.",
          "type": "string"
        },
        "SupplyDescription": {
          "description": "Gets or sets the supply description.",
          "type": "string"
        },
        "StockQuantity": {
          "format": "int32",
          "description": "Gets or sets the stock quantity.",
          "type": "integer"
        },
        "Creation": {
          "format": "date-time",
          "description": "Gets or sets the creation.",
          "type": "string"
        },
        "DocumentNumber": {
          "description": "Gets or sets the document number.",
          "type": "string"
        },
        "OrderNumber": {
          "description": "Gets or sets the order number.",
          "type": "string"
        },
        "TrackingUrl": {
          "description": "Gets or sets the tracking URL.",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the department.",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "TrackingNumber": {
          "description": "Gets or sets the tracking number.",
          "type": "string"
        },
        "CourierDescription": {
          "description": "Gets or sets the courier description.",
          "type": "string"
        },
        "Generation": {
          "description": "Gets or sets the Generation.",
          "enum": [
            "Manual",
            "Automatic",
            "ForStock"
          ],
          "type": "string"
        },
        "Counter": {
          "format": "int32",
          "description": "Gets or sets the counter.",
          "type": "integer"
        },
        "Price": {
          "format": "float",
          "description": "Gets or sets the price.",
          "type": "number"
        },
        "PriceRetailer": {
          "format": "float",
          "description": "Gets or sets the price retailer.",
          "type": "number"
        },
        "EsprinetOrderNumber": {
          "description": "Gets or sets the esprinet order number.",
          "type": "string"
        },
        "EsprinetPartNumber": {
          "description": "Gets or sets the esprinet partnumber.",
          "type": "string"
        },
        "EsprinetTrackingStatus": {
          "description": "Gets or sets the esprinet tracking status.",
          "type": "string"
        },
        "EsprinetTrackingLastUpdate": {
          "format": "date-time",
          "description": "Gets or sets the esprinet tracking last update.",
          "type": "string"
        },
        "EsprinetErrorCode": {
          "type": "string"
        },
        "EsprinetProcessedOn": {
          "format": "date-time",
          "description": "Data di processamento ordine da parte di Esprinet",
          "type": "string"
        },
        "SupplyAlerts": {
          "description": "Gets or sets the supply alerts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyAlertForShippedSupplyDto"
          }
        },
        "TimeZone": {
          "description": "Gets or sets the time zone.",
          "type": "string"
        },
        "TimeZoneIana": {
          "description": "Gets or sets the time zone.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SupplyAlertForShippedSupplyDto": {
      "description": "Represents a supply alert",
      "type": "object",
      "properties": {
        "Warning": {
          "description": "Gets or sets the warning.",
          "type": "string"
        },
        "InitialDate": {
          "format": "date-time",
          "description": "Gets or sets the initial date.",
          "type": "string"
        },
        "InitialMono": {
          "format": "int32",
          "description": "Gets or sets the initial mono.",
          "type": "integer"
        },
        "InitialColor": {
          "format": "int32",
          "description": "Gets or sets the initial color.",
          "type": "integer"
        },
        "InitialTotal": {
          "format": "int32",
          "description": "Gets or sets the initial total.",
          "type": "integer"
        },
        "InitialResidualPercentage": {
          "format": "int32",
          "description": "Gets or sets the initial residual percentage.",
          "type": "integer"
        },
        "ActualDate": {
          "format": "date-time",
          "description": "Gets or sets the actual date.",
          "type": "string"
        },
        "ActualMono": {
          "format": "int32",
          "description": "Gets or sets the actual mono.",
          "type": "integer"
        },
        "ActualColor": {
          "format": "int32",
          "description": "Gets or sets the actual color.",
          "type": "integer"
        },
        "ActualTotal": {
          "format": "int32",
          "description": "Gets or sets the actual total.",
          "type": "integer"
        },
        "ActualResidualPercentage": {
          "format": "int32",
          "description": "Gets or sets the actual residual percentage.",
          "type": "integer"
        },
        "CanceledOn": {
          "format": "date-time",
          "description": "Gets or sets the canceled on.",
          "type": "string"
        },
        "TonerDelivered": {
          "format": "date-time",
          "description": "Gets or sets the toner delivered.",
          "type": "string"
        },
        "TonerInstalled": {
          "format": "date-time",
          "description": "Gets or sets the toner installed.",
          "type": "string"
        },
        "IsHidden": {
          "description": "Gets or sets a value indicating whether this instance is hidden.",
          "type": "boolean"
        },
        "ColorType": {
          "description": "Gets or sets the type of the color.",
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the type of the supply.",
          "type": "string"
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the type of the maintenanceKit type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the color of the maintenance kit."
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetShippedSupplyRequest": {
      "description": "Represents a request to retrieve a archived shipped supply",
      "required": [
        "Id",
        "InstalledProductId"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "InstalledProductId": {
          "description": "Gets or sets the installed product identifier.",
          "type": "string"
        },
        "Language": {
          "description": "Set localization of the result",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        }
      }
    },
    "SingleResultResponse[ShippedSupplyDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/ShippedSupplyDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateShippingSupplyRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "Price": {
          "format": "float",
          "description": "Gets or sets the price.",
          "type": "number"
        },
        "Supply": {
          "$ref": "#/definitions/DealerSupplyDto",
          "description": "Gets or sets the part number."
        },
        "ReplaceSupplyInCustomSet": {
          "description": "In case of Custom Supply Set associated to the device, the Supply specified will replace the same partnumber type.",
          "type": "boolean"
        },
        "AddSupplyToSupplySet": {
          "description": "If device is attached to a SupplySet,add the supply into this (if it is not associated)",
          "type": "boolean"
        },
        "Quantity": {
          "format": "int32",
          "description": "Gets or sets the quantity.",
          "type": "integer"
        },
        "Counter": {
          "format": "int32",
          "description": "Gets or sets the counter.",
          "type": "integer"
        },
        "Creation": {
          "format": "date-time",
          "description": "Gets or sets the creation.",
          "type": "string"
        },
        "DocumentNumber": {
          "description": "Gets or sets the document number.",
          "type": "string"
        },
        "OrderNumber": {
          "description": "Gets or sets the order number.",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the department.",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "SendCustomerNotificationEmail": {
          "description": "Send notification email to customer if enabled",
          "type": "boolean"
        },
        "ActivateLogisticNotification": {
          "description": "Activate logistic notification process",
          "type": "boolean"
        },
        "DealerGatewayIds": {
          "description": "Logistic gateway id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SupplyPriceId": {
          "description": "TradingPartnerSuppliesListing Id",
          "type": "string"
        }
      }
    },
    "CreateShippingSupplyOnAlertRequest": {
      "description": "",
      "type": "object",
      "properties": {
        "SupplyAlertId": {
          "description": "Gets or sets the supply alert identifier.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the device identifier.",
          "type": "string"
        },
        "Price": {
          "format": "float",
          "description": "Gets or sets the price.",
          "type": "number"
        },
        "Supply": {
          "$ref": "#/definitions/DealerSupplyDto",
          "description": "Gets or sets the part number."
        },
        "ReplaceSupplyInCustomSet": {
          "description": "In case of Custom Supply Set associated to the device, the Supply specified will replace the same partnumber type.",
          "type": "boolean"
        },
        "AddSupplyToSupplySet": {
          "description": "If device is attached to a SupplySet,add the supply into this (if it is not associated)",
          "type": "boolean"
        },
        "Quantity": {
          "format": "int32",
          "description": "Gets or sets the quantity.",
          "type": "integer"
        },
        "Counter": {
          "format": "int32",
          "description": "Gets or sets the counter.",
          "type": "integer"
        },
        "Creation": {
          "format": "date-time",
          "description": "Gets or sets the creation.",
          "type": "string"
        },
        "DocumentNumber": {
          "description": "Gets or sets the document number.",
          "type": "string"
        },
        "OrderNumber": {
          "description": "Gets or sets the order number.",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the department.",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "SendCustomerNotificationEmail": {
          "description": "Send notification email to customer if enabled",
          "type": "boolean"
        },
        "ActivateLogisticNotification": {
          "description": "Activate logistic notification process",
          "type": "boolean"
        },
        "DealerGatewayIds": {
          "description": "Logistic gateway id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SupplyPriceId": {
          "description": "TradingPartnerSuppliesListing Id",
          "type": "string"
        }
      }
    },
    "UpdateRequest[UpdateShippedSupplyDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/UpdateShippedSupplyDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateShippedSupplyDto": {
      "description": "Represents a request to update a shipped supply",
      "required": [
        "SupplyAlertId"
      ],
      "type": "object",
      "properties": {
        "SupplyAlertId": {
          "description": "Gets or sets the supply alert identifier.",
          "type": "string"
        },
        "Price": {
          "format": "float",
          "description": "Gets or sets the price.",
          "type": "number"
        },
        "Creation": {
          "format": "date-time",
          "description": "Gets or sets the creation.",
          "type": "string"
        },
        "DocumentNumber": {
          "description": "Gets or sets the document number.",
          "type": "string"
        },
        "OrderNumber": {
          "description": "Gets or sets the order number.",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the department.",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "SendMail": {
          "description": "Gets or sets a value indicating whether [send mail].",
          "type": "boolean"
        },
        "SendLogisticMail": {
          "description": "Gets or sets a value indicating whether [send logistic mail].",
          "type": "boolean"
        },
        "DealerGatewayIds": {
          "description": "Logistic gateway id",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MassiveShippingSuppliesRequest": {
      "description": "Represents a dto for massive shipping alerts",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the DealerCode",
          "type": "string"
        },
        "MassiveShippingAlertInfos": {
          "description": "Gets or sets the ids",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MassiveShippingAlertInfoDto"
          }
        },
        "ActivateLogisticNotification": {
          "type": "boolean"
        },
        "SendCustomerNotificationEmail": {
          "type": "boolean"
        },
        "DealerGatewayIds": {
          "description": "Logistic gateway id",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MassiveShippingAlertInfoDto": {
      "type": "object",
      "properties": {
        "IdDevice": {
          "type": "string"
        },
        "IdSupplyAlert": {
          "type": "string"
        },
        "PartNumber": {
          "type": "string"
        }
      }
    },
    "SingleResultResponse[MassiveShippingSuppliesResponse]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/MassiveShippingSuppliesResponse",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "MassiveShippingSuppliesResponse": {
      "type": "object",
      "properties": {
        "MassiveShippingWithSuccess": {
          "description": "Gets or sets the massive shipping operation success",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "MassiveShippingWithFail": {
          "description": "Gets or sets  the massive shipping operation fail",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[SagaDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SagaDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "FirstSignerRequest": {
      "type": "object",
      "properties": {
        "SignerFirstName": {
          "type": "string"
        },
        "SignerLastName": {
          "type": "string"
        },
        "SignerEmail": {
          "type": "string"
        },
        "SignerCompany": {
          "type": "string"
        },
        "DocCode": {
          "type": "string"
        },
        "SignerDealerCode": {
          "type": "string"
        },
        "SignerCustomerCode": {
          "type": "string"
        },
        "Placeholders": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "CallBackUrl": {
          "type": "string"
        },
        "SendInvitation": {
          "type": "boolean"
        },
        "DocumentToSign": {
          "$ref": "#/definitions/FileInfoDto"
        }
      }
    },
    "DocuSignCallbackInfo": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "envelopeId": {
          "type": "string"
        }
      }
    },
    "SecondSignerRequest": {
      "type": "object",
      "properties": {
        "RequestId": {
          "type": "string"
        },
        "CallBackUrl": {
          "type": "string"
        }
      }
    },
    "ProcessSignerRequest": {
      "type": "object",
      "properties": {
        "EnvelopeId": {
          "type": "string"
        },
        "RequestId": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "Error",
            "Pending",
            "Signed",
            "Completed"
          ],
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SignRequestDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SignRequestDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SignRequestDto": {
      "type": "object",
      "properties": {
        "SignerFirstName": {
          "type": "string"
        },
        "SignerLastName": {
          "type": "string"
        },
        "SignerCompany": {
          "type": "string"
        },
        "SignerEmail": {
          "type": "string"
        },
        "SignDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "RequestId": {
          "type": "string"
        },
        "DocCode": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        },
        "AccountEmail": {
          "type": "string"
        },
        "Status": {
          "enum": [
            "Error",
            "Pending",
            "Signed",
            "Completed"
          ],
          "type": "string"
        },
        "DocType": {
          "enum": [
            "Gdpr",
            "Nda",
            "DealerContract"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSignedDocumentsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DocCode": {
          "description": "Gets or sets the document code.",
          "type": "string"
        },
        "RequestId": {
          "description": "Gets or sets the request identifier.",
          "type": "string"
        },
        "Status": {
          "description": "Gets or sets the status.",
          "enum": [
            "Error",
            "Pending",
            "Signed",
            "Completed"
          ],
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "EnvelopeId": {
          "description": "Gets or sets the envelope identifier.",
          "type": "string"
        },
        "FilterAccountId": {
          "description": "Gets or sets the filter account identifier.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SignRequestDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignRequestDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[StandardProductsSummaryDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/StandardProductsSummaryDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "StandardProductsSummaryDto": {
      "type": "object",
      "properties": {
        "TotalStandardProductDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalStandardProducts": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNonStandardProductDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalNonStandardProducts": {
          "format": "int32",
          "type": "integer"
        },
        "TotalAssociations": {
          "format": "int32",
          "type": "integer"
        },
        "TotalAssociationsWorking": {
          "format": "int32",
          "type": "integer"
        },
        "TotalProjectVolumes": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ListResultResponse[ProductToAssociateDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductToAssociateDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "ProductToAssociateDto": {
      "type": "object",
      "properties": {
        "Product": {
          "$ref": "#/definitions/ProductBaseDto"
        },
        "TotalDevices": {
          "format": "int32",
          "type": "integer"
        },
        "StandardProduct": {
          "$ref": "#/definitions/ProductBaseDto"
        },
        "HasAlertLimits": {
          "type": "boolean"
        },
        "HasDealerCounterBlendToStandard": {
          "type": "boolean"
        }
      }
    },
    "ListStandardProductsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[StandardProductDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandardProductDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "StandardProductDto": {
      "type": "object",
      "properties": {
        "ModelClean": {
          "type": "string"
        },
        "Logo": {
          "description": "Gets or sets the logo.",
          "type": "string"
        },
        "Color": {
          "format": "int32",
          "description": "Gets or sets the color.",
          "type": "integer"
        },
        "FormatType": {
          "format": "int32",
          "description": "Gets or sets the type of the format.",
          "type": "integer"
        },
        "HasGapInfo": {
          "description": "Gets or sets a value indicating whether this instance has gap information.",
          "type": "boolean"
        },
        "Model": {
          "description": "Gets or sets the model.",
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the brand.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetStandardProductOperationsRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[StandardProductOperationDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandardProductOperationDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "StandardProductOperationDto": {
      "type": "object",
      "properties": {
        "OperationDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "TotalDevices": {
          "format": "int32",
          "type": "integer"
        },
        "TotalDevicesInSuccess": {
          "format": "int32",
          "type": "integer"
        },
        "TotalDevicesInError": {
          "format": "int32",
          "type": "integer"
        },
        "TotalDevicesInRollback": {
          "format": "int32",
          "type": "integer"
        },
        "Status": {
          "enum": [
            "Draft",
            "ToWork",
            "Working",
            "Worked"
          ],
          "type": "string"
        },
        "ProductModelToStandardProductModelMap": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductModelToStandardProductModelDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ProductModelToStandardProductModelDto": {
      "type": "object",
      "properties": {
        "Product": {
          "$ref": "#/definitions/ProductBaseDto"
        },
        "StandardProduct": {
          "$ref": "#/definitions/ProductBaseDto"
        },
        "NewProduct": {
          "$ref": "#/definitions/ProductBaseDto"
        },
        "Rollback": {
          "type": "boolean"
        }
      }
    },
    "GetStandardProductOperationRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[StandardProductOperationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/StandardProductOperationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateOrUpdateStandardProductOperation": {
      "type": "object",
      "properties": {
        "OperationId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "ProductStandardProductMap": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair[String,String]"
          }
        },
        "DevicesId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RollbackStandardProductOperationRequest": {
      "required": [
        "DealerCode",
        "Id"
      ],
      "type": "object",
      "properties": {
        "ProductId": {
          "description": "Gets or sets the product identifier.",
          "type": "string"
        },
        "NewProductId": {
          "description": "Creates new productid.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the DealerCode.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetStandardProductOperationsDevicesRequest": {
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "OperationId": {
          "description": "Gets or sets the operation identifier.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[CustomerDeviceDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerDeviceDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerDeviceDto": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer id.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductDto",
          "description": "Gets or sets the product."
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "ExternalIdentifier": {
          "description": "Gets or sets the external identifier.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSuppliesRequest": {
      "required": [
        "DealerCode",
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "ColorType": {
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "SupplyType": {
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "RequestSupplyRequest": {
      "type": "object",
      "properties": {
        "DeviceId": {
          "type": "string"
        },
        "Mono": {
          "format": "int32",
          "type": "integer"
        },
        "Color": {
          "format": "int32",
          "type": "integer"
        },
        "RequestSupplies": {
          "type": "boolean"
        },
        "SupplyIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SupplyLevels": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "GetSupplyAlertRequest": {
      "description": "GetSupplyAlert Request",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the dealer code",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the installed product identifier.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serialnumber",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number",
          "type": "string"
        },
        "InitialFrom": {
          "format": "date-time",
          "description": "Gets or sets the initial From date",
          "type": "string"
        },
        "InitialTo": {
          "format": "date-time",
          "description": "Gets or sets the initial To date",
          "type": "string"
        },
        "ExhaustedFrom": {
          "format": "date-time",
          "description": "Gets or sets the Exhausted From date",
          "type": "string"
        },
        "ExhaustedTo": {
          "format": "date-time",
          "description": "Gets or sets the Exhausted To date",
          "type": "string"
        },
        "LastUpdateUTCFrom": {
          "format": "date-time",
          "description": "Gets or sets alerts updated from a specified data",
          "type": "string"
        },
        "LastUpdateUTCTo": {
          "format": "date-time",
          "description": "Gets or sets alerts updated until specified data",
          "type": "string"
        },
        "Brand": {
          "description": "Gets or sets the brand",
          "type": "string"
        },
        "Model": {
          "description": "Gets or sets the ModelId",
          "type": "string"
        },
        "OfficeDescription": {
          "description": "Gets or sets the OfficeDescription",
          "type": "string"
        },
        "ProjectDescription": {
          "description": "Gets or sets the ProjectDescription",
          "type": "string"
        },
        "SupplySetDescription": {
          "description": "Gets or sets the SupplySet Description",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "FilterCustomerText": {
          "description": "Gets or sets the filter customer text.",
          "type": "string"
        },
        "OutputType": {
          "enum": [
            "All",
            "AlertsHistory",
            "DeviceDetail"
          ],
          "type": "string"
        },
        "ManageOption": {
          "description": "Gets or sets the ManageOption",
          "enum": [
            "All",
            "Managed",
            "NotManaged"
          ],
          "type": "string"
        },
        "InstallationOption": {
          "description": "Gets or sets the InstallationOption",
          "enum": [
            "All",
            "Installed",
            "NotInstalled"
          ],
          "type": "string"
        },
        "CancelOption": {
          "description": "Gets or sets the InstallationOption",
          "enum": [
            "All",
            "Canceled",
            "NotCanceled"
          ],
          "type": "string"
        },
        "HiddenOption": {
          "description": "Gets or sets the HiddenOption",
          "enum": [
            "All",
            "Hidden",
            "NotHidden",
            "PostPoned"
          ],
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the type of the supply.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the type of the color.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "ExcludeForStockShippedSupplies": {
          "description": "Exclude alerts opened internally for manage ForStock Shipped Supplies",
          "type": "boolean"
        },
        "OnlyWithMultipleQuantity": {
          "description": "Gets or sets a value indicating whether [only with multiple quantity].",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SupplyAlertListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyAlertListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SupplyAlertListDto": {
      "description": "Supply AlertList",
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "CustomerDescription": {
          "description": "Gets or sets the customer description.",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "DealerCode": {
          "description": "Gets or sets the dealer code.",
          "type": "string"
        },
        "DealerDescription": {
          "description": "Gets or sets the dealer description.",
          "type": "string"
        },
        "DeviceId": {
          "description": "Gets or sets the IdInstalledProduct.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the system name",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the Department",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "IsShipped": {
          "description": "Gets or sets the IsShipped",
          "type": "boolean"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Gets or sets the Product"
        },
        "Project": {
          "$ref": "#/definitions/ProjectDto",
          "description": "Gets or sets the Project"
        },
        "ProductBrand": {
          "description": "Gets or sets the ProductBrand",
          "type": "string"
        },
        "ProductModel": {
          "description": "Gets or sets the ProductModel",
          "type": "string"
        },
        "DealerSupplySetDescription": {
          "description": "Gets or sets the GroupName",
          "type": "string"
        },
        "Office": {
          "$ref": "#/definitions/OfficeBaseDto",
          "description": "Gets or sets the Office"
        },
        "Warning": {
          "description": "Gets or sets the warning.",
          "type": "string"
        },
        "InitialDate": {
          "format": "date-time",
          "description": "Gets or sets the initial date.",
          "type": "string"
        },
        "InitialMono": {
          "format": "int32",
          "description": "Gets or sets the initial mono.",
          "type": "integer"
        },
        "InitialColor": {
          "format": "int32",
          "description": "Gets or sets the initial color.",
          "type": "integer"
        },
        "InitialTotal": {
          "format": "int32",
          "description": "Gets or sets the initial total.",
          "type": "integer"
        },
        "TimeZone": {
          "description": "Gets or sets the time zone.",
          "type": "string"
        },
        "TimeZoneIana": {
          "description": "Gets or sets the time zone.",
          "type": "string"
        },
        "InitialResidualPercentage": {
          "format": "int32",
          "description": "Gets or sets the initial residual percentage.",
          "type": "integer"
        },
        "HasPostponeEnabled": {
          "description": "Gets or sets the HasPosponeEnabled",
          "type": "boolean"
        },
        "ActualDate": {
          "format": "date-time",
          "description": "Gets or sets the actual date.",
          "type": "string"
        },
        "ActualMono": {
          "format": "int32",
          "description": "Gets or sets the actual mono.",
          "type": "integer"
        },
        "ActualColor": {
          "format": "int32",
          "description": "Gets or sets the actual color.",
          "type": "integer"
        },
        "ActualTotal": {
          "format": "int32",
          "description": "Gets or sets the actual total.",
          "type": "integer"
        },
        "ActualResidualPercentage": {
          "format": "int32",
          "description": "Gets or sets the actual residual percentage.",
          "type": "integer"
        },
        "CanceledOn": {
          "format": "date-time",
          "description": "Gets or sets the canceled on.",
          "type": "string"
        },
        "TonerDelivered": {
          "format": "date-time",
          "description": "Gets or sets the toner delivered.",
          "type": "string"
        },
        "TonerInstalled": {
          "format": "date-time",
          "description": "Gets or sets the toner installed.",
          "type": "string"
        },
        "IsHidden": {
          "description": "Gets or sets a value indicating whether this instance is hidden.",
          "type": "boolean"
        },
        "ColorType": {
          "description": "Gets or sets the type of the color.",
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the type of the supply.",
          "type": "string"
        },
        "SupplyTypeDescription": {
          "description": "Gets or sets the description type of the supply.",
          "type": "string"
        },
        "SupplyTypeDescriptionTranslated": {
          "description": "Gets or sets the description type of the supply with translation.",
          "type": "string"
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the type of the maintenanceKit type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the color of the maintenance kit."
        },
        "ExhaustedExpiration": {
          "format": "date-time",
          "description": "Get the exhausted expirations",
          "type": "string"
        },
        "ForecastExhaustionExpectedDate": {
          "format": "date-time",
          "description": "Get the cartridge exhausted expirations",
          "type": "string"
        },
        "ForecastPrintedPages": {
          "format": "int32",
          "description": "Get the number of the printed pages by the cartridge",
          "type": "integer"
        },
        "ForecastRemainingPages": {
          "format": "int32",
          "description": "Get the number of the cartridge remaining pages",
          "type": "integer"
        },
        "ForecastCalculationDate": {
          "format": "date-time",
          "description": "Get the forecast calculation date",
          "type": "string"
        },
        "ForecastHasErrors": {
          "description": "Get if there are errors in the forecast calculation due to incorrect or not enought data",
          "type": "boolean"
        },
        "SuggestedPartNumber": {
          "description": "Gets or sets the suggested part number.",
          "type": "string"
        },
        "SuggestedPartNumbers": {
          "description": "Gets or sets all  suggested part numbers",
          "type": "string"
        },
        "ShippedSupplyId": {
          "description": "Gets or sets the shipped supply Id",
          "type": "string"
        },
        "SupplyPartNumber": {
          "type": "string"
        },
        "ShippedSupplyQuantity": {
          "format": "int32",
          "description": "Gets or sets the shipped supply quantity",
          "type": "integer"
        },
        "ShippedSupplyOrderNumber": {
          "description": "Gets or sets the shipped OrderNumber",
          "type": "string"
        },
        "ShippedSupplyDocumentNumber": {
          "description": "Gets or sets the shipped DocumentNumber",
          "type": "string"
        },
        "ShippedSupplyGenerationType": {
          "description": "Gets or sets the shipped generation",
          "enum": [
            "Manual",
            "Automatic",
            "ForStock"
          ],
          "type": "string"
        },
        "ShippedSupplyCreation": {
          "format": "date-time",
          "description": "Gets or sets the shipped supply creation.",
          "type": "string"
        },
        "CounterMono": {
          "format": "int32",
          "description": "Gets or sets the counter mono.",
          "type": "integer"
        },
        "CounterColor": {
          "format": "int32",
          "description": "Gets or sets the color of the counter.",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "OfficeBaseDto": {
      "description": "Represent an office",
      "type": "object",
      "properties": {
        "Code": {
          "description": "Gets or sets the code.",
          "type": "string"
        },
        "Description": {
          "description": "Gets or sets the description.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetAlertsByOfficeRequest": {
      "description": "Represents a request to retrieve an alert by office",
      "required": [
        "OfficeId"
      ],
      "type": "object",
      "properties": {
        "OfficeId": {
          "description": "Gets or sets the office identifier.",
          "type": "string"
        },
        "Level": {
          "format": "int32",
          "description": "Gets or sets the level.",
          "type": "integer"
        }
      }
    },
    "ListResultResponse[AlertOfficeDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertOfficeDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AlertOfficeDto": {
      "description": "Represents an office alert",
      "type": "object",
      "properties": {
        "InstalledProduct": {
          "$ref": "#/definitions/InstalledProductDto",
          "description": "Gets or sets the installed product."
        },
        "SupplyAlerts": {
          "description": "Gets or sets the supply alerts.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyAlertDto"
          }
        }
      }
    },
    "InstalledProductDto": {
      "description": "Represent an installed product",
      "type": "object",
      "properties": {
        "Department": {
          "description": "Gets or sets the department.",
          "type": "string"
        },
        "IsOffline": {
          "description": "Gets or sets a value indicating whether this instance is offline.",
          "type": "boolean"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "Install": {
          "format": "date-time",
          "description": "Gets or sets the install.",
          "type": "string"
        },
        "BlackToner": {
          "format": "int32",
          "description": "Gets or sets the black toner.",
          "type": "integer"
        },
        "BlackToner1": {
          "format": "int32",
          "description": "Gets or sets the black toner1.",
          "type": "integer"
        },
        "BlackToner2": {
          "format": "int32",
          "description": "Gets or sets the black toner2.",
          "type": "integer"
        },
        "BlackToner3": {
          "format": "int32",
          "description": "Gets or sets the black toner3.",
          "type": "integer"
        },
        "BlackPhoto": {
          "format": "int32",
          "description": "Gets or sets the black photo.",
          "type": "integer"
        },
        "CyanToner": {
          "format": "int32",
          "description": "Gets or sets the cyan toner.",
          "type": "integer"
        },
        "CyanPhoto": {
          "format": "int32",
          "description": "Gets or sets the cyan photo.",
          "type": "integer"
        },
        "MagentaToner": {
          "format": "int32",
          "description": "Gets or sets the magenta toner.",
          "type": "integer"
        },
        "MagentaPhoto": {
          "format": "int32",
          "description": "Gets or sets the magenta photo.",
          "type": "integer"
        },
        "YellowToner": {
          "format": "int32",
          "description": "Gets or sets the yellow toner.",
          "type": "integer"
        },
        "YellowPhoto": {
          "format": "int32",
          "description": "Gets or sets the yellow photo.",
          "type": "integer"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number.",
          "type": "string"
        },
        "Contact": {
          "description": "Gets or sets the contact.",
          "type": "string"
        },
        "Note": {
          "description": "Gets or sets the note.",
          "type": "string"
        },
        "Uninstall": {
          "format": "date-time",
          "description": "Gets or sets the uninstall.",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number.",
          "type": "string"
        },
        "MacAddress": {
          "description": "Gets or sets the mac address.",
          "type": "string"
        },
        "Firmware": {
          "description": "Gets or sets the firmware.",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the name of the system.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Gets or sets the product."
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SupplyAlertDto": {
      "description": "Represents a supply alert",
      "type": "object",
      "properties": {
        "InstalledProductId": {
          "description": "Gets or sets the IdInstalledProduct.",
          "type": "string"
        },
        "IsShipped": {
          "description": "Gets or sets the IsShipped",
          "type": "boolean"
        },
        "ShippedCreation": {
          "format": "date-time",
          "description": "Gets or sets the ShippedCreation",
          "type": "string"
        },
        "SerialNumber": {
          "description": "Gets or sets the serial number",
          "type": "string"
        },
        "AssetNumber": {
          "description": "Gets or sets the asset number",
          "type": "string"
        },
        "SystemName": {
          "description": "Gets or sets the system name",
          "type": "string"
        },
        "Department": {
          "description": "Gets or sets the Department",
          "type": "string"
        },
        "Product": {
          "$ref": "#/definitions/ProductBaseDto",
          "description": "Gets or sets the Product"
        },
        "Project": {
          "$ref": "#/definitions/ProjectDto",
          "description": "Gets or sets the Project"
        },
        "DealerSupplySetDescription": {
          "description": "Gets or sets the GroupName",
          "type": "string"
        },
        "Office": {
          "$ref": "#/definitions/OfficeDto",
          "description": "Gets or sets the Office"
        },
        "Warning": {
          "description": "Gets or sets the warning.",
          "type": "string"
        },
        "InitialDate": {
          "format": "date-time",
          "description": "Gets or sets the initial date.",
          "type": "string"
        },
        "InitialMono": {
          "format": "int32",
          "description": "Gets or sets the initial mono.",
          "type": "integer"
        },
        "InitialColor": {
          "format": "int32",
          "description": "Gets or sets the initial color.",
          "type": "integer"
        },
        "InitialTotal": {
          "format": "int32",
          "description": "Gets or sets the initial total.",
          "type": "integer"
        },
        "InitialResidualPercentage": {
          "format": "int32",
          "description": "Gets or sets the initial residual percentage.",
          "type": "integer"
        },
        "ActualDate": {
          "format": "date-time",
          "description": "Gets or sets the actual date.",
          "type": "string"
        },
        "ActualMono": {
          "format": "int32",
          "description": "Gets or sets the actual mono.",
          "type": "integer"
        },
        "ActualColor": {
          "format": "int32",
          "description": "Gets or sets the actual color.",
          "type": "integer"
        },
        "ActualTotal": {
          "format": "int32",
          "description": "Gets or sets the actual total.",
          "type": "integer"
        },
        "ActualResidualPercentage": {
          "format": "int32",
          "description": "Gets or sets the actual residual percentage.",
          "type": "integer"
        },
        "CanceledOn": {
          "format": "date-time",
          "description": "Gets or sets the canceled on.",
          "type": "string"
        },
        "TonerDelivered": {
          "format": "date-time",
          "description": "Gets or sets the toner delivered.",
          "type": "string"
        },
        "TonerInstalled": {
          "format": "date-time",
          "description": "Gets or sets the toner installed.",
          "type": "string"
        },
        "IsHidden": {
          "description": "Gets or sets a value indicating whether this instance is hidden.",
          "type": "boolean"
        },
        "ColorType": {
          "description": "Gets or sets the type of the color.",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the type of the supply.",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the type of the maintenanceKit type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the color of the maintenance kit."
        },
        "ExhaustedExpiration": {
          "format": "date-time",
          "description": "Gets or sets the type of the color.",
          "type": "string"
        },
        "TimeZone": {
          "description": "Gets or sets the time zone.",
          "type": "string"
        },
        "TimeZoneIana": {
          "description": "Gets or sets the time zone.",
          "type": "string"
        },
        "SupplyAlertReasons": {
          "description": "Gets or sets the supply alert reasons.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyAlertReasonDto"
          }
        },
        "SupplyAlertPostponeThresholds": {
          "description": "Gets or sets the supply alert postpone thresholds.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupplyAlertPostponeThresholdDto"
          }
        },
        "ExistsAnActivePostpone": {
          "description": "Gets or sets the supply alert postpone thresholds.",
          "type": "boolean",
          "readOnly": true
        },
        "IdPanelMessageAlertConfiguration": {
          "description": "Gets or sets the IDPanelMessageAlertConfiguration",
          "type": "string"
        },
        "IdTraceVolumeConfiguration": {
          "description": "Gets or sets the IDtraceVolumeConfiguration",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SupplyAlertReasonDto": {
      "type": "object",
      "properties": {
        "AlertLimitType": {
          "description": "Gets or sets the type of the alert limit.",
          "enum": [
            "None",
            "Level",
            "ResidualPages",
            "ResidualDays"
          ],
          "type": "string"
        },
        "DateOverThresholdUTC": {
          "format": "date-time",
          "description": "Gets or sets the date over threshold.",
          "type": "string"
        },
        "OverThresholdValue": {
          "format": "int32",
          "description": "Gets or sets the over threshold value.",
          "type": "integer"
        },
        "GeneratedByFallBack": {
          "description": "Gets or sets a value indicating whether [generated by fall back].",
          "type": "boolean"
        },
        "ThresholdLimit": {
          "format": "int32",
          "description": "Gets or sets the threshold limit.",
          "type": "integer"
        },
        "PostAlertNotificationSentAt": {
          "format": "date-time",
          "description": "Gets or sets the post alert notification sent at.",
          "type": "string"
        },
        "PostAlertNotSentBecauseAlreadyShipped": {
          "description": "Gets or sets the post alert status : if the alert was already shipped , we don't send the post alert notification",
          "type": "boolean"
        },
        "PostAlertNotificationLimits": {
          "format": "int32",
          "description": "Gets or sets the post alert notification limits.",
          "type": "integer"
        },
        "IsGeneratedByProximity": {
          "description": "Gets or sets a value indicating whether this instance is generated by proximity.",
          "type": "boolean"
        },
        "ProximityThresholdLimit": {
          "format": "int32",
          "description": "Gets or sets the proximity threshold limit.",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SupplyAlertPostponeThresholdDto": {
      "description": "Represents a dto for SupplyAlertPostponeThreshold",
      "type": "object",
      "properties": {
        "IdSupplyAlert": {
          "description": "Gets or sets SupplyAlertId",
          "type": "string"
        },
        "ThresholdValue": {
          "format": "int32",
          "description": "Gets or sets percentage",
          "type": "integer"
        },
        "AlertLimitType": {
          "description": "Gets or sets Alert Limit Type",
          "enum": [
            "None",
            "Level",
            "ResidualPages",
            "ResidualDays"
          ],
          "type": "string"
        },
        "CreatedAtUTC": {
          "format": "date-time",
          "description": "Gets or sets createdAtUTC",
          "type": "string"
        },
        "DisabledAtUTC": {
          "format": "date-time",
          "description": "Gets or sets disabledAtUTC",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetStockQuantityByDeviceAndSupplyTypeAndColorType": {
      "description": "Represents a request to retrieve the device total stockquantity for alerts of same type and colo",
      "required": [
        "DeviceId",
        "SupplyType",
        "ColorType"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the Device id",
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the Supply type",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the Color type",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        }
      }
    },
    "SingleResultResponse[Int32]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "format": "int32",
          "description": "Gets or sets the result.",
          "type": "integer"
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SupplyAlertDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SupplyAlertDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[UpdateAlertDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/UpdateAlertDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateAlertDto": {
      "description": "Represents a dto for updating an alert",
      "type": "object",
      "properties": {
        "CustomerCode": {
          "description": "Gets or sets the customer code.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the id.",
          "type": "string"
        },
        "IsHidden": {
          "description": "Gets or sets a value indicating whether this instance is hidden.",
          "type": "boolean"
        }
      }
    },
    "UpdateRequest[IEnumerable[PostponeAlertDto]]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "description": "Gets or sets the object to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostponeAlertDto"
          }
        }
      }
    },
    "PostponeAlertDto": {
      "description": "Represents a dto for massive update  alerts",
      "type": "object",
      "properties": {
        "ThresholdValue": {
          "format": "int32",
          "description": "Gets or sets percentage",
          "type": "integer"
        },
        "AlertLimitType": {
          "description": "Gets or sets Alert Limit Type",
          "enum": [
            "None",
            "Level",
            "ResidualPages",
            "ResidualDays"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "UpdateRequest[MassiveUpdateAlertDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/MassiveUpdateAlertDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "MassiveUpdateAlertDto": {
      "description": "Represents a dto for massive update  alerts",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the DealerCode",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Cancel": {
          "description": "Gets or sets a value indicating set to canceled or not canceled.",
          "type": "boolean"
        },
        "Hidden": {
          "description": "Gets or sets a value indicating set to hidden or not.",
          "type": "boolean"
        },
        "Install": {
          "type": "boolean"
        }
      }
    },
    "GetAvailableSuppliesForADeviceRequest": {
      "description": "Represents a request to retrieve an alert",
      "required": [
        "DeviceId",
        "SupplyType",
        "ColorType",
        "MaintenanceKitTypeId",
        "MaintenanceKitColorId",
        "Warning",
        "Language"
      ],
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the device Id",
          "type": "string"
        },
        "SupplyType": {
          "description": "Gets or sets the SupplyType",
          "enum": [
            "ManteinanceKit",
            "PhotoConductor",
            "Toner"
          ],
          "type": "string"
        },
        "ColorType": {
          "description": "Gets or sets the ColorType",
          "enum": [
            "NotAvailable",
            "Black",
            "Cyan",
            "Magenta",
            "Yellow",
            "Black1",
            "Black2",
            "Black3"
          ],
          "type": "string"
        },
        "MaintenanceKitTypeId": {
          "format": "int32",
          "description": "Gets or sets the MaintenanceKitType",
          "type": "integer"
        },
        "MaintenanceKitColorId": {
          "format": "int32",
          "description": "Gets or sets the MaintenanceKitColor",
          "type": "integer"
        },
        "Warning": {
          "description": "Gets or sets the SupplyAlert warning",
          "type": "string"
        },
        "Language": {
          "description": "Set the language to retrieve supplies localizated",
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "ShowOnlyCurrentSuppliesInUse": {
          "description": "Show only current supplies in use",
          "type": "boolean"
        }
      }
    },
    "SingleResultResponse[AvailableSuppliesDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/AvailableSuppliesDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "AvailableSuppliesDto": {
      "description": "Supplies related to Dealer choices and device",
      "type": "object",
      "properties": {
        "AvailableSupplies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplyListDto"
          }
        },
        "LastUsedSupply": {
          "$ref": "#/definitions/LastShippedSupplyDto"
        },
        "CurrentSupplies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceSupplyDto"
          }
        },
        "SuggestedSupplies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DealerSupplyListDto"
          }
        }
      }
    },
    "LastShippedSupplyDto": {
      "description": "Represent the last shipped supply",
      "type": "object",
      "properties": {
        "Supply": {
          "$ref": "#/definitions/DealerSupplyListDto",
          "description": "Gets or sets the supply."
        },
        "Creation": {
          "format": "date-time",
          "description": "Gets or sets the creation.",
          "type": "string"
        }
      }
    },
    "DeviceSupplyDto": {
      "description": "Supplies related to Dealer choices",
      "type": "object",
      "properties": {
        "Creation": {
          "format": "date-time",
          "description": "Gets or sets the craetion",
          "type": "string"
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the type of the maintenanceKit type."
        },
        "Description": {
          "description": "Gets or sets the Description.",
          "type": "string"
        },
        "CurrentlyInUse": {
          "description": "Gets if it is present now in the device or in the past",
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[KeyValueDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValueDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "KeyValueDto": {
      "type": "object",
      "properties": {
        "Key": {
          "format": "int32",
          "type": "integer"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "GetSupportSparePartsRequest": {
      "description": "Represents a request to retrieve a pagedlist of support spare parts",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "InstalledProductId": {
          "description": "Gets or sets the installed product identifier.",
          "type": "string"
        },
        "LoadDeleted": {
          "description": "Gets or sets a value indicating whether [load deleted].",
          "type": "boolean"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SupportSparePartDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportSparePartDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SupportSparePartDto": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "IsDeleted": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SupportSparePartDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SupportSparePartDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[SupportSparePartDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/SupportSparePartDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[SupportSparePartDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/SupportSparePartDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "GetSupportTicketsRequest": {
      "description": "Represents a request to retrieve a pagedlist of support tickets",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "InstalledProductId": {
          "description": "Gets or sets the installed product identifier.",
          "type": "string"
        },
        "ExcludedIds": {
          "description": "Gets or sets the excluded ids.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SupportTicketDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportTicketDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SupportTicketDto": {
      "description": "The support ticket dto",
      "type": "object",
      "properties": {
        "TicketCounter": {
          "format": "int32",
          "type": "integer"
        },
        "TicketPrefix": {
          "type": "string"
        },
        "Title": {
          "type": "string"
        },
        "Priority": {
          "enum": [
            "Minor",
            "Major",
            "Critical"
          ],
          "type": "string"
        },
        "SupportTicketCategoryId": {
          "type": "string"
        },
        "SupportTicketCategoryDescription": {
          "type": "string"
        },
        "Resolve": {
          "enum": [
            "New",
            "Assigned",
            "Pending",
            "Closed"
          ],
          "type": "string"
        },
        "ResolveType": {
          "enum": [
            "Closed",
            "ClosedTelephone",
            "ClosedRemote",
            "NotResolved"
          ],
          "type": "string"
        },
        "OperationType": {
          "enum": [
            "ByContract",
            "Payed",
            "NotPayed"
          ],
          "type": "string"
        },
        "PendingReason": {
          "type": "string"
        },
        "OpenedOnUtc": {
          "format": "date-time",
          "type": "string"
        },
        "ClosedOnUtc": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "AssigneeId": {
          "type": "string"
        },
        "AssigneeName": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "InstalledProductId": {
          "type": "string"
        },
        "InstalledProductDescription": {
          "type": "string"
        },
        "OptionalMails": {
          "type": "string"
        },
        "RifNome": {
          "type": "string"
        },
        "RifTel": {
          "type": "string"
        },
        "RifMail": {
          "type": "string"
        },
        "TonerLevels": {
          "type": "string"
        },
        "SlaHours": {
          "format": "double",
          "type": "number"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSupportTicketDetailsRequest": {
      "description": "Represents a request to retrieve a pagedlist of support ticket details",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "TicketId": {
          "description": "Gets or sets the ticket identifier.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SupportTicketDetailDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportTicketDetailDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SupportTicketDetailDto": {
      "type": "object",
      "properties": {
        "SupportTicketId": {
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "AccountName": {
          "type": "string"
        },
        "CreationUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsPrivate": {
          "type": "boolean"
        },
        "File1": {
          "type": "string"
        },
        "File2": {
          "type": "string"
        },
        "File3": {
          "type": "string"
        },
        "Attachment1": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "Attachment2": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "Attachment3": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSupportTicketSparePartsRequest": {
      "description": "Represents a request to retrieve a pagedlist of support ticket spare parts",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "TicketId": {
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SupportTicketSparePartDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportTicketSparePartDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SupportTicketSparePartDto": {
      "type": "object",
      "properties": {
        "SupportSparePartId": {
          "type": "string"
        },
        "SupportTicketId": {
          "type": "string"
        },
        "SupportSparePartCode": {
          "type": "string"
        },
        "SupportSparePartDescription": {
          "type": "string"
        },
        "Qty": {
          "format": "int32",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "GetSupportTicketTasksRequest": {
      "description": "Represents a request to retrieve a pagedlist of support ticket task",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "TicketId": {
          "description": "Gets or sets the ticket identifier.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[SupportTicketTaskDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportTicketTaskDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SupportTicketTaskDto": {
      "type": "object",
      "properties": {
        "SupportTicketId": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "StartDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "EndDateUtc": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SupportTicketDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SupportTicketDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SupportTicketDetailDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SupportTicketDetailDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[CreateSupportTicketDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/CreateSupportTicketDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "CreateSupportTicketDto": {
      "type": "object",
      "properties": {
        "Title": {
          "type": "string"
        },
        "Priority": {
          "enum": [
            "Minor",
            "Major",
            "Critical"
          ],
          "type": "string"
        },
        "SupportTicketCategoryId": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "InstalledProductId": {
          "type": "string"
        },
        "OptionalMails": {
          "type": "string"
        },
        "AccountId": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "File1": {
          "type": "string"
        },
        "File2": {
          "type": "string"
        },
        "File3": {
          "type": "string"
        },
        "Attachment1": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "Attachment2": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "Attachment3": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "RifNome": {
          "type": "string"
        },
        "RifTel": {
          "type": "string"
        },
        "RifMail": {
          "type": "string"
        }
      }
    },
    "CreateRequest[SupportTicketTaskDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/SupportTicketTaskDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[SupportTicketDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/SupportTicketDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "CreateRequest[SupportTicketSparePartDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/SupportTicketSparePartDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "PagedResultResponse[SupportTicketCategoryDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportTicketCategoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "SupportTicketCategoryDto": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[SupportTicketCategoryDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/SupportTicketCategoryDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateRequest[SupportTicketCategoryDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/SupportTicketCategoryDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[SupportTicketCategoryDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/SupportTicketCategoryDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "CreateRequest[CreateTicketDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/CreateTicketDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "CreateTicketDto": {
      "description": "",
      "required": [
        "Title",
        "Category",
        "SubType",
        "Message"
      ],
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Dealer code",
          "type": "string"
        },
        "DealerId": {
          "description": "Dealer Id",
          "type": "string"
        },
        "CustomerCode": {
          "description": "Customer Code",
          "type": "string"
        },
        "CustomerId": {
          "description": "Customer Id",
          "type": "string"
        },
        "Title": {
          "description": "Ticket title",
          "type": "string"
        },
        "Category": {
          "description": "The Category of the ticket",
          "enum": [
            "EXplorerInstallationRequest",
            "EXplorerInstallationIsolated",
            "EXplorerReInstallationIsolated",
            "EXplorerUpdate",
            "EXplorerInstallationProblem",
            "EXplorerConfigurationProblem",
            "ChangeOrModifyRequests",
            "CustomerProblem",
            "DeviceProblem",
            "DeviceOperationsProblem",
            "AlertProblem",
            "NotificationProblem",
            "ReportProblem",
            "LoginManageSiteProblem",
            "IntegrationProblem",
            "Other"
          ],
          "type": "string"
        },
        "SubType": {
          "description": "The Subcategory of the ticket, based on Category selection",
          "enum": [
            "Other",
            "ExplorerInstallationOnNewCustomer",
            "ExplorerUpdate",
            "ExplorerReinstall",
            "AddingSupplies",
            "DeleteOffices",
            "MoveDevicesOnOtherOfficeRequest",
            "SetDevicesToNotManaged",
            "AlertLimitModification",
            "ScheduledTaskNotWork",
            "NoDevicesFound",
            "CustomerDataNotFoundOnSite",
            "SomeDevicesNotFound",
            "DeviceCounterNotFound",
            "WrongDeviceCounters",
            "DeviceLimitWrong",
            "DeviceNotUpdateFrom",
            "OfficeProjectDeviceAssociation",
            "DeviceNeverContacted",
            "PartNumberNotFoundOnAlertManage",
            "AlertOpenedOnWrongLevel",
            "AlertCannotInstall",
            "AlertOpenAndCloseFrequently",
            "AlertNotificationNotSend",
            "SupplyNotificationNotSend",
            "LogisticNotificationNotSend",
            "WrongData",
            "AddMoreInfo",
            "WrongNotificationOrNotExpected",
            "ReportDiscordanceWithDevice",
            "PageError",
            "SiteDown",
            "DataList",
            "DateProblem",
            "ExportProblem",
            "Syncronization",
            "TokensRequest"
          ],
          "type": "string"
        },
        "OptionalMails": {
          "description": "The optionalMails separated by ;",
          "type": "string"
        },
        "SerialNumber": {
          "description": "The serialNumber",
          "type": "string"
        },
        "IpAddress": {
          "description": "The IpAddress",
          "type": "string"
        },
        "Message": {
          "description": "The Message",
          "type": "string"
        },
        "IsCustomerAssignerTo": {
          "description": "Gets or sets a value indicating whether this instance is customer assigner to.",
          "type": "boolean"
        },
        "IsWaitingTableRelease": {
          "description": "Gets or sets a value indicating whether this instance is waiting table release.",
          "type": "boolean"
        },
        "IsWaitingBinaryRelease": {
          "description": "Gets or sets a value indicating whether this instance is waiting binary release.",
          "type": "boolean"
        },
        "IsWaitingThirdLevel": {
          "description": "Gets or sets a value indicating whether this instance is waiting third level.",
          "type": "boolean"
        },
        "IsFeatureRequest": {
          "description": "Gets or sets a value indicating whether this instance is feature request.",
          "type": "boolean"
        },
        "Attachments": {
          "description": "Gets or sets the attachments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileInfoDto"
          }
        },
        "MileStone": {
          "format": "date-time",
          "description": "Gets or sets the mile stone.",
          "type": "string"
        },
        "Priority": {
          "description": "Gets or sets the priority.",
          "enum": [
            "Minor",
            "Major",
            "Critical"
          ],
          "type": "string"
        },
        "Resolve": {
          "description": "Gets or sets the resolve.",
          "enum": [
            "Open",
            "ProblemFixed",
            "DoNotFix",
            "Duplicate",
            "New"
          ],
          "type": "string"
        },
        "AssignedToId": {
          "description": "OperatorId to assign the ticket",
          "type": "string"
        },
        "Platform": {
          "description": "Gets or sets the platform.",
          "enum": [
            "MpsMonitor",
            "Katun",
            "Olivetti",
            "HpSds",
            "CloudConnected",
            "Ehawk",
            "MpsMonitorOld"
          ],
          "type": "string"
        },
        "GitCommit": {
          "description": "Gets or sets the git commit.",
          "type": "string"
        },
        "OberonTicket": {
          "description": "Gets or sets the oberon ticket.",
          "type": "string"
        },
        "SdsTicket": {
          "description": "Gets or sets the SDS ticket.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CreateTicketResponse]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CreateTicketResponse",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CreateTicketResponse": {
      "description": "Represent a response for ticket creation",
      "type": "object",
      "properties": {
        "Id": {
          "description": "The code of the newly created Ticket",
          "type": "string"
        }
      }
    },
    "UpdateRequest[UpdateTicketDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/UpdateTicketDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "UpdateTicketDto": {
      "description": "UpdateTicket",
      "required": [
        "Title",
        "Category",
        "SubType"
      ],
      "type": "object",
      "properties": {
        "TicketId": {
          "description": "Ticket Id",
          "type": "string"
        },
        "DealerId": {
          "description": "Dealer Id",
          "type": "string"
        },
        "CustomerId": {
          "description": "Customer Id",
          "type": "string"
        },
        "Title": {
          "description": "Ticket title",
          "type": "string"
        },
        "Category": {
          "description": "The Category of the ticket",
          "enum": [
            "EXplorerInstallationRequest",
            "EXplorerInstallationIsolated",
            "EXplorerReInstallationIsolated",
            "EXplorerUpdate",
            "EXplorerInstallationProblem",
            "EXplorerConfigurationProblem",
            "ChangeOrModifyRequests",
            "CustomerProblem",
            "DeviceProblem",
            "DeviceOperationsProblem",
            "AlertProblem",
            "NotificationProblem",
            "ReportProblem",
            "LoginManageSiteProblem",
            "IntegrationProblem",
            "Other"
          ],
          "type": "string"
        },
        "SubType": {
          "description": "The Subcategory of the ticket, based on Category selection",
          "enum": [
            "Other",
            "ExplorerInstallationOnNewCustomer",
            "ExplorerUpdate",
            "ExplorerReinstall",
            "AddingSupplies",
            "DeleteOffices",
            "MoveDevicesOnOtherOfficeRequest",
            "SetDevicesToNotManaged",
            "AlertLimitModification",
            "ScheduledTaskNotWork",
            "NoDevicesFound",
            "CustomerDataNotFoundOnSite",
            "SomeDevicesNotFound",
            "DeviceCounterNotFound",
            "WrongDeviceCounters",
            "DeviceLimitWrong",
            "DeviceNotUpdateFrom",
            "OfficeProjectDeviceAssociation",
            "DeviceNeverContacted",
            "PartNumberNotFoundOnAlertManage",
            "AlertOpenedOnWrongLevel",
            "AlertCannotInstall",
            "AlertOpenAndCloseFrequently",
            "AlertNotificationNotSend",
            "SupplyNotificationNotSend",
            "LogisticNotificationNotSend",
            "WrongData",
            "AddMoreInfo",
            "WrongNotificationOrNotExpected",
            "ReportDiscordanceWithDevice",
            "PageError",
            "SiteDown",
            "DataList",
            "DateProblem",
            "ExportProblem",
            "Syncronization",
            "TokensRequest"
          ],
          "type": "string"
        },
        "OptionalMails": {
          "description": "The optionalMails separated by ;",
          "type": "string"
        },
        "SerialNumber": {
          "description": "The serialNumber",
          "type": "string"
        },
        "IpAddress": {
          "description": "The IpAddress",
          "type": "string"
        },
        "IsCustomerAssignerTo": {
          "description": "Gets or sets a value indicating whether this instance is customer assigner to.",
          "type": "boolean"
        },
        "IsWaitingTableRelease": {
          "description": "Gets or sets a value indicating whether this instance is waiting table release.",
          "type": "boolean"
        },
        "IsWaitingBinaryRelease": {
          "description": "Gets or sets a value indicating whether this instance is waiting binary release.",
          "type": "boolean"
        },
        "isWaitingThirdLevel": {
          "description": "Gets or sets a value indicating whether this instance is waiting third level.",
          "type": "boolean"
        },
        "IsFeatureRequest": {
          "description": "Gets or sets a value indicating whether this instance is feature request.",
          "type": "boolean"
        },
        "IsParked": {
          "description": "Gets or sets a value indicating whether is parked",
          "type": "boolean"
        },
        "IsFlagged": {
          "description": "Gets or sets a value indicating whether is flagged",
          "type": "boolean"
        },
        "MileStone": {
          "format": "date-time",
          "description": "Gets or sets the mile stone.",
          "type": "string"
        },
        "Priority": {
          "description": "Gets or sets the priority.",
          "enum": [
            "Minor",
            "Major",
            "Critical"
          ],
          "type": "string"
        },
        "Resolve": {
          "description": "Gets or sets the resolve.",
          "enum": [
            "Open",
            "ProblemFixed",
            "DoNotFix",
            "Duplicate",
            "New"
          ],
          "type": "string"
        },
        "AssignedToId": {
          "description": "OperatorId to assign the ticket",
          "type": "string"
        },
        "GitCommit": {
          "description": "Gets or sets the git commit.",
          "type": "string"
        },
        "OberonTicket": {
          "description": "Gets or sets the oberon ticket.",
          "type": "string"
        },
        "SdsTicket": {
          "description": "Gets or sets the SDS ticket.",
          "type": "string"
        }
      }
    },
    "CreateRequest[CreateTicketChildDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/CreateTicketChildDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "CreateTicketChildDto": {
      "description": "CreateTicketChild model",
      "required": [
        "TicketId",
        "Message"
      ],
      "type": "object",
      "properties": {
        "TicketId": {
          "description": "Gets or sets the ticket identifier.",
          "type": "string"
        },
        "Message": {
          "description": "Gets or sets the message.",
          "type": "string"
        },
        "IsPrivate": {
          "description": "Gets or sets a value indicating whether this instance is private.",
          "type": "boolean"
        },
        "Attachments": {
          "description": "Gets or sets the attachments.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FileInfoDto"
          }
        },
        "TicketOperatorIdsToNotify": {
          "description": "Gets or sets the ticket operator ids to notify.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetTicketsRequest": {
      "description": "The Get Ticket request",
      "required": [
        "PageNumber",
        "PageRows",
        "SortColumn",
        "SortOrder"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "description": "Gets or sets the customer identifier.",
          "type": "string"
        },
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        },
        "SerialAssetNumber": {
          "description": "Gets or sets the serial asset number.",
          "type": "string"
        },
        "IpAddress": {
          "description": "Gets or sets the ip address.",
          "type": "string"
        },
        "Resolve": {
          "description": "Filter by resolve status, NotClosed and New are filtered together",
          "enum": [
            "Open",
            "ProblemFixed",
            "DoNotFix",
            "Duplicate",
            "New"
          ],
          "type": "string"
        },
        "IdTicket": {
          "format": "int32",
          "description": "Gets or sets the identifier ticket.",
          "type": "integer"
        },
        "Category": {
          "description": "Filter the list by category",
          "enum": [
            "EXplorerInstallationRequest",
            "EXplorerInstallationIsolated",
            "EXplorerReInstallationIsolated",
            "EXplorerUpdate",
            "EXplorerInstallationProblem",
            "EXplorerConfigurationProblem",
            "ChangeOrModifyRequests",
            "CustomerProblem",
            "DeviceProblem",
            "DeviceOperationsProblem",
            "AlertProblem",
            "NotificationProblem",
            "ReportProblem",
            "LoginManageSiteProblem",
            "IntegrationProblem",
            "Other"
          ],
          "type": "string"
        },
        "IsFeatureRequest": {
          "description": "Gets or sets the is feature request.",
          "type": "boolean"
        },
        "IsParked": {
          "description": "Gets or sets the IsParked.",
          "type": "boolean"
        },
        "IsFlagged": {
          "description": "Gets or sets the IsFlagged.",
          "type": "boolean"
        },
        "IsWaitingThirdLevel": {
          "description": "Gets or sets the is waiting third level.",
          "type": "boolean"
        },
        "SubType": {
          "description": "Gets or sets the type of the sub.",
          "enum": [
            "Other",
            "ExplorerInstallationOnNewCustomer",
            "ExplorerUpdate",
            "ExplorerReinstall",
            "AddingSupplies",
            "DeleteOffices",
            "MoveDevicesOnOtherOfficeRequest",
            "SetDevicesToNotManaged",
            "AlertLimitModification",
            "ScheduledTaskNotWork",
            "NoDevicesFound",
            "CustomerDataNotFoundOnSite",
            "SomeDevicesNotFound",
            "DeviceCounterNotFound",
            "WrongDeviceCounters",
            "DeviceLimitWrong",
            "DeviceNotUpdateFrom",
            "OfficeProjectDeviceAssociation",
            "DeviceNeverContacted",
            "PartNumberNotFoundOnAlertManage",
            "AlertOpenedOnWrongLevel",
            "AlertCannotInstall",
            "AlertOpenAndCloseFrequently",
            "AlertNotificationNotSend",
            "SupplyNotificationNotSend",
            "LogisticNotificationNotSend",
            "WrongData",
            "AddMoreInfo",
            "WrongNotificationOrNotExpected",
            "ReportDiscordanceWithDevice",
            "PageError",
            "SiteDown",
            "DataList",
            "DateProblem",
            "ExportProblem",
            "Syncronization",
            "TokensRequest"
          ],
          "type": "string"
        },
        "Priority": {
          "description": "Gets or sets the priority.",
          "enum": [
            "Minor",
            "Major",
            "Critical"
          ],
          "type": "string"
        },
        "OpenedFrom": {
          "format": "date-time",
          "description": "Gets or sets the opened from.",
          "type": "string"
        },
        "OpenedTo": {
          "format": "date-time",
          "description": "Gets or sets the opened to.",
          "type": "string"
        },
        "OwnerName": {
          "description": "Gets or sets the name of the owner.",
          "type": "string"
        },
        "AssignedTo": {
          "description": "Gets or sets the name of the assigned to.",
          "type": "string"
        },
        "TicketType": {
          "description": "Gets or sets the type of the ticket.",
          "enum": [
            "Tickets",
            "InstallationTickets"
          ],
          "type": "string"
        },
        "OberonTicket": {
          "description": "Gets or sets the oberon ticket.",
          "type": "string"
        },
        "SdsTicket": {
          "description": "Gets or sets the SDS ticket.",
          "type": "string"
        },
        "FilterText": {
          "description": "Gets or sets the filter text.",
          "type": "string"
        },
        "PageNumber": {
          "format": "int32",
          "description": "Gets or sets the page number.",
          "type": "integer"
        },
        "PageRows": {
          "format": "int32",
          "description": "Gets or sets the page rows.",
          "type": "integer"
        },
        "SortColumn": {
          "description": "Gets or sets the sort column.",
          "type": "string"
        },
        "SortOrder": {
          "description": "Gets or sets the sort order.",
          "enum": [
            "Asc",
            "Desc"
          ],
          "type": "string"
        }
      }
    },
    "PagedResultResponse[TicketDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TicketDto": {
      "type": "object",
      "properties": {
        "IdTicket": {
          "format": "int32",
          "type": "integer"
        },
        "Title": {
          "type": "string"
        },
        "Priority": {
          "enum": [
            "Minor",
            "Major",
            "Critical"
          ],
          "type": "string"
        },
        "Category": {
          "enum": [
            "EXplorerInstallationRequest",
            "EXplorerInstallationIsolated",
            "EXplorerReInstallationIsolated",
            "EXplorerUpdate",
            "EXplorerInstallationProblem",
            "EXplorerConfigurationProblem",
            "ChangeOrModifyRequests",
            "CustomerProblem",
            "DeviceProblem",
            "DeviceOperationsProblem",
            "AlertProblem",
            "NotificationProblem",
            "ReportProblem",
            "LoginManageSiteProblem",
            "IntegrationProblem",
            "Other"
          ],
          "type": "string"
        },
        "SubType": {
          "enum": [
            "Other",
            "ExplorerInstallationOnNewCustomer",
            "ExplorerUpdate",
            "ExplorerReinstall",
            "AddingSupplies",
            "DeleteOffices",
            "MoveDevicesOnOtherOfficeRequest",
            "SetDevicesToNotManaged",
            "AlertLimitModification",
            "ScheduledTaskNotWork",
            "NoDevicesFound",
            "CustomerDataNotFoundOnSite",
            "SomeDevicesNotFound",
            "DeviceCounterNotFound",
            "WrongDeviceCounters",
            "DeviceLimitWrong",
            "DeviceNotUpdateFrom",
            "OfficeProjectDeviceAssociation",
            "DeviceNeverContacted",
            "PartNumberNotFoundOnAlertManage",
            "AlertOpenedOnWrongLevel",
            "AlertCannotInstall",
            "AlertOpenAndCloseFrequently",
            "AlertNotificationNotSend",
            "SupplyNotificationNotSend",
            "LogisticNotificationNotSend",
            "WrongData",
            "AddMoreInfo",
            "WrongNotificationOrNotExpected",
            "ReportDiscordanceWithDevice",
            "PageError",
            "SiteDown",
            "DataList",
            "DateProblem",
            "ExportProblem",
            "Syncronization",
            "TokensRequest"
          ],
          "type": "string"
        },
        "Resolve": {
          "enum": [
            "Open",
            "ProblemFixed",
            "DoNotFix",
            "Duplicate",
            "New"
          ],
          "type": "string"
        },
        "OpenedOn": {
          "format": "date-time",
          "type": "string"
        },
        "CanceledOn": {
          "format": "date-time",
          "type": "string"
        },
        "ClosedOn": {
          "format": "date-time",
          "type": "string"
        },
        "LastUpdate": {
          "format": "date-time",
          "type": "string"
        },
        "IsCustomerAssignerTo": {
          "type": "boolean"
        },
        "IsWaitingTableRelease": {
          "type": "boolean"
        },
        "IsWaitingBinaryRelease": {
          "type": "boolean"
        },
        "IsWaitingThirdLevel": {
          "type": "boolean"
        },
        "IsFeatureRequest": {
          "type": "boolean"
        },
        "IsParked": {
          "type": "boolean"
        },
        "IsFlagged": {
          "type": "boolean"
        },
        "MileStone": {
          "format": "date-time",
          "type": "string"
        },
        "OwnerId": {
          "type": "string"
        },
        "OwnerNominative": {
          "type": "string"
        },
        "OwnerEmail": {
          "type": "string"
        },
        "OwnerRole": {
          "type": "string"
        },
        "DealerId": {
          "type": "string"
        },
        "CustomerId": {
          "type": "string"
        },
        "SerialAssetNumber": {
          "type": "string"
        },
        "GitCommit": {
          "type": "string"
        },
        "OberonTicket": {
          "type": "string"
        },
        "SdsTicket": {
          "type": "string"
        },
        "IpAddress": {
          "type": "string"
        },
        "AssignedToId": {
          "type": "string"
        },
        "AssignedToNominative": {
          "type": "string"
        },
        "AssignedToEmail": {
          "type": "string"
        },
        "LastReplyRole": {
          "type": "string"
        },
        "OptionalMails": {
          "type": "string"
        },
        "TicketChildren": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketChildDto"
          }
        },
        "DealerCode": {
          "type": "string"
        },
        "DealerDescription": {
          "type": "string"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CustomerDescription": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "TicketChildDto": {
      "type": "object",
      "properties": {
        "SenderId": {
          "type": "string"
        },
        "SenderNominative": {
          "type": "string"
        },
        "SenderEmail": {
          "type": "string"
        },
        "Creation": {
          "format": "date-time",
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "IsPrivate": {
          "type": "boolean"
        },
        "File1": {
          "type": "string"
        },
        "File2": {
          "type": "string"
        },
        "File3": {
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[TicketDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/TicketDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetTicketByNumberRequest": {
      "type": "object",
      "properties": {
        "TicketNumber": {
          "format": "int32",
          "description": "Gets or sets the ticket number.",
          "type": "integer"
        }
      }
    },
    "GetTicketAttachmentRequest": {
      "required": [
        "Id"
      ],
      "type": "object",
      "properties": {
        "AttachmentName": {
          "description": "Gets or sets the name of the attachment.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CategoryLanguageRequest": {
      "description": "Represents a request to reset the password",
      "required": [
        "Language"
      ],
      "type": "object",
      "properties": {
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        }
      }
    },
    "ListResultResponse[TicketSubTypesByCategoryDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketSubTypesByCategoryDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TicketSubTypesByCategoryDto": {
      "type": "object",
      "properties": {
        "Category": {
          "$ref": "#/definitions/KeyValue",
          "description": "Category"
        },
        "SubTypes": {
          "description": "Counters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        }
      }
    },
    "GetTicketOperatorsRequest": {
      "description": "GetTicketOperators",
      "type": "object",
      "properties": {
        "DealerId": {
          "description": "Gets or sets the dealer identifier.",
          "type": "string"
        }
      }
    },
    "ListResultResponse[TicketOperatorDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TicketOperatorDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TicketOperatorDto": {
      "description": "TicketOperator",
      "type": "object",
      "properties": {
        "Nominative": {
          "description": "Gets or sets the nominative.",
          "type": "string"
        },
        "Email": {
          "description": "Gets or sets the email.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[CustomerTicketStatusDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/CustomerTicketStatusDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "CustomerTicketStatusDto": {
      "type": "object",
      "properties": {
        "NrOfDevices": {
          "format": "int32",
          "type": "integer"
        },
        "NrOfConnectors": {
          "format": "int32",
          "type": "integer"
        },
        "AlreadyOpenInstallationTicketId": {
          "type": "string"
        }
      }
    },
    "GetTicketMediaRequest": {
      "description": "Get a ticket media request",
      "required": [
        "MediaFileName",
        "Id"
      ],
      "type": "object",
      "properties": {
        "MediaFileName": {
          "description": "the media file name to retrieve",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[TraceVolumeConfigurationListDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TraceVolumeConfigurationListDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TraceVolumeConfigurationListDto": {
      "description": "Trace volume configuration",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the IdInstalledProduct.",
          "type": "string"
        },
        "IsEnabled": {
          "description": "Gets or sets the IsEnabled.",
          "type": "boolean"
        },
        "Action": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the action for notification or alert."
        },
        "SupplyType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the supply type ."
        },
        "ColorType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the color type ."
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the maintenance kit type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the maintenance kit color."
        },
        "CloseAlertAfterDays": {
          "format": "int32",
          "description": "close alert afer x days",
          "type": "integer"
        },
        "CurrentDeviceCounter": {
          "format": "int32",
          "description": "Current counter",
          "type": "integer"
        },
        "LastEventCounter": {
          "format": "int32",
          "description": "Last event Counter",
          "type": "integer"
        },
        "ConditionVolume": {
          "format": "int32",
          "description": "ConditionVolume",
          "type": "integer"
        },
        "CurrentProgressPercentage": {
          "format": "int32",
          "description": "Current progress percentage",
          "type": "integer"
        },
        "CounterType": {
          "description": "Gets or sets the type of the counter.",
          "enum": [
            "C",
            "M",
            "T",
            "CA3",
            "MA3",
            "F"
          ],
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[TraceVolumeConfigurationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/TraceVolumeConfigurationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TraceVolumeConfigurationDto": {
      "description": "Trace volume configuration",
      "type": "object",
      "properties": {
        "DeviceId": {
          "description": "Gets or sets the IdInstalledProduct.",
          "type": "string"
        },
        "IsEnabled": {
          "description": "Gets or sets the IsEnabled.",
          "type": "boolean"
        },
        "Action": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the action for notification or alert."
        },
        "SupplyType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the supply type"
        },
        "ColorType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the color type"
        },
        "MaintenanceKitType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the type of the maintenanceKit type."
        },
        "MaintenanceKitColor": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the color of the maintenance kit."
        },
        "CloseAlertAfterDays": {
          "format": "int32",
          "description": "close alert afer x days",
          "type": "integer"
        },
        "TollerancePercentageNotification": {
          "format": "int32",
          "description": "Tollerance percentage notification",
          "type": "integer"
        },
        "DeletedAtUTC": {
          "format": "date-time",
          "description": "DeletedAtUTC",
          "type": "string"
        },
        "TraceVolumeConfigurationConditions": {
          "description": "TraceVolumeConfigurationConditions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TraceVolumeConfigurationConditionDto"
          }
        },
        "TraceVolumeInstalledProductEvents": {
          "description": "TraceVolumeConfigurationConditions",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TraceVolumeInstalledProductEventDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "TraceVolumeConfigurationConditionDto": {
      "description": "Trace volume configuration",
      "type": "object",
      "properties": {
        "TraceVolumeConfigurationId": {
          "description": "Gets or sets the IdTracevolumeConfiguration.",
          "type": "string"
        },
        "CounterType": {
          "$ref": "#/definitions/EntityIdDescIntDto",
          "description": "Gets or sets the counterType"
        },
        "Volume": {
          "format": "int32",
          "description": "Gets or sets the volume",
          "type": "integer"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "TraceVolumeInstalledProductEventDto": {
      "description": "Trace volume configuration",
      "type": "object",
      "properties": {
        "TraceVolumeConfigurationId": {
          "description": "Gets or sets the IdTracevolumeConfiguration.",
          "type": "string"
        },
        "StartCounter": {
          "format": "int32",
          "description": "Gets or sets the start counter",
          "type": "integer"
        },
        "FiredAtUTC": {
          "format": "date-time",
          "description": "Gets or sets the fired",
          "type": "string"
        },
        "StartAtUTC": {
          "format": "date-time",
          "description": "Gets or sets the start at UTC.",
          "type": "string"
        },
        "EndAtUTC": {
          "format": "date-time",
          "description": "Gets or sets the end at UTC.",
          "type": "string"
        },
        "CreatedByAccountName": {
          "description": "Gets or sets the name of the created by account.",
          "type": "string"
        },
        "ClosedByAccountName": {
          "description": "Gets or sets the name of the closed by account.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "CreateRequest[TraceVolumeConfigurationDto]": {
      "description": "Represents the generic request for creating an object",
      "required": [
        "ObjectToCreate"
      ],
      "type": "object",
      "properties": {
        "ObjectToCreate": {
          "$ref": "#/definitions/TraceVolumeConfigurationDto",
          "description": "Gets or sets the object to create."
        }
      }
    },
    "UpdateRequest[TraceVolumeConfigurationDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/TraceVolumeConfigurationDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "TraceVolumeNewEventRequest": {
      "type": "object",
      "properties": {
        "TraceVolumeConfigurationId": {
          "description": "Gets or sets the TraceVolumeConfigurationId",
          "type": "string"
        },
        "StartCounter": {
          "format": "int32",
          "description": "Gets or sets the start counter",
          "type": "integer"
        }
      }
    },
    "SingleResultResponse[TradingPartnerDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/TradingPartnerDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "PagedResultResponse[TradingPartnerDto]": {
      "description": "Represents a response that returns a pagedlist result",
      "type": "object",
      "properties": {
        "TotalRows": {
          "format": "int32",
          "description": "Gets or sets the total rows.",
          "type": "integer"
        },
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TradingPartnerDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "TradingPartnerUpdateRequest": {
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "Gets or sets the Dealer code.",
          "type": "string"
        },
        "Id": {
          "description": "Gets or sets the Id.",
          "type": "string"
        },
        "Name": {
          "description": "Gets or sets the Name.",
          "type": "string"
        }
      }
    },
    "SingleResultResponse[WhiteLabelCustomizationDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/WhiteLabelCustomizationDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "WhiteLabelCustomizationDto": {
      "type": "object",
      "properties": {
        "PlatformName": {
          "type": "string"
        },
        "Logo": {
          "type": "string"
        },
        "LogoLogin": {
          "type": "string"
        },
        "LoginBackgroundClass": {
          "type": "string"
        },
        "Theme": {
          "type": "string"
        },
        "ShowLegalInfoAndCredits": {
          "type": "boolean"
        },
        "HideHeader": {
          "type": "boolean"
        },
        "UseNewExperience": {
          "type": "boolean"
        },
        "HideJumbotronNews": {
          "type": "boolean"
        },
        "BackCoversLogin": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DashboardPowerBIReportId": {
          "type": "string"
        },
        "DashboardPowerBIWorkspaceId": {
          "type": "string"
        },
        "Platform": {
          "enum": [
            "MpsMonitor",
            "Katun",
            "Olivetti",
            "HpSds",
            "CloudConnected",
            "Ehawk",
            "MpsMonitorOld"
          ],
          "type": "string"
        },
        "RaygunApiKey": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        }
      }
    },
    "UpdateRequest[WhiteLabelDto]": {
      "description": "Represents the generic request for updating an object",
      "required": [
        "ObjectToUpdate"
      ],
      "type": "object",
      "properties": {
        "ObjectToUpdate": {
          "$ref": "#/definitions/WhiteLabelDto",
          "description": "Gets or sets the object to update."
        }
      }
    },
    "WhiteLabelDto": {
      "description": "Defines the whitelabel object",
      "type": "object",
      "properties": {
        "DealerCode": {
          "description": "The dealer code",
          "type": "string"
        },
        "IsActive": {
          "description": "Defines is the Whitelabel configuration is active or not",
          "type": "boolean"
        },
        "IsPortalActive": {
          "description": "Defines if the Whitelabel can configure the Portal. Is enabled by Administrators",
          "type": "boolean"
        },
        "IsDcaActive": {
          "description": "Defines if the Whitelabel can configure the DCA. Is enabled by Administrators",
          "type": "boolean"
        },
        "DemoDays": {
          "format": "int32",
          "description": "Defines the default demo days",
          "type": "integer"
        },
        "PortalEmailTemplates": {
          "description": "Defines the list of email template customized",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteLabelPortalEmailTemplateDto"
          }
        },
        "PortalName": {
          "description": "The Portal Name and Page Title",
          "type": "string"
        },
        "PortalUrls": {
          "description": "Reverse proxy URLS separated by ;",
          "type": "string"
        },
        "PortalStyle": {
          "$ref": "#/definitions/WhiteLabelPortalStyleDto",
          "description": "Serialized Object with all Portal personalizations"
        },
        "SetupName": {
          "type": "string"
        },
        "SetupImage": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "SetupImageSmall": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "DeleteSetupImage": {
          "type": "boolean"
        },
        "DeleteSetupImageSmall": {
          "type": "boolean"
        },
        "DeletePortalStyleLogo": {
          "type": "boolean"
        },
        "DeletePortalStyleLogoLogin": {
          "type": "boolean"
        },
        "DeletePortalStyleBackCoversLogin1": {
          "type": "boolean"
        },
        "DeletePortalStyleBackCoversLogin2": {
          "type": "boolean"
        },
        "DeletePortalStyleBackCoversLogin3": {
          "type": "boolean"
        },
        "ForceHPJamcInstallation": {
          "description": "Force Jamc Installation",
          "type": "boolean"
        },
        "DcaLicenses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteLabelDcaLicenseDto"
          }
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "WhiteLabelPortalEmailTemplateDto": {
      "type": "object",
      "properties": {
        "PortalEmailTemplateType": {
          "enum": [
            "DemoRequestConfirmation",
            "DemoRequestActivation",
            "DemoRequestDeclined",
            "RequestChangePassword",
            "NewUserCreation",
            "DemoExpiring",
            "DemoExpired",
            "DemoReminder",
            "DemoReminderCustomerCreationDownloadConnector",
            "DemoReminderDevicesNotFound",
            "DemoExpiringWithHighActivity",
            "SendOtpCode"
          ],
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Body": {
          "type": "string"
        },
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Configuration": {
          "$ref": "#/definitions/WhiteLabelPortalEmailTemplateConfigurationDto"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "WhiteLabelPortalStyleDto": {
      "type": "object",
      "properties": {
        "Logo": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "LogoLogin": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "LoginBackgroundClass": {
          "type": "string"
        },
        "Theme": {
          "type": "string"
        },
        "ShowLegalInfoAndCredits": {
          "type": "boolean"
        },
        "HideHeader": {
          "type": "boolean"
        },
        "UseNewExperience": {
          "type": "boolean"
        },
        "HideJumbotronNews": {
          "type": "boolean"
        },
        "BackCoversLogin1": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "BackCoversLogin2": {
          "$ref": "#/definitions/FileInfoDto"
        },
        "BackCoversLogin3": {
          "$ref": "#/definitions/FileInfoDto"
        }
      }
    },
    "WhiteLabelDcaLicenseDto": {
      "description": "",
      "type": "object",
      "properties": {
        "Text": {
          "type": "string"
        },
        "Language": {
          "enum": [
            "Italiano",
            "English",
            "Deutsche",
            "French",
            "Spanish",
            "Norwegian",
            "Korean",
            "Portuguese",
            "Catalan",
            "Japanese",
            "Vietnamese",
            "Thai",
            "TraditionalChinese",
            "Polish"
          ],
          "type": "string"
        },
        "IsActive": {
          "type": "boolean"
        },
        "Id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        }
      }
    },
    "WhiteLabelPortalEmailTemplateConfigurationDto": {
      "type": "object",
      "properties": {
        "DemoExpiringOptions": {
          "$ref": "#/definitions/DemoExpiringOptions"
        },
        "DemoExpiredOptions": {
          "$ref": "#/definitions/DemoExpiredOptions"
        },
        "DemoExpiringWithHighActivityOptions": {
          "$ref": "#/definitions/DemoExpiringWithHighActivityOptions"
        },
        "DemoExpiredWithHighActivityOptions": {
          "$ref": "#/definitions/DemoExpiredWithHighActivityOptions"
        },
        "DemoReminderOptions": {
          "$ref": "#/definitions/DemoReminderOptions"
        },
        "DemoReminderCustomerCreationDownloadConnectorOptions": {
          "$ref": "#/definitions/DemoReminderCustomerCreationDownloadConnectorOptions"
        },
        "DemoReminderDevicesNotFoundOptions": {
          "$ref": "#/definitions/DemoReminderDevicesNotFoundOptions"
        }
      }
    },
    "DemoExpiringOptions": {
      "type": "object",
      "properties": {
        "NoticeDays": {
          "type": "string"
        }
      }
    },
    "DemoExpiredOptions": {
      "type": "object",
      "properties": {
        "NoticeDays": {
          "type": "string"
        }
      }
    },
    "DemoExpiringWithHighActivityOptions": {
      "type": "object",
      "properties": {
        "NoticeDays": {
          "type": "string"
        }
      }
    },
    "DemoExpiredWithHighActivityOptions": {
      "type": "object",
      "properties": {
        "NoticeDays": {
          "type": "string"
        }
      }
    },
    "DemoReminderOptions": {
      "type": "object",
      "properties": {
        "NoticeDays": {
          "type": "string"
        }
      }
    },
    "DemoReminderCustomerCreationDownloadConnectorOptions": {
      "type": "object",
      "properties": {
        "NoticeDays": {
          "type": "string"
        }
      }
    },
    "DemoReminderDevicesNotFoundOptions": {
      "type": "object",
      "properties": {
        "NoticeDays": {
          "type": "string"
        }
      }
    },
    "SingleResultResponse[WhiteLabelDto]": {
      "description": "Represents a response that returns a single result",
      "type": "object",
      "properties": {
        "Result": {
          "$ref": "#/definitions/WhiteLabelDto",
          "description": "Gets or sets the result."
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "GetWhitelabelPlaceholdersRequest": {
      "type": "object",
      "properties": {
        "PortalEmailTemplateType": {
          "enum": [
            "DemoRequestConfirmation",
            "DemoRequestActivation",
            "DemoRequestDeclined",
            "RequestChangePassword",
            "NewUserCreation",
            "DemoExpiring",
            "DemoExpired",
            "DemoReminder",
            "DemoReminderCustomerCreationDownloadConnector",
            "DemoReminderDevicesNotFound",
            "DemoExpiringWithHighActivity",
            "SendOtpCode"
          ],
          "type": "string"
        }
      }
    },
    "ListResultResponse[WhiteLabelPlaceholderDto]": {
      "description": "Represents a response that returns a list result",
      "type": "object",
      "properties": {
        "Result": {
          "description": "Gets or sets the result.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WhiteLabelPlaceholderDto"
          }
        },
        "IsValid": {
          "description": "Returns true if the response is valid (No errors).",
          "type": "boolean"
        },
        "Errors": {
          "description": "Gets or sets the errors. The list is empty if the response is valid",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeDesc"
          }
        },
        "ReturnValue": {
          "description": "Gets or sets the generic string return value.",
          "type": "string"
        }
      }
    },
    "WhiteLabelPlaceholderDto": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "GroupName": {
          "type": "string"
        },
        "PortalEmailTemplateType": {
          "enum": [
            "DemoRequestConfirmation",
            "DemoRequestActivation",
            "DemoRequestDeclined",
            "RequestChangePassword",
            "NewUserCreation",
            "DemoExpiring",
            "DemoExpired",
            "DemoReminder",
            "DemoReminderCustomerCreationDownloadConnector",
            "DemoReminderDevicesNotFound",
            "DemoExpiringWithHighActivity",
            "SendOtpCode"
          ],
          "type": "string"
        },
        "IsRequired": {
          "type": "boolean"
        }
      }
    },
    "SetDevicesUpdateFirmwareRequest": {
      "description": "Defines the date\\firmware when upgrade the devices specified",
      "type": "object",
      "properties": {
        "FwVersion": {
          "type": "string"
        },
        "OperationFirmwareUpdateAtUtc": {
          "format": "date-time",
          "type": "string"
        },
        "DeviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SetZebraSettingsRequest": {
      "type": "object",
      "properties": {
        "OperationSetSettingsAtUtc": {
          "format": "date-time",
          "description": "Defines the date when reboot the devices specified",
          "type": "string"
        },
        "DeviceIds": {
          "description": "List of device id",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Settings": {
          "$ref": "#/definitions/ZebraSettingsDto"
        }
      }
    },
    "ZebraSettingsDto": {
      "type": "object",
      "properties": {
        "FtpState": {
          "type": "boolean"
        },
        "TelnetState": {
          "type": "boolean"
        },
        "PrintMethod": {
          "format": "int32",
          "type": "integer"
        },
        "PrintMode": {
          "format": "int32",
          "type": "integer"
        },
        "SensorType": {
          "format": "int32",
          "type": "integer"
        },
        "RelativeDarkness": {
          "type": "string"
        },
        "SetWifiSettings": {
          "type": "boolean"
        },
        "WifiSettings": {
          "$ref": "#/definitions/ZebraWifiSettingsDto"
        },
        "DisplayPasswordLevel": {
          "format": "int32",
          "type": "integer"
        },
        "Password": {
          "type": "string"
        },
        "SetMediaFeedSettings": {
          "type": "boolean"
        },
        "Darkness": {
          "format": "int32",
          "type": "integer"
        },
        "DevicePrintReProgram2Key": {
          "type": "boolean"
        },
        "MediaFeedSettings": {
          "$ref": "#/definitions/ZebraMediaFeedSettingsDto"
        }
      }
    },
    "ZebraWifiSettingsDto": {
      "type": "object",
      "properties": {
        "CountryCode": {
          "type": "string"
        },
        "AllowedBand": {
          "enum": [
            "All",
            "Band2_4",
            "Band5"
          ],
          "type": "string"
        },
        "ChannelMask": {
          "type": "string"
        },
        "EESID": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "ZebraMediaFeedSettingsDto": {
      "type": "object",
      "properties": {
        "OnClosing": {
          "format": "int32",
          "type": "integer"
        },
        "OnPowerUp": {
          "format": "int32",
          "type": "integer"
        }
      }
    }
  }
}
