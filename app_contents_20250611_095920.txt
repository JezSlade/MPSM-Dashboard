WEB APPLICATION CONTENT COLLECTION
Generated: Wed, Jun 11, 2025 10:00:01 AM
----------------------------------------

==== BINARY FILE: ./.DS_Store ====
Size: 6148 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
[Binary content not displayed]


==== CONFIG FILE: ./.env ====
Size: 339 bytes
Last Modified: Mon, Jun  9, 2025  1:42:24 PM
----------------------------------------
CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/
DEALER_CODE=NY06AGDWUQ
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr
DEBUG=true


==== TEXT FILE: ./.github/workflows/deploy.yml ====
Size: 1351 bytes
Last Modified: Tue, Jun 10, 2025 11:28:40 AM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File
        run: |
          echo "window.appVersion = \"0.0.0.${GITHUB_RUN_NUMBER}\";" > public/version.js
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          password: Deploy123!
          protocol: ftp
          port: 21

          local-dir:   ./public/
          server-dir:  /

          dangerous-clean-slate: true

          exclude: |
            .github/**
          
          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo "### DEPLOYMENT SUMMARY ###"
          echo "- Version: 0.0.0.${GITHUB_RUN_NUMBER}"
          echo "- FTP Server: ftp.resolutionsbydesign.us"
          echo "- Server Directory: /"
          echo "- Local Directory: ./public/"
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}



==== CONFIG FILE: ./.gitignore ====
Size: 0 bytes
Last Modified: Wed, Jun 11, 2025  7:49:35 AM
----------------------------------------



==== CONFIG FILE: ./.htaccess ====
Size: 365 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
----------------------------------------
RewriteEngine On

# 1) If the request matches an existing file or directory (including /public/css/…),
#    serve it directly and stop rewriting.
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# 2) Otherwise forward everything to public/index.php
RewriteRule ^ public/index.php [L]



==== TEXT FILE: ./app_contents_20250611_095920.txt ====
Size: 2931 bytes
Last Modified: Wed, Jun 11, 2025 10:00:04 AM
----------------------------------------
WEB APPLICATION CONTENT COLLECTION
Generated: Wed, Jun 11, 2025 10:00:01 AM
----------------------------------------

==== BINARY FILE: ./.DS_Store ====
Size: 6148 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
[Binary content not displayed]


==== CONFIG FILE: ./.env ====
Size: 339 bytes
Last Modified: Mon, Jun  9, 2025  1:42:24 PM
----------------------------------------
CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/
DEALER_CODE=NY06AGDWUQ
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr
DEBUG=true


==== TEXT FILE: ./.github/workflows/deploy.yml ====
Size: 1351 bytes
Last Modified: Tue, Jun 10, 2025 11:28:40 AM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File
        run: |
          echo "window.appVersion = \"0.0.0.${GITHUB_RUN_NUMBER}\";" > public/version.js
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          password: Deploy123!
          protocol: ftp
          port: 21

          local-dir:   ./public/
          server-dir:  /

          dangerous-clean-slate: true

          exclude: |
            .github/**
          
          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo "### DEPLOYMENT SUMMARY ###"
          echo "- Version: 0.0.0.${GITHUB_RUN_NUMBER}"
          echo "- FTP Server: ftp.resolutionsbydesign.us"
          echo "- Server Directory: /"
          echo "- Local Directory: ./public/"
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}



==== CONFIG FILE: ./.gitignore ====
Size: 0 bytes
Last Modified: Wed, Jun 11, 2025  7:49:35 AM
----------------------------------------



==== CONFIG FILE: ./.htaccess ====
Size: 365 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
----------------------------------------
RewriteEngine On

# 1) If the request matches an existing file or directory (including /public/css/…),
#    serve it directly and stop rewriting.
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# 2) Otherwise forward everything to public/index.php
RewriteRule ^ public/index.php [L]



==== TEXT FILE: ./app_contents_20250611_095920.txt ====
Size: 2931 bytes
Last Modified: Wed, Jun 11, 2025 10:00:04 AM
----------------------------------------



==== TEXT FILE: ./app_structure_20250611_095920.json ====
Size: 4617486 bytes
Last Modified: Wed, Jun 11, 2025 10:00:01 AM
----------------------------------------
[
{
    "path": ".DS_Store",
    "name": ".DS_Store",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./.DS_Store 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119124 41119124 18446744073709551615 -1
2025-06-10 07:50:32",
    "size_bytes":   File: "./.DS_Store"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119284   Available: 41119284
Inodes: Total: 18446744073709551615 Free: -1
6148,
    "mime_type": "application/octet-stream",
    "file_type": "Binary",
    "content": "[Binary file - content skipped]"
}
,
{
    "path": ".env",
    "name": ".env",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./.env 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119122 41119122 18446744073709551615 -1
2025-06-09 13:42:24",
    "size_bytes":   File: "./.env"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119122   Available: 41119122
Inodes: Total: 18446744073709551615 Free: -1
339,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/
DEALER_CODE=NY06AGDWUQ
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr
DEBUG=true"
}
,
{
    "path": ".github/workflows/deploy.yml",
    "name": "deploy.yml",
    "directory": ".github/workflows",
    "creation_date": "",
    "modification_date": "./.github/workflows/deploy.yml 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119154 41119154 18446744073709551615 -1
2025-06-10 11:28:40",
    "size_bytes":   File: "./.github/workflows/deploy.yml"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119122   Available: 41119122
Inodes: Total: 18446744073709551615 Free: -1
1351,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "name: FTP Deploy - Final Lean

on:
  push:
    branches: [\"main\"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File
        run: |
          echo \"window.appVersion = \\\"0.0.0.${GITHUB_RUN_NUMBER}\\\";\" > public/version.js
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          password: Deploy123!
          protocol: ftp
          port: 21

          local-dir:   ./public/
          server-dir:  /

          dangerous-clean-slate: true

          exclude: |
            .github/**
          
          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo \"### DEPLOYMENT SUMMARY ###\"
          echo \"- Version: 0.0.0.${GITHUB_RUN_NUMBER}\"
          echo \"- FTP Server: ftp.resolutionsbydesign.us\"
          echo \"- Server Directory: /\"
          echo \"- Local Directory: ./public/\"
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}"
}
,
{
    "path": ".gitignore",
    "name": ".gitignore",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./.gitignore 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119005 41119005 18446744073709551615 -1
2025-06-11 07:49:35",
    "size_bytes":   File: "./.gitignore"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119037   Available: 41119037
Inodes: Total: 18446744073709551615 Free: -1
0,
    "mime_type": "inode/x-empty",
    "file_type": "Binary",
    "content": "[Binary file - content skipped]"
}
,
{
    "path": ".htaccess",
    "name": ".htaccess",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./.htaccess 2a74c93000000000 255 3e72eff 4096 4096 62093311 41118972 41118972 18446744073709551615 -1
2025-06-10 07:50:32",
    "size_bytes":   File: "./.htaccess"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41118972   Available: 41118972
Inodes: Total: 18446744073709551615 Free: -1
365,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "RewriteEngine On

# 1) If the request matches an existing file or directory (including /public/css/…),
#    serve it directly and stop rewriting.
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# 2) Otherwise forward everything to public/index.php
RewriteRule ^ public/index.php [L]"
}
,
{
    "path": "app_structure_20250611_095920.json",
    "name": "app_structure_20250611_095920.json",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./app_structure_20250611_095920.json 2a74c93000000000 255 3e72eff 4096 4096 62093311 41118972 41118972 18446744073709551615 -1
2025-06-11 09:59:30",
    "size_bytes":   File: "./app_structure_20250611_095920.json"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41118972   Available: 41118972
Inodes: Total: 18446744073709551615 Free: -1
5151,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "[
{
    \"path\": \".DS_Store\",
    \"name\": \".DS_Store\",
    \"directory\": \".\",
    \"creation_date\": \"\",
    \"modification_date\": \"./.DS_Store 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119124 41119124 18446744073709551615 -1
2025-06-10 07:50:32\",
    \"size_bytes\":   File: \"./.DS_Store\"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119284   Available: 41119284
Inodes: Total: 18446744073709551615 Free: -1
6148,
    \"mime_type\": \"application/octet-stream\",
    \"file_type\": \"Binary\",
    \"content\": \"[Binary file - content skipped]\"
}
,
{
    \"path\": \".env\",
    \"name\": \".env\",
    \"directory\": \".\",
    \"creation_date\": \"\",
    \"modification_date\": \"./.env 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119122 41119122 18446744073709551615 -1
2025-06-09 13:42:24\",
    \"size_bytes\":   File: \"./.env\"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119122   Available: 41119122
Inodes: Total: 18446744073709551615 Free: -1
339,
    \"mime_type\": \"text/plain\",
    \"file_type\": \"Text\",
    \"content\": \"CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/
DEALER_CODE=NY06AGDWUQ
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr
DEBUG=true\"
}
,
{
    \"path\": \".github/workflows/deploy.yml\",
    \"name\": \"deploy.yml\",
    \"directory\": \".github/workflows\",
    \"creation_date\": \"\",
    \"modification_date\": \"./.github/workflows/deploy.yml 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119154 41119154 18446744073709551615 -1
2025-06-10 11:28:40\",
    \"size_bytes\":   File: \"./.github/workflows/deploy.yml\"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119122   Available: 41119122
Inodes: Total: 18446744073709551615 Free: -1
1351,
    \"mime_type\": \"text/plain\",
    \"file_type\": \"Text\",
    \"content\": \"name: FTP Deploy - Final Lean

on:
  push:
    branches: [\\\"main\\\"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File
        run: |
          echo \\\"window.appVersion = \\\\\\\"0.0.0.${GITHUB_RUN_NUMBER}\\\\\\\";\\\" > public/version.js
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          password: Deploy123!
          protocol: ftp
          port: 21

          local-dir:   ./public/
          server-dir:  /

          dangerous-clean-slate: true

          exclude: |
            .github/**
          
          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo \\\"### DEPLOYMENT SUMMARY ###\\\"
          echo \\\"- Version: 0.0.0.${GITHUB_RUN_NUMBER}\\\"
          echo \\\"- FTP Server: ftp.resolutionsbydesign.us\\\"
          echo \\\"- Server Directory: /\\\"
          echo \\\"- Local Directory: ./public/\\\"
        env:
          GITHUB_RUN_NUMBER: ${{ github.run_number }}\"
}
,
{
    \"path\": \".gitignore\",
    \"name\": \".gitignore\",
    \"directory\": \".\",
    \"creation_date\": \"\",
    \"modification_date\": \"./.gitignore 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119005 41119005 18446744073709551615 -1
2025-06-11 07:49:35\",
    \"size_bytes\":   File: \"./.gitignore\"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119037   Available: 41119037
Inodes: Total: 18446744073709551615 Free: -1
0,
    \"mime_type\": \"inode/x-empty\",
    \"file_type\": \"Binary\",
    \"content\": \"[Binary file - content skipped]\"
}
,
{
    \"path\": \".htaccess\",
    \"name\": \".htaccess\",
    \"directory\": \".\",
    \"creation_date\": \"\",
    \"modification_date\": \"./.htaccess 2a74c93000000000 255 3e72eff 4096 4096 62093311 41118972 41118972 18446744073709551615 -1
2025-06-10 07:50:32\",
    \"size_bytes\":   File: \"./.htaccess\"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41118972   Available: 41118972
Inodes: Total: 18446744073709551615 Free: -1
365,
    \"mime_type\": \"text/plain\",
    \"file_type\": \"Text\",
    \"content\": \"RewriteEngine On

# 1) If the request matches an existing file or directory (including /public/css/…),
#    serve it directly and stop rewriting.
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -f [OR]
RewriteCond %{DOCUMENT_ROOT}%{REQUEST_URI} -d
RewriteRule ^ - [L]

# 2) Otherwise forward everything to public/index.php
RewriteRule ^ public/index.php [L]\"
}"
}
,
{
    "path": "backup.deploy.yml",
    "name": "backup.deploy.yml",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./backup.deploy.yml 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119035 41119035 18446744073709551615 -1
2025-06-10 10:36:20",
    "size_bytes":   File: "./backup.deploy.yml"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119035   Available: 41119035
Inodes: Total: 18446744073709551615 Free: -1
3250,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "name: FTP Deploy - Final Lean

on:
  push:
    branches: [\"main\"] # Trigger on pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Run the job on a fresh Ubuntu environment
    timeout-minutes: 15 # Overall job timeout (can be adjusted if deployments are very fast)

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          # IMPORTANT: Replace these hardcoded values with GitHub Secrets for production!
          # Go to your repository settings -> Secrets and variables -> Actions
          # Add:
          #   FTP_SERVER: ftp.resolutionsbydesign.us
          #   FTP_USERNAME: mpsm@mpsm.resolutionsbydesign.us
          #   FTP_PASSWORD: YourActualStrongPassword!
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          password: Deploy123! 
          
          local-dir: ./ # Deploy from the root of your GitHub repository
          # The 'server-directory' should be '/' if your cPanel FTP user's
          # \"Home Directory\" is already set to the target web root
          # (e.g., /home/resolut7/public_html/mpsm.resolutionsbydesign.us/).
          # This tells the action to deploy INTO the root of your FTP login.
          server-directory: / 
          
          protocol: ftp # Use 'ftps' if your server supports and requires explicit FTPS
          exclude: .git/ # Exclude the .git directory from being uploaded
          log-level: verbose # Keep verbose logging for detailed transfer info
          delete: true # Delete files on the server that are not in the local repository
          timeout: 120 # Timeout for the deploy operation in seconds (2 minutes)

      - name: 📜 Deployment Completed Report
        # This step provides a summary of the deployment outcome.
        run: |
          echo \"### DEPLOYMENT SUMMARY ###\" > report.md
          echo \"- Deployment Method: SamKirkland/FTP-Deploy-Action\" >> report.md
          echo \"- Local repository root (./) deployed to: FTP account's home directory\" >> report.md
          echo \"  (Expected server path: /home/resolut7/public_html/mpsm.resolutionsbydesign.us/)\" >> report.md
          echo \"- Website URL: https://mpsm.resolutionsbydesign.us\" >> report.md
          echo \"\" >> report.md
          echo \"---\" >> report.md
          echo \"**Next Steps:**\" >> report.md
          echo \"1. **Verify Live Site:** Check https://mpsm.resolutionsbydesign.us in your browser.\" >> report.md
          echo \"2. **IMPORTANT: Secure Credentials!** Move your FTP server, username, and password into GitHub Repository Secrets.\" >> report.md
          echo \"   (Go to Settings -> Secrets and variables -> Actions in your GitHub repo)\" >> report.md
          echo \"3. **Clear Cache:** If changes aren't visible, try clearing your browser cache or any server-side caching.\" >> report.md
          echo \"4. **GreenGeeks Support:** If issues persist, contact GreenGeeks support with a link to this successful workflow run.\" >> report.md
          
          cat report.md"
}
,
{
    "path": "collectdata.sh",
    "name": "collectdata.sh",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./collectdata.sh 2a74c93000000000 255 3e72eff 4096 4096 62093311 41119002 41119002 18446744073709551615 -1
2025-06-11 08:22:20",
    "size_bytes":   File: "./collectdata.sh"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41119034   Available: 41119034
Inodes: Total: 18446744073709551615 Free: -1
5860,
    "mime_type": "text/x-shellscript",
    "file_type": "Text",
    "content": "#!/bin/bash

# Combined Web Application Code Collector
# Outputs both JSON structure and readable text content

# Configuration
JSON_OUTPUT=\"app_structure_$(date +'%Y%m%d_%H%M%S').json\"
TEXT_OUTPUT=\"app_contents_$(date +'%Y%m%d_%H%M%S').txt\"

# Files to include full content for
FULL_EXTENSIONS=(\"php\" \"html\" \"htm\" \"css\" \"js\" \"json\" \"xml\" \"md\" \"txt\" \"env\" \"gitignore\" \"htaccess\" \"sh\")
MAX_PREVIEW_SIZE=5000  # 5KB previews for other text files

# Directories to exclude
EXCLUDE_DIRS=(\"vendor\" \"node_modules\" \".git\" \".idea\" \"build\" \"dist\" \"cache\" \"logs\")

# Binary extensions to skip content for
EXCLUDE_EXT=(\"png\" \"jpg\" \"jpeg\" \"gif\" \"svg\" \"ico\" \"woff\" \"woff2\" \"ttf\" \"eot\" \"pdf\" \"zip\" \"tar.gz\" \"mp3\" \"mp4\" \"avi\" \"mov\")

# Helper functions
escape_json() {
    sed 's/\\\\/\\\\\\\\/g; s/\"/\\\\\"/g; s/\\t/\\\\t/g; s/\\r/\\\\r/g; s/\\n/\\\\n/g'
}

is_text_file() {
    file -b --mime-encoding \"$1\" | grep -qvi 'binary'
}

should_exclude() {
    local file=\"$1\"
    
    # Check excluded directories
    for dir in \"${EXCLUDE_DIRS[@]}\"; do
        if [[ \"$file\" == *\"/$dir/\"* ]]; then
            return 0
        fi
    done
    
    # Check excluded extensions
    local extension=\"${file##*.}\"
    for ext in \"${EXCLUDE_EXT[@]}\"; do
        if [[ \"${extension,,}\" == \"${ext,,}\" ]]; then
            return 0
        fi
    done
    
    return 1
}

# Generate JSON structure
echo \"Generating JSON structure...\"
echo \"[\" > \"$JSON_OUTPUT\"
first_entry=true

find . -type f -print0 | while IFS= read -r -d '' file; do
    if should_exclude \"$file\"; then
        continue
    fi

    FILE_SIZE=$(stat -f '%z' \"$file\" 2>/dev/null || stat -c '%s' \"$file\")

    CREATION_DATE=$(stat -f '%B' \"$file\" 2>/dev/null || stat -c '%W' \"$file\" 2>/dev/null)
    if [[ \"$CREATION_DATE\" -le 0 || -z \"$CREATION_DATE\" ]]; then
        CREATION_DATE=\"N/A\"
    else
        CREATION_DATE=$(date -r \"$CREATION_DATE\" '+%Y-%m-%dT%H:%M:%S' 2>/dev/null || date -d @\"$CREATION_DATE\" '+%Y-%m-%dT%H:%M:%S')
    fi

    MOD_DATE=$(stat -f '%Sm' -t '%Y-%m-%dT%H:%M:%S' \"$file\" 2>/dev/null || stat -c '%y' \"$file\" | cut -d'.' -f1)

    MIME_TYPE=$(file --mime-type -b \"$file\")
    FILE_TYPE=$(echo \"$MIME_TYPE\" | grep -qi 'text\\|json\\|xml\\|script' && echo \"Text\" || echo \"Binary\")

    EXT=\"${file##*.}\"
    INCLUDE_FULL=false
    for ext in \"${FULL_EXTENSIONS[@]}\"; do
        if [[ \"${EXT,,}\" == \"$ext\" ]]; then
            INCLUDE_FULL=true
            break
        fi
    done

    CONTENT=\"\"
    if [[ \"$FILE_TYPE\" == \"Text\" ]]; then
        if [[ \"$INCLUDE_FULL\" == true ]]; then
            CONTENT=$(cat \"$file\" | escape_json)
        else
            CONTENT=$(head -c $MAX_PREVIEW_SIZE \"$file\" | escape_json)
        fi
    else
        CONTENT=\"[Binary file - content skipped]\"
    fi

    if [[ \"$first_entry\" == false ]]; then
        echo \",\" >> \"$JSON_OUTPUT\"
    else
        first_entry=false
    fi

    cat <<EOF >> \"$JSON_OUTPUT\"
{
    \"path\": \"$(echo \"${file#./}\" | escape_json)\",
    \"name\": \"$(basename \"$file\" | escape_json)\",
    \"directory\": \"$(dirname \"${file#./}\" | escape_json)\",
    \"creation_date\": \"$CREATION_DATE\",
    \"modification_date\": \"$MOD_DATE\",
    \"size_bytes\": $FILE_SIZE,
    \"mime_type\": \"$MIME_TYPE\",
    \"file_type\": \"$FILE_TYPE\",
    \"content\": \"$CONTENT\"
}
EOF
done

echo \"]\" >> \"$JSON_OUTPUT\"

# Generate readable text output
echo \"Generating readable text output...\"
{
    echo \"WEB APPLICATION CONTENT COLLECTION\"
    echo \"Generated: $(date)\"
    echo \"----------------------------------------\"
    echo \"\"
    
    find . -type f | while read -r file; do
        if should_exclude \"$file\"; then
            continue
        fi
        
        EXT=\"${file##*.}\"
        
        # Special handling for important files
        if [[ \"${EXT,,}\" == \"php\" ]]; then
            echo \"==== PHP FILE: $file ====\"
            echo \"Size: $(stat -c%s \"$file\") bytes\"
            echo \"Last Modified: $(date -r \"$file\")\"
            echo \"----------------------------------------\"
            cat \"$file\"
            echo -e \"\\n\\n\"
            continue
        fi
        
        if [[ \"${EXT,,}\" == \"js\" || \"${EXT,,}\" == \"css\" || \"${EXT,,}\" == \"html\" || \"${EXT,,}\" == \"htm\" ]]; then
            echo \"==== ${EXT^^} FILE: $file ====\"
            echo \"Size: $(stat -c%s \"$file\") bytes\"
            echo \"Last Modified: $(date -r \"$file\")\"
            echo \"----------------------------------------\"
            cat \"$file\"
            echo -e \"\\n\\n\"
            continue
        fi
        
        if [[ \"${EXT,,}\" == \"env\" || \"${EXT,,}\" == \"gitignore\" || \"${EXT,,}\" == \"htaccess\" ]]; then
            echo \"==== CONFIG FILE: $file ====\"
            echo \"Size: $(stat -c%s \"$file\") bytes\"
            echo \"Last Modified: $(date -r \"$file\")\"
            echo \"----------------------------------------\"
            cat \"$file\"
            echo -e \"\\n\\n\"
            continue
        fi
        
        # For other files, check if they're text
        if is_text_file \"$file\"; then
            echo \"==== TEXT FILE: $file ====\"
            echo \"Size: $(stat -c%s \"$file\") bytes\"
            echo \"Last Modified: $(date -r \"$file\")\"
            echo \"----------------------------------------\"
            head -c 100000 \"$file\"  # Show first 100KB
            echo -e \"\\n\\n\"
        else
            echo \"==== BINARY FILE: $file ====\"
            echo \"Size: $(stat -c%s \"$file\") bytes\"
            echo \"Last Modified: $(date -r \"$file\")\"
            echo \"[Binary content not displayed]\"
            echo -e \"\\n\"
        fi
    done
} > \"$TEXT_OUTPUT\"

echo \"Collection complete!\"
echo \"1. JSON structure saved to: $JSON_OUTPUT\"
echo \"2. Readable text content saved to: $TEXT_OUTPUT\""
}
,
{
    "path": "public/.env",
    "name": ".env",
    "directory": "public",
    "creation_date": "",
    "modification_date": "./public/.env 2a74c93000000000 255 3e72eff 4096 4096 62093311 41118991 41118991 18446744073709551615 -1
2025-06-11 07:49:35",
    "size_bytes":   File: "./public/.env"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41118999   Available: 41118999
Inodes: Total: 18446744073709551615 Free: -1
353,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/
DEALER_CODE=NY06AGDWUQ
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr
DEBUG=true"
}
,
{
    "path": "public/AllEndpoints.json",
    "name": "AllEndpoints.json",
    "directory": "public",
    "creation_date": "",
    "modification_date": "./public/AllEndpoints.json 2a74c93000000000 255 3e72eff 4096 4096 62093311 41118839 41118839 18446744073709551615 -1
2025-06-10 10:23:48",
    "size_bytes":   File: "./public/AllEndpoints.json"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 41118840   Available: 41118840
Inodes: Total: 18446744073709551615 Free: -1
2184874,
    "mime_type": "application/json",
    "file_type": "Text",
    "content": "{
  \"swagger\": \"2.0\",
  \"info\": {
    \"version\": \"v1\",
    \"title\": \"Mps Monitor Api\"
  },
  \"host\": \"localhost:34287\",
  \"schemes\": [
    \"https\"
  ],
  \"paths\": {
    \"/Account/GetProfile\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets profile of current authenticated user.\",
        \"operationId\": \"Account/GetProfile\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/RefreshAuthCookie\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/RefreshAuthCookie\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/Object\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Logout\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Logout\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/Object\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/UpdateProfile\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Update profile of current authenticated user.\",
        \"operationId\": \"Account/UpdateProfile\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateProfileRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faData\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faData\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": true,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faDataForProfile\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faDataForProfile\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faDataForAccount\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faDataForAccount\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          },
          {
            \"name\": \"userName\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"password\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"psk2fa\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Enable2faForAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Enable2faForAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/Enable2faForAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Enable2faForProfile\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Enable2faForProfile\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/Enable2faForProfileRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/SendOtpEmailForAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/SendOtpEmailForAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/SendOtpEmailForAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/SetPreferredDealer\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets profile of current authenticated account.\",
        \"operationId\": \"Account/SetPreferredDealer\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/SetPreferredDealerRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets the account.\",
        \"description\": \"\",
        \"operationId\": \"Account/GetAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetAccounts\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets the accounts.\",
        \"operationId\": \"Account/GetAccounts\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetAccountsRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Create\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Create an account\",
        \"operationId\": \"Account/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Update\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Update an account\",
        \"operationId\": \"Account/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ChangePassword\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Changes the password of the connected account\",
        \"operationId\": \"Account/ChangePassword\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ChangePasswordRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ResetPassword\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Resets the password.\",
        \"operationId\": \"Account/ResetPassword\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ResetPasswordRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ResetPasswordVerifyToken\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Verify the Resets password auth token.\",
        \"operationId\": \"Account/ResetPasswordVerifyToken\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ResetPasswordVerifyTokenRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ChangeLanguage\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Change language\",
        \"operationId\": \"Account/ChangeLanguage\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ChangeLanguageRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Delete\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes an account\",
        \"operationId\": \"Account/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Delete2fa\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes the two factor authentication for a user\",
        \"operationId\": \"Account/Delete2fa\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/DeleteProfile2fa\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes the two factor authentication for a user\",
        \"operationId\": \"Account/DeleteProfile2fa\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/DisableAlertLimits\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/DisableAlertLimits\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/DisableAlertLimitsRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/GetAllLimits\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/GetAllLimits\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"customerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"deviceId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"productId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"alertLimitSource\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"Default\",
              \"Dealer\",
              \"DealerProduct\",
              \"Customer\",
              \"CustomerProduct\",
              \"InstalledProduct\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2SourceDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DealerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetProductList\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetProductList\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the dealer code.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[ProductBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetProduct\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DealerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/DeleteProduct\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/DeleteProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/CreateProduct\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/CreateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/UpdateProduct\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/UpdateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2CustomerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/DeleteDefaultForConsumable\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/DeleteDefaultForConsumable\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"customerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"supplyType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"ManteinanceKit\",
              \"PhotoConductor\",
              \"Toner\"
            ]
          },
          {
            \"name\": \"colorType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"NotAvailable\",
              \"Black\",
              \"Cyan\",
              \"Magenta\",
              \"Yellow\",
              \"Black1\",
              \"Black2\",
              \"Black3\"
            ]
          },
          {
            \"name\": \"maintenanceKitTypeId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"maintenanceKitColorId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetProductList\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetProductList\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the dealer code.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[ProductBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetProduct\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"customerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the CustomerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/DeleteProduct\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/DeleteProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"customerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the CustomerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/CreateProduct\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/CreateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/UpdateProduct\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/UpdateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DeviceDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/DeleteDefaultForConsumable\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/DeleteDefaultForConsumable\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"deviceId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"supplyType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"ManteinanceKit\",
              \"PhotoConductor\",
              \"Toner\"
            ]
          },
          {
            \"name\": \"colorType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"NotAvailable\",
              \"Black\",
              \"Cyan\",
              \"Magenta\",
              \"Yellow\",
              \"Black1\",
              \"Black2\",
              \"Black3\"
            ]
          },
          {
            \"name\": \"maintenanceKitTypeId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"maintenanceKitColorId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Dealer/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get dealers Alert Limit settings\",
        \"operationId\": \"AlertLimit/Dealer/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Dealer/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified dealer\",
        \"operationId\": \"AlertLimit/Dealer/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get customer Alert Limit settings\",
        \"operationId\": \"AlertLimit/Customer/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer\",
        \"operationId\": \"AlertLimit/Customer/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/List\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get dealers Alert Limit settings\",
        \"operationId\": \"AlertLimit/Customer/Product/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimitCustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer and Product\",
        \"operationId\": \"AlertLimit/Customer/Product/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get device Alert Limit settings\",
        \"operationId\": \"AlertLimit/Device/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AlertLimitBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer and Product\",
        \"operationId\": \"AlertLimit/Device/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Delete\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Delete Alert limits\",
        \"operationId\": \"AlertLimit/Customer/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/Delete\": {
      \"post\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"operationId\": \"AlertLimit/Customer/Product/Delete\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/DeleteRequest[KeyValue]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Delete\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"operationId\": \"AlertLimit/Device/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Analytics/GetReportResult\": {
      \"get\": {
        \"tags\": [
          \"Analytics\"
        ],
        \"summary\": \"Get result from a saved report.\",
        \"operationId\": \"Analytics/GetReportResult\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"idReport\",
            \"in\": \"query\",
            \"description\": \"The ID of a saved custom report.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[TabularResultDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Analytics/GetReportFileResult\": {
      \"get\": {
        \"tags\": [
          \"Analytics\"
        ],
        \"summary\": \"Get result as file (Excel, CSV) from a saved report.\",
        \"operationId\": \"Analytics/GetReportFileResult\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\"
        ],
        \"parameters\": [
          {
            \"name\": \"idReport\",
            \"in\": \"query\",
            \"description\": \"The ID of a saved custom report.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"reportFormat\",
            \"in\": \"query\",
            \"description\": \"The export format of the result (Excel, CSV)\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseHttpResponseMessage\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/List\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Get Api Clients for Dealer.\",
        \"operationId\": \"ApiClient/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"pageNumber\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the page number.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"pageRows\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the page rows.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"sortColumn\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the sort column.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"sortOrder\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the sort order.\",
            \"required\": true,
            \"type\": \"string\",
            \"enum\": [
              \"Asc\",
              \"Desc\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Get\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Update\": {
      \"put\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[ApiClientUpdateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Create\": {
      \"post\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[ApiClientCreateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Delete\": {
      \"delete\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Delete Api Client\",
        \"operationId\": \"ApiClient/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/List\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Get Api user list\",
        \"operationId\": \"ApiClient/Account/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Get\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Update\": {
      \"put\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Delete\": {
      \"delete\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Create\": {
      \"post\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[ApiClientAccountCreateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/GetChallengeUrlRedirect\": {
      \"get\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Returns the login url based on the domain specified.\",
        \"operationId\": \"azuread/GetChallengeUrlRedirect\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"returnUrl\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"name\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the name.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"type\": \"string\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/GetDealerAzureSettings\": {
      \"get\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Get Azure Ad configuration\",
        \"operationId\": \"azuread/GetDealerAzureSettings\",
        \"consumes\": [],
        \"produces\": [
          \"app


==== TEXT FILE: ./backup.deploy.yml ====
Size: 3250 bytes
Last Modified: Tue, Jun 10, 2025 10:36:20 AM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"] # Trigger on pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Run the job on a fresh Ubuntu environment
    timeout-minutes: 15 # Overall job timeout (can be adjusted if deployments are very fast)

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          # IMPORTANT: Replace these hardcoded values with GitHub Secrets for production!
          # Go to your repository settings -> Secrets and variables -> Actions
          # Add:
          #   FTP_SERVER: ftp.resolutionsbydesign.us
          #   FTP_USERNAME: mpsm@mpsm.resolutionsbydesign.us
          #   FTP_PASSWORD: YourActualStrongPassword!
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          password: Deploy123! 
          
          local-dir: ./ # Deploy from the root of your GitHub repository
          # The 'server-directory' should be '/' if your cPanel FTP user's
          # "Home Directory" is already set to the target web root
          # (e.g., /home/resolut7/public_html/mpsm.resolutionsbydesign.us/).
          # This tells the action to deploy INTO the root of your FTP login.
          server-directory: / 
          
          protocol: ftp # Use 'ftps' if your server supports and requires explicit FTPS
          exclude: .git/ # Exclude the .git directory from being uploaded
          log-level: verbose # Keep verbose logging for detailed transfer info
          delete: true # Delete files on the server that are not in the local repository
          timeout: 120 # Timeout for the deploy operation in seconds (2 minutes)

      - name: 📜 Deployment Completed Report
        # This step provides a summary of the deployment outcome.
        run: |
          echo "### DEPLOYMENT SUMMARY ###" > report.md
          echo "- Deployment Method: SamKirkland/FTP-Deploy-Action" >> report.md
          echo "- Local repository root (./) deployed to: FTP account's home directory" >> report.md
          echo "  (Expected server path: /home/resolut7/public_html/mpsm.resolutionsbydesign.us/)" >> report.md
          echo "- Website URL: https://mpsm.resolutionsbydesign.us" >> report.md
          echo "" >> report.md
          echo "---" >> report.md
          echo "**Next Steps:**" >> report.md
          echo "1. **Verify Live Site:** Check https://mpsm.resolutionsbydesign.us in your browser." >> report.md
          echo "2. **IMPORTANT: Secure Credentials!** Move your FTP server, username, and password into GitHub Repository Secrets." >> report.md
          echo "   (Go to Settings -> Secrets and variables -> Actions in your GitHub repo)" >> report.md
          echo "3. **Clear Cache:** If changes aren't visible, try clearing your browser cache or any server-side caching." >> report.md
          echo "4. **GreenGeeks Support:** If issues persist, contact GreenGeeks support with a link to this successful workflow run." >> report.md
          
          cat report.md



==== TEXT FILE: ./collectdata.sh ====
Size: 5860 bytes
Last Modified: Wed, Jun 11, 2025  8:22:20 AM
----------------------------------------
#!/bin/bash

# Combined Web Application Code Collector
# Outputs both JSON structure and readable text content

# Configuration
JSON_OUTPUT="app_structure_$(date +'%Y%m%d_%H%M%S').json"
TEXT_OUTPUT="app_contents_$(date +'%Y%m%d_%H%M%S').txt"

# Files to include full content for
FULL_EXTENSIONS=("php" "html" "htm" "css" "js" "json" "xml" "md" "txt" "env" "gitignore" "htaccess" "sh")
MAX_PREVIEW_SIZE=5000  # 5KB previews for other text files

# Directories to exclude
EXCLUDE_DIRS=("vendor" "node_modules" ".git" ".idea" "build" "dist" "cache" "logs")

# Binary extensions to skip content for
EXCLUDE_EXT=("png" "jpg" "jpeg" "gif" "svg" "ico" "woff" "woff2" "ttf" "eot" "pdf" "zip" "tar.gz" "mp3" "mp4" "avi" "mov")

# Helper functions
escape_json() {
    sed 's/\\/\\\\/g; s/"/\\"/g; s/\t/\\t/g; s/\r/\\r/g; s/\n/\\n/g'
}

is_text_file() {
    file -b --mime-encoding "$1" | grep -qvi 'binary'
}

should_exclude() {
    local file="$1"
    
    # Check excluded directories
    for dir in "${EXCLUDE_DIRS[@]}"; do
        if [[ "$file" == *"/$dir/"* ]]; then
            return 0
        fi
    done
    
    # Check excluded extensions
    local extension="${file##*.}"
    for ext in "${EXCLUDE_EXT[@]}"; do
        if [[ "${extension,,}" == "${ext,,}" ]]; then
            return 0
        fi
    done
    
    return 1
}

# Generate JSON structure
echo "Generating JSON structure..."
echo "[" > "$JSON_OUTPUT"
first_entry=true

find . -type f -print0 | while IFS= read -r -d '' file; do
    if should_exclude "$file"; then
        continue
    fi

    FILE_SIZE=$(stat -f '%z' "$file" 2>/dev/null || stat -c '%s' "$file")

    CREATION_DATE=$(stat -f '%B' "$file" 2>/dev/null || stat -c '%W' "$file" 2>/dev/null)
    if [[ "$CREATION_DATE" -le 0 || -z "$CREATION_DATE" ]]; then
        CREATION_DATE="N/A"
    else
        CREATION_DATE=$(date -r "$CREATION_DATE" '+%Y-%m-%dT%H:%M:%S' 2>/dev/null || date -d @"$CREATION_DATE" '+%Y-%m-%dT%H:%M:%S')
    fi

    MOD_DATE=$(stat -f '%Sm' -t '%Y-%m-%dT%H:%M:%S' "$file" 2>/dev/null || stat -c '%y' "$file" | cut -d'.' -f1)

    MIME_TYPE=$(file --mime-type -b "$file")
    FILE_TYPE=$(echo "$MIME_TYPE" | grep -qi 'text\|json\|xml\|script' && echo "Text" || echo "Binary")

    EXT="${file##*.}"
    INCLUDE_FULL=false
    for ext in "${FULL_EXTENSIONS[@]}"; do
        if [[ "${EXT,,}" == "$ext" ]]; then
            INCLUDE_FULL=true
            break
        fi
    done

    CONTENT=""
    if [[ "$FILE_TYPE" == "Text" ]]; then
        if [[ "$INCLUDE_FULL" == true ]]; then
            CONTENT=$(cat "$file" | escape_json)
        else
            CONTENT=$(head -c $MAX_PREVIEW_SIZE "$file" | escape_json)
        fi
    else
        CONTENT="[Binary file - content skipped]"
    fi

    if [[ "$first_entry" == false ]]; then
        echo "," >> "$JSON_OUTPUT"
    else
        first_entry=false
    fi

    cat <<EOF >> "$JSON_OUTPUT"
{
    "path": "$(echo "${file#./}" | escape_json)",
    "name": "$(basename "$file" | escape_json)",
    "directory": "$(dirname "${file#./}" | escape_json)",
    "creation_date": "$CREATION_DATE",
    "modification_date": "$MOD_DATE",
    "size_bytes": $FILE_SIZE,
    "mime_type": "$MIME_TYPE",
    "file_type": "$FILE_TYPE",
    "content": "$CONTENT"
}
EOF
done

echo "]" >> "$JSON_OUTPUT"

# Generate readable text output
echo "Generating readable text output..."
{
    echo "WEB APPLICATION CONTENT COLLECTION"
    echo "Generated: $(date)"
    echo "----------------------------------------"
    echo ""
    
    find . -type f | while read -r file; do
        if should_exclude "$file"; then
            continue
        fi
        
        EXT="${file##*.}"
        
        # Special handling for important files
        if [[ "${EXT,,}" == "php" ]]; then
            echo "==== PHP FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        if [[ "${EXT,,}" == "js" || "${EXT,,}" == "css" || "${EXT,,}" == "html" || "${EXT,,}" == "htm" ]]; then
            echo "==== ${EXT^^} FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        if [[ "${EXT,,}" == "env" || "${EXT,,}" == "gitignore" || "${EXT,,}" == "htaccess" ]]; then
            echo "==== CONFIG FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        # For other files, check if they're text
        if is_text_file "$file"; then
            echo "==== TEXT FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            head -c 100000 "$file"  # Show first 100KB
            echo -e "\n\n"
        else
            echo "==== BINARY FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "[Binary content not displayed]"
            echo -e "\n"
        fi
    done
} > "$TEXT_OUTPUT"

echo "Collection complete!"
echo "1. JSON structure saved to: $JSON_OUTPUT"
echo "2. Readable text content saved to: $TEXT_OUTPUT"


==== CONFIG FILE: ./public/.env ====
Size: 353 bytes
Last Modified: Wed, Jun 11, 2025  7:49:35 AM
----------------------------------------
CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/
DEALER_CODE=NY06AGDWUQ
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr
DEBUG=true



==== TEXT FILE: ./public/AllEndpoints.json ====
Size: 2184874 bytes
Last Modified: Tue, Jun 10, 2025 10:23:48 AM
----------------------------------------
{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Communication/GetPortalReleaseNotes": {
      "get": {
        "tags": [
          "CommunicationApi"
        ],
        "summary": "Get Portal Release Notes",
        "operationId": "Communication/GetPortalReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[PortalReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Consumable/List": {
      "post": {
        "tags": [
          "ConsumableApi"
        ],
        "summary": "List all devices consumables",
        "operationId": "Consumable/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConsumablesDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/List": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the offices.",
        "operationId": "CostCenter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCostCentersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Get": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the office.",
        "operationId": "CostCenter/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Creates the office.",
        "operationId": "CostCenter/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Update": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Updates the office.",
        "operationId": "CostCenter/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Delete": {
      "delete": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Delete  office.",
        "operationId": "CostCenter/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns counters",
        "operationId": "Counter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListDetailed": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/ListDetailed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersDetailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDetailedDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListBlended": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns blended counters",
        "operationId": "Counter/ListBlended",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersBlendDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Export": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Export",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CounterCatalogItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Update": {
      "put": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Updat


==== PHP FILE: ./public/api-proxy.php ====
Size: 1368 bytes
Last Modified: Tue, Jun 10, 2025 10:57:22 AM
----------------------------------------
<?php
// public/api-proxy.php
ini_set('display_errors',1);
ini_set('display_startup_errors',1);
error_reporting(E_ALL);

require_once __DIR__ . '/src/config.php';
require_once __DIR__ . '/src/DebugPanel.php';
require_once __DIR__ . '/src/ApiClient.php';

header('Content-Type: application/json');

$method = strtoupper($_REQUEST['method'] ?? 'GET');
$path   = trim($_REQUEST['path']   ?? '', '/');

// Token
$client = new ApiClient();
$token  = $client->getAccessToken();
if (!$token) {
    http_response_code(500);
    echo json_encode(['error'=>'Token failure']);
    exit;
}

if ($method==='GET') {
    $url = rtrim(API_BASE_URL,'/').'/'.$path;
    DebugPanel::log("Proxy GET $url");
    $opts=['http'=>['method'=>'GET','header'=>"Authorization: Bearer $token\r\nAccept: application/json\r\n",'ignore_errors'=>true]];
    $resp=@file_get_contents($url,false,stream_context_create($opts));
    if (!$resp) { http_response_code(502); echo json_encode(['error'=>'Upstream GET failed']); exit; }
    echo $resp;
    exit;
}

// POST fallback
$raw = file_get_contents('php://input');
$data = json_decode($raw,true);
if (json_last_error()!==JSON_ERROR_NONE) {
    DebugPanel::log("POST JSON parse error: ".json_last_error_msg());
    $data = [];
}
$response = $client->postJson($path,$token,$data);
echo json_encode($response);



==== PHP FILE: ./public/api-status.php ====
Size: 293 bytes
Last Modified: Tue, Jun 10, 2025 10:57:50 AM
----------------------------------------
<?php
// public/api-status.php
ini_set('display_errors',1);
ini_set('display_startup_errors',1);
error_reporting(E_ALL);

if ($_SERVER['REQUEST_METHOD']==='HEAD') {
    http_response_code(200);
    exit;
}
header('Content-Type:text/plain');
echo 'API OK'; http_response_code(200);



==== CSS FILE: ./public/css/styles.css ====
Size: 7701 bytes
Last Modified: Tue, Jun 10, 2025  2:04:30 PM
----------------------------------------
/* ==========================================================================
   Glassmorphic Dashboard – Sidebar Cleanup + Visible Inactive Icons
   ========================================================================== */

/* VARIABLES */
:root {
  --glass-bg:       rgba(255,255,255,0.05);
  --glass-border:   rgba(255,255,255,0.15);
  --btn-bg:         rgba(255,255,255,0.1);
  --btn-hover:      rgba(255,255,255,0.2);
  --accent:         #0af;
  --shadow-top:     rgba(0,0,0,0.6);
  --shadow-side:    rgba(0,0,0,0.4);

  --sidebar-width:  80px;   /* fixed width */
  --sidebar-gap:    1rem;   /* spacing between icons */
}

/* RESET & BASE */
* { margin:0; padding:0; box-sizing:border-box; }
body {
  font-family: Consolas, monospace;
  background: #111; color: #eee;
  overflow: hidden;
}

/* ==========================================================================
   HEADER
   ========================================================================== */
.header {
  position: fixed; top:0; left:0; right:0;
  height:60px;
  display:flex; justify-content:space-between; align-items:center;
  padding:0 1rem;
  background:var(--glass-bg);
  border-bottom:1px solid var(--glass-border);
  box-shadow:0 4px 12px var(--shadow-top);
  z-index:100;
}
.status-panel { font-weight:bold; }
.status-dot {
  display:inline-block; width:12px; height:12px;
  margin-left:6px; border-radius:50%; background:gray;
  transition:background .3s;
}
.status-dot.ok    { background:#4caf50; }
.status-dot.error { background:#f44336; }
.header-right {
  display:flex; align-items:center; gap:1rem;
}
.version-display { font-size:0.9rem; color:#ccc; }

/* ==========================================================================
   BODY LAYOUT
   ========================================================================== */
.body-container {
  display:flex;
  margin-top:60px;            /* push below fixed header */
  height:calc(100vh - 60px);
}

/* ==========================================================================
   SIDEBAR
   ========================================================================== */
.sidebar {
  width:var(--sidebar-width);
  padding:0;                  /* no padding here */
  background:var(--glass-bg);
  border-right:1px solid var(--glass-border);
  box-shadow:4px 0 12px var(--shadow-side);
  backdrop-filter:blur(12px);
  display:flex; flex-direction:column; align-items:center;
  gap:var(--sidebar-gap);     /* spacing between role buttons */
}

/* Role icon button */
.role-btn {
  appearance:none;
  background:transparent;
  border:none;
  padding:8px;                /* small padding around icon */
  color:#bbb;                 /* lighter color for inactive */
  cursor:pointer;
  transition:background .2s, color .2s;
}
.role-btn svg {
  width:24px; height:24px;    /* consistent icon size */
}
.role-btn.active {
  background:var(--accent);
  color:#111;
  box-shadow:0 0 8px var(--accent);
}
.role-btn:hover {
  background:var(--btn-hover);
  color:#fff;
}

/* ==========================================================================
   MAIN CONTENT
   ========================================================================== */
.main-content {
  flex:1; overflow-y:auto; padding:1rem;
}
.cards-container {
  display:grid;
  grid-template-columns:repeat(auto-fill,minmax(180px,1fr));
  gap:1rem;
}
.card {
  padding:1rem;
  backdrop-filter:blur(12px);
  background:var(--glass-bg);
  border:1px solid var(--glass-border);
  border-radius:12px;
  cursor:pointer;
  transition:transform .2s, background .2s, box-shadow .2s;
}
.card:hover {
  transform:translateY(-4px);
  background:rgba(255,255,255,0.08);
  box-shadow:0 4px 12px rgba(0,0,0,0.5);
}
.card h3 { font-size:1rem; margin-bottom:0.5rem; }
.card .summary { font-size:0.9rem; color:#ccc; }

/* ==========================================================================
   UNIFORM BUTTONS
   ========================================================================== */
.btn {
  appearance:none;
  background:var(--btn-bg);
  border:none;
  padding:0.3rem 0.6rem;
  border-radius:6px;
  color:#eee;
  font-size:0.9rem;
  cursor:pointer;
  transition:background .2s;
}
.btn:hover { background:var(--btn-hover); }

/* ==========================================================================
   MODAL
   ========================================================================== */
.modal {
  position:fixed; top:0; left:0; width:100%; height:100%;
  background:rgba(0,0,0,0.6); display:none;
  align-items:center; justify-content:center; z-index:1000;
}
.modal-content {
  position:relative; padding:1rem; width:80%; max-width:600px;
  backdrop-filter:blur(12px);
  background:var(--glass-bg);
  border:1px solid var(--glass-border);
  border-radius:12px;
  box-shadow:0 6px 20px rgba(0,0,0,0.7);
}
.modal-close {
  position:absolute; top:0.5rem; right:0.5rem;
  background:transparent; border:none;
  font-size:1.5rem; color:#eee; cursor:pointer;
  line-height:1;
}

/* ==========================================================================
   DEBUG PANEL
   ========================================================================== */
.debug-panel {
  position:fixed; bottom:0; left:0; right:0; height:200px;
  background:linear-gradient(180deg, var(--debug-bg), rgba(0,0,0,0.8));
  border-top:2px solid var(--accent);
  border-radius:12px 12px 0 0;
  backdrop-filter:blur(10px); overflow:hidden; z-index:1000;
  transition:transform .4s, opacity .4s; transform:translateY(0); opacity:1;
}
.debug-panel.hidden { transform:translateY(100%); opacity:0; }
.debug-header {
  display:flex; justify-content:space-between; align-items:center;
  padding:0.75rem 1rem; background:rgba(0,255,0,0.1);
  border-bottom:1px solid rgba(0,255,0,0.3);
}
.debug-title {
  font-family:Consolas,monospace; color:var(--accent);
  font-weight:bold; font-size:0.9rem;
}
.debug-clear { padding:0.3rem 0.6rem; font-size:0.8rem; }

/* ==========================================================================
   DEBUG CONTENT
   ========================================================================== */
.debug-content {
  height:calc(100% - 50px); overflow-y:auto; padding:0.5rem;
  font-family:Consolas,monospace; font-size:10px; line-height:1.2;
}
.debug-content::-webkit-scrollbar { width:8px; }
.debug-content::-webkit-scrollbar-track { background:rgba(0,0,0,0.3); }
.debug-content::-webkit-scrollbar-thumb { background:rgba(0,255,0,0.3); border-radius:4px; }
.debug-content::-webkit-scrollbar-thumb:hover { background:rgba(0,255,0,0.5); }

/* ==========================================================================
   LOG LINES & TIMESTAMP
   ========================================================================== */
.debug-log-line {
  margin-bottom:3px; padding:2px 4px; border-radius:3px;
  border-left:2px solid transparent; white-space:pre-wrap; word-break:break-word;
  transition:background .2s;
}
.debug-log-line:hover { background:rgba(0,255,0,0.05); }
.debug-log-line.error    { color:#ff6b6b; border-left-color:#ff6b6b; }
.debug-log-line.warning  { color:#ffd93d; border-left-color:#ffd93d; }
.debug-log-line.success  { color:#6bcf7f; border-left-color:#6bcf7f; }
.debug-log-line.info     { color:#4dabf7; border-left-color:#4dabf7; }
.debug-log-line.request  { color:#ff8cc8; border-left-color:#ff8cc8; }
.debug-log-line.response { color:#74c0fc; border-left-color:#74c0fc; }

.debug-timestamp {
  color:rgba(255,255,255,0.5); font-size:9px; margin-right:6px;
}



==== PHP FILE: ./public/db-status.php ====
Size: 291 bytes
Last Modified: Tue, Jun 10, 2025 10:57:38 AM
----------------------------------------
<?php
// public/db-status.php
ini_set('display_errors',1);
ini_set('display_startup_errors',1);
error_reporting(E_ALL);

if ($_SERVER['REQUEST_METHOD']==='HEAD') {
    http_response_code(200);
    exit;
}
header('Content-Type:text/plain');
echo 'DB OK'; http_response_code(200);



==== PHP FILE: ./public/get-token.php ====
Size: 540 bytes
Last Modified: Tue, Jun 10, 2025 10:56:52 AM
----------------------------------------
<?php
// public/get-token.php
ini_set('display_errors',1);
ini_set('display_startup_errors',1);
error_reporting(E_ALL);

require_once __DIR__ . '/src/config.php';
require_once __DIR__ . '/src/DebugPanel.php';
require_once __DIR__ . '/src/ApiClient.php';

header('Content-Type: application/json');
$client = new ApiClient();
$token  = $client->getAccessToken();
if (!$token) {
    http_response_code(500);
    echo json_encode(['error'=>'Failed to acquire token']);
    exit;
}
echo json_encode(['access_token'=>$token]);



==== PHP FILE: ./public/index.php ====
Size: 3672 bytes
Last Modified: Tue, Jun 10, 2025  2:00:24 PM
----------------------------------------
<?php
ini_set('display_errors',1);
ini_set('display_startup_errors',1);
error_reporting(E_ALL);

require_once __DIR__ . '/src/config.php';
require_once __DIR__ . '/src/DebugPanel.php';

// Load endpoints
$allEndpoints = [];
$specFile = __DIR__ . '/AllEndpoints.json';
if (file_exists($specFile)) {
    $swagger = json_decode(file_get_contents($specFile), true);
    if (json_last_error()===JSON_ERROR_NONE) {
        foreach (($swagger['paths']??[]) as $path => $methods) {
            foreach ($methods as $http => $details) {
                $allEndpoints[] = [
                    'method'=>strtoupper($http),
                    'path'=>$path,
                    'summary'=>$details['summary']??'',
                    'description'=>$details['description']??''
                ];
            }
        }
    }
}

// Role mappings
$roleMappings = [
  'Developer'=>['/ApiClient/List'],
  'Admin'=>['/Analytics/GetReportResult','/ApiClient/List','/Account/GetAccounts','/Account/UpdateProfile'],
  'Dealer'=>['/Analytics/GetReportResult','/Alert/List','/Contract/List','/Customer/List','/Device/List','/MeterReading/List','/SupplyItem/List'],
  'Service'=>['/AlertLimit2/GetAllLimits','/Alert/List','/Contract/List','/Customer/List','/Device/List','/MeterReading/List','/SupplyItem/List'],
  'Sales'=>['/Analytics/GetReportResult','/Alert/List','/Contract/List','/Customer/List','/Device/List','/MeterReading/List','/SupplyItem/List'],
  'Accounting'=>['/Analytics/GetReportResult','/Alert/List','/Contract/List','/Customer/List','/Device/List','/MeterReading/List','/SupplyItem/List'],
  'Guest'=>['/Account/GetProfile','/Account/Logout','/Account/UpdateProfile']
];
?><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width,initial-scale=1.0">
  <title>MPSM Dashboard</title>
  <link rel="stylesheet" href="css/styles.css">
  <script>
    window.allEndpoints = <?php echo json_encode($allEndpoints, JSON_HEX_TAG); ?>;
    window.roleMappings = <?php echo json_encode($roleMappings, JSON_HEX_TAG); ?>;
    window.apiBaseUrl   = '<?php echo API_BASE_URL; ?>';
  </script>
</head>
<body>
  <!-- FIXED HEADER -->
  <header class="glass-panel header">
    <div class="status-panel">
      DB: <span id="dbStatus" class="status-dot"></span>
      API: <span id="apiStatus" class="status-dot"></span>
    </div>
    <div class="header-right">
      <span class="version-display">v<span id="versionDisplay"></span></span>
      <button id="toggleDebug" class="btn">Hide Debug</button>
    </div>
  </header>

  <!-- BODY -->
  <div class="body-container">
    <aside id="sidebar" class="sidebar"></aside>
    <main class="main-content">
      <div id="cardsViewport" class="cards-container"></div>
    </main>
  </div>

  <!-- MODAL -->
  <div id="modal" class="modal">
    <div class="modal-content">
      <button id="modalClose" class="btn modal-close">×</button>
      <div id="modalBody"></div>
    </div>
  </div>

  <!-- DEBUG PANEL -->
  <div id="debug-panel" class="debug-panel">
    <div class="debug-header">
      <div class="debug-title">🐛 Debug Console</div>
      <button id="debugClear" class="btn debug-clear">Clear</button>
    </div>
    <div class="debug-content" id="debug-content"></div>
  </div>

  <script src="version.js"></script>
  <script src="js/app.js"></script>
  <script>
    // Populate version
    document.addEventListener('DOMContentLoaded', () => {
      document.getElementById('versionDisplay').textContent = window.appVersion || 'n/a';
    });
  </script>
</body>
</html>



==== JS FILE: ./public/js/app.js ====
Size: 7588 bytes
Last Modified: Wed, Jun 11, 2025  9:58:23 AM
----------------------------------------
/*!
 * public/js/app.js
 * ------------------------------------------------------
 * Builds a left-sidebar icon menu for roles,
 * renders cards, powers Try-It proxy, and logs
 * into the Debug Panel. Modal closes via X,
 * backdrop, and Escape.
 * ------------------------------------------------------
 */
(function(){
  'use strict';

  // DOM refs
  const sidebar    = document.getElementById('sidebar');
  const debugPanel = document.getElementById('debug-panel');
  const debugContent = document.getElementById('debug-content');
  const toggleBtn  = document.getElementById('toggleDebug');
  const clearBtn   = document.getElementById('debugClear');
  const dbDot      = document.getElementById('dbStatus');
  const apiDot     = document.getElementById('apiStatus');
  const cardsView  = document.getElementById('cardsViewport');
  const modal      = document.getElementById('modal');
  const modalBody  = document.getElementById('modalBody');
  const modalClose = document.getElementById('modalClose');

  // Icon SVGs for each role
  const icons = {
    Developer:  '<svg viewBox="0 0 20 20"><path d="M16 18l6-6-6-6M8 6l-6 6 6 6" fill="none" stroke="currentColor" stroke-width="2"/></svg>',
    Admin:      '<svg viewBox="0 0 20 20"><path d="M9 17v2a2 2 0 002 2h2a2 2 0 002-2v-2m-6-4h6m-6-4h6" fill="none" stroke="currentColor" stroke-width="2"/></svg>',
    Dealer:     '<svg viewBox="0 0 20 20"><path d="M3 10h4l3-6 4 12h4" fill="none" stroke="currentColor" stroke-width="2"/></svg>',
    Service:    '<svg viewBox="0 0 20 20"><circle cx="10" cy="10" r="3" stroke="currentColor" stroke-width="2" fill="none"/><path d="M2 10a8 8 0 0116 0" stroke="currentColor" stroke-width="2" fill="none"/></svg>',
    Sales:      '<svg viewBox="0 0 20 20"><path d="M3 15l6-6 4 4 4-8" fill="none" stroke="currentColor" stroke-width="2"/></svg>',
    Accounting: '<svg viewBox="0 0 20 20"><rect x="3" y="3" width="14" height="4" fill="none" stroke="currentColor" stroke-width="2"/><rect x="3" y="9" width="14" height="4" fill="none" stroke="currentColor" stroke-width="2"/><rect x="3" y="15" width="14" height="2" fill="none" stroke="currentColor" stroke-width="2"/></svg>',
    Guest:      '<svg viewBox="0 0 20 20"><circle cx="10" cy="6" r="3" fill="none" stroke="currentColor" stroke-width="2"/><path d="M2 18a8 8 0 0116 0" fill="none" stroke="currentColor" stroke-width="2"/></svg>',
  };

  // Logger
  function jsLog(msg, type='info') {
    const line = document.createElement('div');
    line.className = `debug-log-line ${type}`;
    const ts = `<span class="debug-timestamp">[${new Date().toLocaleTimeString()}]</span>`;
    const iconsMap = { error:'❌', warning:'⚠️', success:'✅', info:'ℹ️', request:'📤', response:'📥' };
    line.innerHTML = `${ts}${iconsMap[type]||'ℹ️'} ${msg}`;
    debugContent.append(line);
    debugContent.scrollTop = debugContent.scrollHeight;
    while(debugContent.children.length>200) debugContent.removeChild(debugContent.firstChild);
  }
  console.error = (...args)=> jsLog('Console.error: '+args.join(' '),'error');

  // Build roleGroups
  const mappings   = window.roleMappings || {};
  const endpoints  = window.allEndpoints  || [];
  const roleGroups = {};
  Object.entries(mappings).forEach(([role, paths])=>{
    roleGroups[role] = endpoints.filter(ep=> paths.includes(ep.path));
  });

  document.addEventListener('DOMContentLoaded',()=>{
    jsLog('App initialized','success');

    // Populate sidebar
    Object.keys(roleGroups).forEach((role,i)=>{
      const btn = document.createElement('button');
      btn.className = 'role-btn';
      btn.dataset.role = role;
      btn.title = role;
      btn.innerHTML = icons[role];
      btn.addEventListener('click', ()=>{
        document.querySelectorAll('.role-btn').forEach(b=>b.classList.remove('active'));
        btn.classList.add('active');
        renderRole(role);
        jsLog(`Role switched to ${role}`,'info');
      });
      sidebar.append(btn);
      if (i===0) btn.classList.add('active');
    });

    // Render initial role
    renderRole(Object.keys(roleGroups)[0]);

    // Optional customer input
    const customerInput = document.getElementById('customerInput');
    if (customerInput) {
      customerInput.addEventListener('input', () => {
        jsLog(`Customer input: ${customerInput.value}`,'info');
      });
    } else {
      jsLog('customerInput element not found','warning');
    }

    // Fetch token
    jsLog('Fetching API token…','request');
    fetch('get-token.php').then(r=>r.json()).then(json=>{
      if(json.access_token){window.apiToken=json.access_token; jsLog('Token acquired','success')}
      else jsLog('Token error','error');
    }).catch(err=>jsLog('Token fetch failed: '+err.message,'error'));

    // Health checks
    checkConn('db-status.php', dbDot, 'DB');
    checkConn('api-status.php', apiDot, 'API');

    // Debug controls
    toggleBtn.addEventListener('click',()=>{
      const hidden = debugPanel.classList.toggle('hidden');
      toggleBtn.textContent = hidden?'Show Debug':'Hide Debug';
      jsLog(`Debug panel ${hidden?'hidden':'shown'}`,'info');
    });
    clearBtn.addEventListener('click',()=>{
      debugContent.innerHTML=''; jsLog('Cleared debug log','info');
    });

    // Modal close
    modalClose.addEventListener('click',()=> modal.style.display='none');
    modal.addEventListener('click',e=>{ if(e.target===modal) modal.style.display='none';});
    document.addEventListener('keydown',e=>{ if(e.key==='Escape') modal.style.display='none'; });
  });

  function renderRole(role) {
    cardsView.innerHTML='';
    const group = roleGroups[role]||[];
    jsLog(`Rendering ${group.length} cards for ${role}`,'success');
    group.forEach(ep=>{
      const c = document.createElement('div'); c.className='card';
      c.innerHTML = `<h3>${ep.method} ${ep.path}</h3><p>${ep.summary}</p>`;
      c.addEventListener('click',()=>openModal(ep));
      cardsView.append(c);
    });
  }

  function openModal(ep) {
    modalBody.innerHTML=`
      <h2>${ep.method} ${ep.path}</h2>
      <p><strong>Summary:</strong> ${ep.summary}</p>
      <p><strong>Description:</strong> ${ep.description}</p>
      <button id="tryBtn" class="btn">Try It</button>
      <pre id="tryResult"></pre>
    `;
    document.getElementById('tryBtn').addEventListener('click',()=>tryIt(ep));
    modal.style.display='flex'; jsLog(`Modal opened for ${ep.method} ${ep.path}`,'info');
  }

  function tryIt(ep) {
    const res = document.getElementById('tryResult');
    if(!window.apiToken){jsLog('No token','error'); return res.textContent='No API token';}
    const url = `api-proxy.php?method=${encodeURIComponent(ep.method)}&path=${encodeURIComponent(ep.path)}`;
    jsLog(`[Request] ${ep.method} ${ep.path}`,'request');
    fetch(url,{method:ep.method,headers:{'Accept':'application/json'}})
      .then(r=>r.json().then(data=>({status:r.status,data})))
      .then(o=>{res.textContent=JSON.stringify(o,null,2); jsLog('TryIt success','success');})
      .catch(err=>{jsLog(`Error: ${err.message}`,'error');res.textContent=err.message;});
  }

  function checkConn(url,dot,name) {
    fetch(url,{method:'HEAD'}).then(r=>{
      if(r.ok){dot.classList.add('ok');jsLog(`${name} OK`,'success')} 
      else throw new Error(r.status);
    }).catch(err=>{dot.classList.add('error'); jsLog(`${name} ERROR: ${err.message}`,'error');});
  }

  window.jsLog = jsLog;
})();



==== PHP FILE: ./public/src/ApiClient.php ====
Size: 2315 bytes
Last Modified: Tue, Jun 10, 2025 10:56:36 AM
----------------------------------------
<?php
// public/src/ApiClient.php
// -------------------------------------
// Helper for OAuth2 token & JSON POST.
// -------------------------------------

require_once __DIR__ . '/config.php';
require_once __DIR__ . '/DebugPanel.php';

class ApiClient
{
    public function getAccessToken(): ?string
    {
        $form = http_build_query([
            'grant_type'=>'password',
            'client_id'=>CLIENT_ID,
            'client_secret'=>CLIENT_SECRET,
            'username'=>USERNAME,
            'password'=>PASSWORD,
            'scope'=>SCOPE
        ]);

        DebugPanel::log("Requesting token from ".TOKEN_URL);
        $opts = ['http'=>[
            'method'=>'POST',
            'header'=>"Content-Type: application/x-www-form-urlencoded\r\n",
            'content'=>$form,'ignore_errors'=>true
        ]];
        $resp = @file_get_contents(TOKEN_URL, false, stream_context_create($opts));
        if (!$resp) { DebugPanel::log("No response for token"); return null; }
        $data = json_decode($resp, true);
        if (!isset($data['access_token'])) {
            DebugPanel::log("Token error: ".($data['error'] ?? 'unknown'));
            return null;
        }
        DebugPanel::log("Access token acquired");
        return $data['access_token'];
    }

    public function postJson(string $path, string $token, array $payload): array
    {
        $url = rtrim(API_BASE_URL, '/').'/'.ltrim($path, '/');
        $body = json_encode($payload);
        $hdrs = [
            "Authorization: Bearer $token",
            "Content-Type: application/json",
            "Accept: application/json"
        ];
        DebugPanel::log("POST $url");
        $opts = ['http'=>[
            'method'=>'POST',
            'header'=>implode("\r\n",$hdrs)."\r\n",'content'=>$body,'ignore_errors'=>true
        ]];
        $resp = @file_get_contents($url, false, stream_context_create($opts));
        if (!$resp) { DebugPanel::log("POST failed for $url"); return []; }
        $data = json_decode($resp,true);
        if (json_last_error()!==JSON_ERROR_NONE) {
            DebugPanel::log("JSON parse error: ".json_last_error_msg());
            return [];
        }
        DebugPanel::log("POST success");
        return $data;
    }
}



==== PHP FILE: ./public/src/config.php ====
Size: 1387 bytes
Last Modified: Tue, Jun 10, 2025 10:56:10 AM
----------------------------------------
<?php
// public/src/config.php
// ---------------------------
// Load environment and define constants.
// Enable full PHP error reporting.
// ---------------------------

ini_set('display_errors',1);
ini_set('display_startup_errors',1);
error_reporting(E_ALL);

// Path to .env (one above public)
$envPath = __DIR__ . '/../.env';
if (file_exists($envPath)) {
    foreach (file($envPath, FILE_IGNORE_NEW_LINES|FILE_SKIP_EMPTY_LINES) as $line) {
        $line = trim($line);
        if ($line === '' || strpos($line,'#') === 0) continue;
        [$key, $val] = explode('=', $line, 2);
        $val = trim($val, "\"'");
        putenv("$key=$val");
        $_ENV[$key] = $val;
    }
}

// Define constants
define('CLIENT_ID',       getenv('CLIENT_ID')       ?: '');
define('CLIENT_SECRET',   getenv('CLIENT_SECRET')   ?: '');
define('USERNAME',        getenv('USERNAME')        ?: '');
define('PASSWORD',        getenv('PASSWORD')        ?: '');
define('SCOPE',           getenv('SCOPE')           ?: '');
define('TOKEN_URL',       getenv('TOKEN_URL')       ?: '');
define('API_BASE_URL',    getenv('BASE_URL')        ?: '');
define('DEALER_CODE',     getenv('DEALER_CODE')     ?: '');
define('DEALER_ID',       getenv('DEALER_ID')       ?: '');
define('DEVICE_PAGE_SIZE',getenv('DEVICE_PAGE_SIZE')?: '');

// Debug toggle
define('DEBUG_MODE', true);



==== PHP FILE: ./public/src/DebugPanel.php ====
Size: 785 bytes
Last Modified: Tue, Jun 10, 2025 10:56:24 AM
----------------------------------------
<?php
// public/src/DebugPanel.php
// -------------------------------------
// Collects PHP debug messages and renders
// a fixed “Debug Panel” at the bottom.
// -------------------------------------

class DebugPanel
{
    private static array $logs = [];

    public static function log(string $msg): void
    {
        if (!DEBUG_MODE) return;
        $ts = date('Y-m-d H:i:s');
        self::$logs[] = "[$ts] $msg";
    }

    public static function output(): void
    {
        if (!DEBUG_MODE) return;
        echo '<div id="php-debug-panel">';
        echo '<strong>PHP Debug</strong><br>';
        foreach (self::$logs as $line) {
            echo htmlspecialchars($line, ENT_QUOTES, 'UTF-8') . '<br>';
        }
        echo '</div>';
    }
}



==== TEXT FILE: ./public/src/endpoints.json ====
Size: 8667 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
----------------------------------------
{
  "Developer": [
    {
      "title": "API Clients",
      "endpoints": [
        {
          "method": "GET",
          "path": "/ApiClient/List",
          "description": "Retrieve the list of API clients.",
          "logic": "Send GET to /ApiClient/List, parse JSON, display clients in table."
        }
      ]
    }
  ],
  "Admin": [
    {
      "title": "Analytics Reports",
      "endpoints": [
        {
          "method": "GET",
          "path": "/Analytics/GetReportResult",
          "description": "Fetch analytics report data.",
          "logic": "Send GET to /Analytics/GetReportResult, parse response, render charts."
        }
      ]
    },
    {
      "title": "API Clients",
      "endpoints": [
        {
          "method": "GET",
          "path": "/ApiClient/List",
          "description": "Retrieve the list of API clients.",
          "logic": "Same as Developer → show API clients."
        }
      ]
    },
    {
      "title": "Account Management",
      "endpoints": [
        {
          "method": "POST",
          "path": "/Account/GetAccounts",
          "description": "Retrieve list of user accounts.",
          "logic": "POST filters to /Account/GetAccounts, parse JSON, show accounts."
        },
        {
          "method": "POST",
          "path": "/Account/UpdateProfile",
          "description": "Update current user profile.",
          "logic": "POST updated profile to /Account/UpdateProfile, handle success/error."
        }
      ]
    }
  ],
  "Dealer": [
    {
      "title": "Analytics Reports",
      "endpoints": [
        {
          "method": "GET",
          "path": "/Analytics/GetReportResult",
          "description": "Fetch analytics report data.",
          "logic": "Same as Admin Analytics."
        }
      ]
    },
    {
      "title": "List Operations",
      "endpoints": [
        {
          "method": "POST",
          "path": "/Alert/List",
          "description": "Retrieve list of alerts.",
          "logic": "POST paging/filter to /Alert/List, render alerts."
        },
        {
          "method": "POST",
          "path": "/Contract/List",
          "description": "Retrieve list of contracts.",
          "logic": "POST paging/filter to /Contract/List, render contracts."
        },
        {
          "method": "POST",
          "path": "/Customer/List",
          "description": "Retrieve list of customers.",
          "logic": "POST paging/filter to /Customer/List, render customers."
        },
        {
          "method": "POST",
          "path": "/Device/List",
          "description": "Retrieve list of devices.",
          "logic": "POST filters to /Device/List, render devices."
        },
        {
          "method": "POST",
          "path": "/MeterReading/List",
          "description": "Retrieve list of meter readings.",
          "logic": "POST filters to /MeterReading/List, render readings."
        },
        {
          "method": "POST",
          "path": "/SupplyItem/List",
          "description": "Retrieve list of supply items.",
          "logic": "POST filters to /SupplyItem/List, render supplies."
        }
      ]
    }
  ],
  "Service": [
    {
      "title": "Alert Limits",
      "endpoints": [
        {
          "method": "GET",
          "path": "/AlertLimit2/GetAllLimits",
          "description": "Fetch all alert limits.",
          "logic": "Send GET to /AlertLimit2/GetAllLimits, display limits."
        }
      ]
    },
    {
      "title": "List Operations",
      "endpoints": [
        {
          "method": "POST",
          "path": "/Alert/List",
          "description": "Retrieve list of alerts.",
          "logic": "Same as Dealer → Alert/List."
        },
        {
          "method": "POST",
          "path": "/Contract/List",
          "description": "Retrieve list of contracts.",
          "logic": "Same as Dealer → Contract/List."
        },
        {
          "method": "POST",
          "path": "/Customer/List",
          "description": "Retrieve list of customers.",
          "logic": "Same as Dealer → Customer/List."
        },
        {
          "method": "POST",
          "path": "/Device/List",
          "description": "Retrieve list of devices.",
          "logic": "Same as Dealer → Device/List."
        },
        {
          "method": "POST",
          "path": "/MeterReading/List",
          "description": "Retrieve list of meter readings.",
          "logic": "Same as Dealer → MeterReading/List."
        },
        {
          "method": "POST",
          "path": "/SupplyItem/List",
          "description": "Retrieve list of supply items.",
          "logic": "Same as Dealer → SupplyItem/List."
        }
      ]
    }
  ],
  "Sales": [
    {
      "title": "Analytics Reports",
      "endpoints": [
        {
          "method": "GET",
          "path": "/Analytics/GetReportResult",
          "description": "Fetch analytics report data.",
          "logic": "Same as Admin → Analytics."
        }
      ]
    },
    {
      "title": "List Operations",
      "endpoints": [
        {
          "method": "POST",
          "path": "/Alert/List",
          "description": "Retrieve list of alerts.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/Contract/List",
          "description": "Retrieve list of contracts.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/Customer/List",
          "description": "Retrieve list of customers.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/Device/List",
          "description": "Retrieve list of devices.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/MeterReading/List",
          "description": "Retrieve list of meter readings.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/SupplyItem/List",
          "description": "Retrieve list of supply items.",
          "logic": "Same as Dealer."
        }
      ]
    }
  ],
  "Accounting": [
    {
      "title": "Analytics Reports",
      "endpoints": [
        {
          "method": "GET",
          "path": "/Analytics/GetReportResult",
          "description": "Fetch analytics report data.",
          "logic": "Same as Admin → Analytics."
        }
      ]
    },
    {
      "title": "List Operations",
      "endpoints": [
        {
          "method": "POST",
          "path": "/Alert/List",
          "description": "Retrieve list of alerts.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/Contract/List",
          "description": "Retrieve list of contracts.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/Customer/List",
          "description": "Retrieve list of customers.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/Device/List",
          "description": "Retrieve list of devices.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/MeterReading/List",
          "description": "Retrieve list of meter readings.",
          "logic": "Same as Dealer."
        },
        {
          "method": "POST",
          "path": "/SupplyItem/List",
          "description": "Retrieve list of supply items.",
          "logic": "Same as Dealer."
        }
      ]
    }
  ],
  "Guest": [
    {
      "title": "Profile & Auth",
      "endpoints": [
        {
          "method": "GET",
          "path": "/Account/GetProfile",
          "description": "Fetch your user profile.",
          "logic": "Send GET to /Account/GetProfile, display profile info."
        },
        {
          "method": "POST",
          "path": "/Account/Logout",
          "description": "Log out current user.",
          "logic": "Send POST to /Account/Logout, clear session, redirect."
        },
        {
          "method": "POST",
          "path": "/Account/UpdateProfile",
          "description": "Update your profile info.",
          "logic": "POST new data to /Account/UpdateProfile, confirm result."
        }
      ]
    }
  ]
}



==== TEXT FILE: ./README.md ====
Size: 930 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
----------------------------------------
# MPSM Dashboard (PHP + Vanilla JS)

## Overview

A lightweight PHP front-end serving a dark glassmorphic dashboard for the MPS Monitor API.  
Includes:

- **Full PHP error reporting** on every page  
- A **Debug Panel** baked into every view, logging PHP & JS errors  
- Role-based cards (Developer, Admin, Dealer, Service, Sales, Accounting, Guest)  
- Drill-down modal for endpoint details  
- DB & API connectivity checks  

## Installation

1. Copy `.env.example` to `.env` and fill in credentials.  
2. Drop the entire `mpsm-dashboard/` folder into your server’s document root.  
3. Ensure `public/` is your web root (e.g. `https://…/index.php`).  
4. Open `https://your-domain/` in your browser.

## Next Steps

- Implement real DB/API checks in `db-status.php` and `api-status.php`.  
- Hook up MPS Monitor token logic & real API calls.  
- Enjoy the built-in debug panel for troubleshooting!



==== TEXT FILE: ./Refined Endpoint Groups JSON.json ====
Size: 5116 bytes
Last Modified: Tue, Jun 10, 2025 11:13:34 AM
----------------------------------------
{
  "Developer": {
    "WhiteLabel": {
      "endpoints": [
        "/WhiteLabel/GetWhiteLabel",
        "/WhiteLabel/Update",
        "/WhiteLabel/GetPlaceholders"
      ]
    },
    "Devices": {
      "endpoints": [
        "/Devices/SetFirmware",
        "/Devices/SetZebraSettings"
      ]
    }
  },
  "Admin": {
    "Account": {
      "Profile": {
        "endpoints": [
          "/Account/GetProfile",
          "/Account/UpdateProfile"
        ]
      },
      "Authentication": {
        "2FA": {
          "endpoints": [
            "/Account/GetPsk2faData",
            "/Account/GetPsk2faDataForProfile",
            "/Account/GetPsk2faDataForAccount",
            "/Account/Enable2faForAccount",
            "/Account/Enable2faForProfile",
            "/Account/Delete2fa",
            "/Account/DeleteProfile2fa"
          ]
        },
        "Session": {
          "endpoints": [
            "/Account/RefreshAuthCookie",
            "/Account/Logout",
            "/Account/SendOtpEmailForAccount"
          ]
        },
        "Password": {
          "endpoints": [
            "/Account/ChangePassword",
            "/Account/ResetPassword",
            "/Account/ResetPasswordVerifyToken"
          ]
        }
      },
      "AccountManagement": {
        "endpoints": [
          "/Account/SetPreferredDealer",
          "/Account/GetAccount",
          "/Account/GetAccounts",
          "/Account/Create",
          "/Account/Update",
          "/Account/Delete"
        ]
      },
      "Preferences": {
        "endpoints": [
          "/Account/ChangeLanguage"
        ]
      }
    }
  },
  "Dealer": {
    "AlertLimit2": {
      "Dealer": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Dealer/GetDefault",
            "/AlertLimit2/Dealer/CreateDefault",
            "/AlertLimit2/Dealer/UpdateDefault"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit2/Dealer/GetProductList",
            "/AlertLimit2/Dealer/GetProduct",
            "/AlertLimit2/Dealer/DeleteProduct",
            "/AlertLimit2/Dealer/CreateProduct",
            "/AlertLimit2/Dealer/UpdateProduct"
          ]
        }
      }
    },
    "AlertLimit": {
      "Dealer": {
        "endpoints": [
          "/AlertLimit/Dealer/Get",
          "/AlertLimit/Dealer/Update"
        ]
      }
    }
  },
  "Service": {
    "AlertLimit2": {
      "General": {
        "endpoints": [
          "/AlertLimit2/DisableAlertLimits",
          "/AlertLimit2/GetAllLimits"
        ]
      },
      "Customer": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Customer/GetDefault",
            "/AlertLimit2/Customer/CreateDefault",
            "/AlertLimit2/Customer/UpdateDefault",
            "/AlertLimit2/Customer/DeleteDefaultForConsumable"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit2/Customer/GetProductList",
            "/AlertLimit2/Customer/GetProduct",
            "/AlertLimit2/Customer/DeleteProduct",
            "/AlertLimit2/Customer/CreateProduct",
            "/AlertLimit2/Customer/UpdateProduct"
          ]
        }
      },
      "Device": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Device/GetDefault",
            "/AlertLimit2/Device/CreateDefault",
            "/AlertLimit2/Device/UpdateDefault",
            "/AlertLimit2/Device/DeleteDefaultForConsumable"
          ]
        }
      }
    },
    "AlertLimit": {
      "Customer": {
        "General": {
          "endpoints": [
            "/AlertLimit/Customer/Get",
            "/AlertLimit/Customer/Update"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit/Customer/Product/List",
            "/AlertLimit/Customer/Product/Update"
          ]
        }
      },
      "Device": {
        "endpoints": [
          "/AlertLimit/Device/Get",
          "/AlertLimit/Device/Update"
        ]
      }
    },
    "Ticket": {
      "General": {
        "endpoints": [
          "/Ticket/GetByNumber",
          "/Ticket/GetTickets",
          "/Ticket/Create",
          "/Ticket/Update",
          "/Ticket/CreateChild"
        ]
      },
      "Metadata": {
        "endpoints": [
          "/Ticket/GetAttachment",
          "/Ticket/GetMedia",
          "/Ticket/GetCategoryLanguage",
          "/Ticket/GetSubTypesByCategory",
          "/Ticket/GetOperators",
          "/Ticket/GetCustomerTicketStatus"
        ]
      }
    },
    "TraceVolume": {
      "endpoints": [
        "/TraceVolume/GetList",
        "/TraceVolume/Get",
        "/TraceVolume/Create",
        "/TraceVolume/Update",
        "/TraceVolume/NewEvent"
      ]
    }
  },
  "Sales": {
    "TradingPartner": {
      "endpoints": [
        "/TradingPartner/Get",
        "/TradingPartner/GetList",
        "/TradingPartner/Update"
      ]
    }
  },
  "Accounting": {},
  "Guest": {
    "Account": {
      "Password": {
        "endpoints": [
          "/Account/ResetPassword",
          "/Account/ResetPasswordVerifyToken"
        ]
      }
    }
  }
}


==== TEXT FILE: ./Swagger.json ====
Size: 2109007 bytes
Last Modified: Tue, Jun 10, 2025 10:22:56 AM
----------------------------------------
{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Communication/GetPortalReleaseNotes": {
      "get": {
        "tags": [
          "CommunicationApi"
        ],
        "summary": "Get Portal Release Notes",
        "operationId": "Communication/GetPortalReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[PortalReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Consumable/List": {
      "post": {
        "tags": [
          "ConsumableApi"
        ],
        "summary": "List all devices consumables",
        "operationId": "Consumable/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConsumablesDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/List": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the offices.",
        "operationId": "CostCenter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCostCentersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Get": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the office.",
        "operationId": "CostCenter/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Creates the office.",
        "operationId": "CostCenter/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Update": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Updates the office.",
        "operationId": "CostCenter/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Delete": {
      "delete": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Delete  office.",
        "operationId": "CostCenter/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns counters",
        "operationId": "Counter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListDetailed": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/ListDetailed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersDetailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDetailedDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListBlended": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns blended counters",
        "operationId": "Counter/ListBlended",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersBlendDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Export": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Export",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CounterCatalogItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Update": {
      "put": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Suggestions": {
      "get": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Suggestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CounterCatalogSuggestionsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/List": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/Device/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Gets or sets the from date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Gets or sets the to date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CounterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/Export": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Export detailed counters",
        "operationId": "Counter/Device/Export",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportToCsv",
            "in": "query",
            "description": "Gets or sets a value indicating whether [export to CSV] or [export to XSLSX].",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Gets or sets the from date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Gets or sets the to


