/**
 * styles.css â€” Unified drag-and-drop layout support, glows, and responsive fixes
 *
 * Changelog:
 * - Changed .dashboard-container to absolute inset-0 (remove fixed width/height and debug border).
 * - Ensured .dashboard-container sits inside a relative <main>.
 * - Retained min-height for fallback, removed debug border.
 * - Added improved drag feedback, drag-handle cursors.
 * - Cleaned up duplicate changelogs into a single consolidated block.
 */

:root {
  /* Theme colors */
  --bg-light:    #F0F0F3;
  --bg-dark:     #1A1A1E;
  --text-light:  #1A1A1A;
  --text-dark:   #F5F5F5;
  --neon-c:      #00F0FF;
  --neon-m:      #FF00D4;
  --neon-y:      #FFE000;

  /* Grid & drag-and-drop */
  --grid-gap:    12px;
  --card-width:  280px;
  --bg-accent:   #e5e7eb;
}

/* Dark theme accent adjustment */
[data-theme="dark"] {
  --bg-accent: #374151;
}

/* Theme application */
[data-theme="light"] {
  background: var(--bg-light);
  color: var(--text-light);
}
[data-theme="dark"] {
  background: var(--bg-dark);
  color: var(--text-dark);
}

/* Base styles for HTML, body, and main for full height layout */
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: 'Inter', sans-serif; /* Example font */
}

body {
  overflow: hidden; /* Prevent body scroll if main content overflows */
  display: flex; /* Use flexbox to ensure main takes full height */
  flex-direction: column;
}

main {
  flex-grow: 1; /* Allow main to take available space */
  position: relative; /* Crucial for absolute positioning of .dashboard-container */
  height: 100vh; /* Ensure main takes full viewport height */
  width: 100vw; /* Ensure main takes full viewport width */
  overflow: hidden; /* Contain dashboard overflow */
}

/* Neumorphic base styling */
.neumorphic {
  background: var(--bg-accent);
  border-radius: 12px;
  box-shadow:
    6px 6px 12px var(--shadow-dark, rgba(0,0,0,0.4)),
    -6px -6px 12px var(--shadow-light, rgba(255,255,255,0.05));
  transition: all 0.2s ease-in-out;
}
.neumorphic-pressed {
  box-shadow:
    inset 2px 2px 5px var(--shadow-dark, rgba(0,0,0,0.4)),
    inset -2px -2px 5px var(--shadow-light, rgba(255,255,255,0.05));
}

/* Buttons */
.neu-btn {
  background: var(--bg-accent);
  border: none;
  border-radius: 8px;
  padding: 0.5rem 0.75rem;
  font-weight: 500;
  color: var(--text-dark);
  cursor: pointer;
  box-shadow: 3px 3px 6px rgba(0,0,0,0.3), -3px -3px 6px rgba(255,255,255,0.05);
  transition: all 0.2s ease-in-out;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
.neu-btn:hover {
  box-shadow: 4px 4px 8px rgba(0,0,0,0.4), -4px -4px 8px rgba(255,255,255,0.07);
}
.neu-btn:active {
  box-shadow: inset 2px 2px 5px rgba(0,0,0,0.3), inset -2px -2px 5px rgba(255,255,255,0.05);
}

/* Utility classes for flexbox and alignment */
.flex { display: flex; }
.items-center { align-items: center; }
.justify-between { justify-content: space-between; }
.justify-center { justify-content: center; }
.flex-col { flex-direction: column; }
.gap-1 { gap: 0.25rem; }
.gap-2 { gap: 0.5rem; }
.gap-3 { gap: 0.75rem; }
.gap-4 { gap: 1rem; }
.mb-1 { margin-bottom: 0.25rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-3 { margin-bottom: 0.75rem; }
.mb-4 { margin-bottom: 1rem; }
.mt-4 { margin-top: 1rem; }
.p-2 { padding: 0.5rem; }
.p-3 { padding: 0.75rem; }
.p-4 { padding: 1rem; }
.p-6 { padding: 1.5rem; }
.pt-4 { padding-top: 1rem; }
.rounded { border-radius: 0.25rem; }
.rounded-lg { border-radius: 0.5rem; }
.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.5rem; }
.shadow-md { box-shadow: 0 4px 6px rgba(0,0,0,0.1); }
.shadow-xl { box-shadow: 0 20px 25px rgba(0,0,0,0.25); }
.bg-gradient-to-r { background-image: linear-gradient(to right, var(--tw-gradient-stops)); }
.from-gray-700 { --tw-gradient-from: #4b5563; --tw-gradient-to: rgba(75,85,99,0); }
.via-gray-800 { --tw-gradient-stops: var(--tw-gradient-from), #1f2937, var(--tw-gradient-to); } /* Corrected value for via-gray-800 */
.to-gray-900 { --tw-gradient-to: #111827; }
.text-base { font-size: 1rem; }
.text-lg { font-size: 1.125rem; }
.text-xl { font-size: 1.25rem; }
.text-2xl { font-size: 1.5rem; }
.font-medium { font-weight: 500; }
.font-semibold { font-weight: 600; }
.font-mono { font-family: monospace; }
.tracking-wide { letter-spacing: 0.025em; }
.truncate { overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
.text-center { text-align: center; }
.opacity-50 { opacity: 0.5; }
.opacity-75 { opacity: 0.75; }
.w-full { width: 100%; }
.h-64 { height: 16rem; } /* 256px */
.h-40 { height: 10rem; } /* 160px */
.max-h-48 { max-height: 12rem; } /* 192px */
.overflow-auto { overflow: auto; }
.overflow-y-auto { overflow-y: auto; }
.bg-gray-100 { background-color: #f3f4f6; }
.dark\:bg-gray-800 { background-color: #1f2937; }
.text-xs { font-size: 0.75rem; }
.text-sm { font-size: 0.875rem; }
.text-green-500 { color: #22c55e; }
.text-red-500 { color: #ef4444; }
.space-y-2 > :not([hidden]) ~ :not([hidden]) { margin-top: 0.5rem; }
.list-disc { list-style-type: disc; }
.list-inside { list-style-position: inside; }
.form-checkbox { /* basic checkbox styling */ }
.text-blue-600 { color: #2563eb; }
.border-t { border-top-width: 1px; }
.pt-4 { padding-top: 1rem; }
.border-gray-600 { border-color: #4b5563; }
.relative { position: relative; }
.absolute { position: absolute; }
.top-0 { top: 0; }
.left-0 { left: 0; }
.z-50 { z-index: 50; }
.hidden { display: none; }
.flex { display: flex; }
.fixed { position: fixed; }
.inset-0 { top: 0; right: 0; bottom: 0; left: 0; }
.bg-black { background-color: #000; }
.bg-opacity-60 { background-color: rgba(0,0,0,0.6); }
.w-11\/12 { width: 91.666667%; }
.md\:w-2\/3 { /* Example responsive width */ }
.max-h-\[90vh\] { max-height: 90vh; }
.right-4 { right: 1rem; }
.col-span-2 { grid-column: span 2 / span 2; }
.grid { display: grid; }
.grid-cols-2 { grid-template-columns: repeat(2, minmax(0, 1fr)); }
.grid-cols-3 { grid-template-columns: repeat(3, minmax(0, 1fr)); }
.transition-all { transition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.duration-200 { transition-duration: 200ms; }
.overflow-hidden { overflow: hidden; }
.opacity-0 { opacity: 0; }
.transition-opacity { transition-property: opacity; }
.max-h-3rem { max-height: 3rem; }
.max-h-20rem { max-height: 20rem; }
/* ... (rest of your existing CSS) ... */

/* ============================= */
/* Drag-and-drop layout support: */
/* ============================= */

/* Container for absolute-positioned cards */
.dashboard-container {
  position: absolute;
  inset: 0; /* fill parent <main> which is relative */
  /* REMOVED: min-height: 600px; */ /* This is now handled by main's height: 100vh */
  background-image:
    radial-gradient(circle, var(--bg-accent) 1px, transparent 1px);
  background-size: 20px 20px;
  overflow: hidden;
}

/* Make cards absolute and draggable */
.card-wrapper {
  position: absolute;
  touch-action: none;
  transition: left 0.1s ease-out, top 0.1s ease-out;
  min-width: var(--card-width);
  max-width: 500px;
  z-index: 1;
}

/* Dragging state feedback */
.card-wrapper.dragging {
  opacity: 0.9;
  transform: scale(1.02);
  z-index: 1000;
  box-shadow:
    0 12px 32px rgba(0,0,0,0.25),
    0 0 12px rgba(0,240,255,0.3);
  transition: none;
}

/* Drag handle cursor */
.card-header {
  cursor: grab;
  user-select: none;
}