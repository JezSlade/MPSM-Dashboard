WEB APPLICATION CONTENT COLLECTION
Generated: Thu, Jun 12, 2025 10:29:47 AM
----------------------------------------

==== BINARY FILE: ./.DS_Store ====
Size: 6148 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
[Binary content not displayed]


==== CONFIG FILE: ./.env ====
Size: 648 bytes
Last Modified: Wed, Jun 11, 2025  5:02:18 PM
----------------------------------------
CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token

DEALER_CODE=NY06AGDWUQ
DEALER_ID=SZ13qRwU5GtFLj0i_CbEgQ2

MPSM_API_BASE_URL=https://api.abassetmanagement.com/api3/
# Optional override of BASE_URL if your CSS/JS lives elsewhere:
# BASE_URL=https://mpsm.resolutionsbydesign.us/

DEBUG_MODE=true
DEBUG_PANEL_ENABLED=true
DEBUG_LOG_TO_FILE=true
MAX_DEBUG_LOG_SIZE_MB=5

LOG_INFO=true
LOG_WARNING=true
LOG_ERROR=true
LOG_DEBUG=true
LOG_SECURITY=true

APP_VERSION=0.1.2

TIMEZONE=America/New_York



==== TEXT FILE: ./.github/workflows/ci.yml ====
Size: 2331 bytes
Last Modified: Thu, Jun 12, 2025 10:25:01 AM
----------------------------------------
# .github/workflows/ci.yml
name: CI / Lint & Validate

# Run this workflow on pushes and PRs to main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job: PHP syntax validation
  php-lint:
    name: "Lint PHP"
    runs-on: ubuntu-latest
    steps:
      # 1. Check out repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up PHP environment
      - name: Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none

      # 3. (Optional) Install composer dependencies if your code uses them
      # - name: Install Composer dependencies
      #   run: composer install --no-progress --no-suggest --prefer-dist

      # 4. Validate PHP syntax for every .php file
      - name: PHP Syntax Check (php -l)
        run: |
          # find all PHP files except vendor, run php -l on each
          find . -type f -name '*.php' \
            -not -path './vendor/*' \
            -print0 | xargs -0 -n1 php -l

  # Job: JavaScript linting
  js-lint:
    name: "Lint JS"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. Install Node.js for ESLint
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # 2. Install your JS dependencies (assuming package.json in repo root)
      - name: Install dependencies
        run: npm ci

      # 3. Run ESLint over your js/ folder
      - name: Run ESLint
        run: npx eslint js/

  # Job: JSON validation
  json-validate:
    name: "Validate JSON"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. Install jq (JSON CLI) for linting
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # 2. Lint each JSON schema file
      - name: Lint JSON files
        run: |
          for file in AllEndpoints.json \
                      "Refined Endpoint Groups JSON.json" \
                      Swagger.json; do
            echo "Checking $file"
            jq . "$file" >/dev/null || (echo "✖ Invalid JSON in $file" && exit 1)
          done



==== TEXT FILE: ./.github/workflows/deploy.yml ====
Size: 1943 bytes
Last Modified: Wed, Jun 11, 2025 12:47:49 PM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File in Root
        # This command creates 'version.js' directly in the root of the checked-out repository.
        run: |
          echo "window.appVersion = \"0.0.0.${{ github.run_number }}\";" > version.js

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          # IMPORTANT: Use a GitHub Secret for your password in a real-world scenario!
          # For this non-production example, it's hardcoded as per your instruction.
          password: Deploy123!
          protocol: ftp
          port: 21

          # Deploy everything from the root of the checked-out repository
          local-dir: ./
          # Deploy to the root directory of the FTP server
          server-dir: /

          # CAUTION: This will delete EVERYTHING on the server-dir before uploading!
          dangerous-clean-slate: true

          exclude: |
            .git/
            .github/ # Exclude GitHub Actions workflow files and their directories
            # Add any other files/directories you do NOT want to deploy from your repository root.
            # Example: node_modules/
            # Example: .env.development

          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo "### DEPLOYMENT SUMMARY ###"
          echo "- Version: 0.0.0.${{ github.run_number }}"
          echo "- FTP Server: ftp.resolutionsbydesign.us"
          echo "- Server Directory: /"
          echo "- Local Directory: ./"


==== TEXT FILE: ./Ai_Instructions_README.md ====
Size: 7170 bytes
Last Modified: Thu, Jun 12, 2025  8:36:59 AM
----------------------------------------
# AI AUDIT INSTRUCTIONS

## HOW TO PERFORM THE AUDIT

### Step 1: Repository Structure Analysis
- Examine the overall project structure and organization
- Identify main application entry points and core modules
- Map out the data flow between components

### Step 2: Code Quality Review
- Identify code duplication and opportunities for refactoring
- Check for proper error handling and exception management
- Look for memory leaks and resource management issues
- Assess variable naming conventions and code readability
- Check for dead code and unused imports/dependencies
- Evaluate function and class complexity
- Review commenting and documentation quality

### Step 3: Architecture Review
- Evaluate component separation and modularity
- Check for proper separation of concerns
- Assess dependency injection and coupling
- Review API design and REST compliance
- Examine database schema design and normalization
- Check for proper configuration management
- Assess scalability considerations

### Step 4: Dependency Management
- Check for outdated or vulnerable dependencies
- Look for unused dependencies that can be removed
- Assess dependency security and licensing
- Check for circular dependencies
- Review package lock file consistency

### Step 7: Testing Coverage
- Identify areas lacking unit tests
- Check for integration test coverage
- Look for edge cases that aren't tested
- Assess test quality and maintainability
- Check for proper mocking and test isolation

## WHAT TO LOOK FOR

### Security Vulnerabilities
- **Hardcoded Credentials**: API keys, passwords, tokens in source code
- **SQL Injection**: Unparameterized queries, string concatenation in SQL
- **XSS Vulnerabilities**: Unescaped user input in HTML output
- **Authentication Flaws**: Weak password policies, session fixation
- **Authorization Issues**: Missing access controls, privilege escalation
- **CSRF Vulnerabilities**: Missing CSRF tokens or validation
- **File Upload Issues**: Unrestricted file types, path traversal
- **Insecure Cryptography**: Weak algorithms, hardcoded keys
- **Information Disclosure**: Verbose error messages, debug info exposure
- **Insecure Dependencies**: Known CVEs in third-party packages

### Code Quality Issues
- **Code Duplication**: Repeated logic that should be extracted
- **Long Functions**: Methods exceeding 50 lines that need breaking down
- **Deep Nesting**: Excessive if/else or loop nesting levels
- **Magic Numbers**: Hardcoded values that should be constants
- **Poor Naming**: Unclear variable, function, or class names
- **Missing Error Handling**: Functions without try-catch or error checks
- **Inconsistent Formatting**: Mixed indentation, spacing, or style
- **Commented Code**: Dead code left in comments
- **TODO Comments**: Unfinished work or technical debt markers
- **Complex Conditionals**: Boolean logic that could be simplified

### Performance Problems
- **N+1 Database Queries**: Queries inside loops
- **Missing Database Indexes**: Slow queries on unindexed columns
- **Inefficient Algorithms**: O(n²) where O(n) would work
- **Memory Leaks**: Objects not properly disposed or cleared
- **Synchronous Operations**: Blocking calls that could be async
- **Large Payloads**: Oversized API responses or data transfers
- **Missing Caching**: Repeated expensive operations
- **Resource Waste**: Unnecessary object creation or processing
- **Inefficient Loops**: Unnecessary work inside iterations
- **Database Connection Issues**: Not closing connections properly

### Architecture Concerns
- **Tight Coupling**: Components too dependent on each other
- **Missing Abstractions**: Repeated patterns without interfaces
- **Monolithic Structure**: Large files or classes doing too much
- **Circular Dependencies**: Components referencing each other
- **Configuration Issues**: Hardcoded environment-specific values
- **API Design Flaws**: Non-RESTful endpoints, inconsistent responses
- **Database Design Issues**: Denormalization, missing foreign keys
- **Scalability Bottlenecks**: Single points of failure or contention
- **Missing Logging**: Insufficient debugging and monitoring
- **Poor Error Propagation**: Errors not properly bubbled up

## AUDIT REPORT FORMAT

### Findings Structure
Present each finding as a numbered item with:

```
## FINDINGS

### Security Issues
1. **Hardcoded API Key in config.php** (CRITICAL)
   - File: `config/api.php` line 15
   - Issue: Database password hardcoded in source
   - Impact: Credential exposure in version control
   - Fix: Move to environment variable

2. **SQL Injection in user search** (HIGH)
   - File: `models/User.php` line 45
   - Issue: Unparameterized query construction
   - Impact: Database compromise possible
   - Fix: Use prepared statements with parameters

### Code Quality Issues
3. **Duplicate authentication logic** (MEDIUM)
   - Files: `controllers/AuthController.php`, `middleware/Auth.php`
   - Issue: Same validation code repeated in multiple places
   - Impact: Maintenance burden, inconsistency risk
   - Fix: Extract to shared AuthService class

4. **Missing error handling** (MEDIUM)
   - File: `services/PaymentService.php` line 23
   - Issue: API call without try-catch
   - Impact: Unhandled exceptions crash application
   - Fix: Add proper exception handling

### Performance Issues
5. **N+1 query problem** (HIGH)
   - File: `controllers/OrderController.php` line 67
   - Issue: Loading users individually in loop
   - Impact: Slow page load, database overload
   - Fix: Use eager loading or single query with joins

6. **Missing database index** (MEDIUM)
   - Table: `orders`
   - Issue: No index on frequently queried `user_id` column
   - Impact: Slow query performance
   - Fix: Add index on `user_id` column
```

### Priority Levels
- **CRITICAL**: Security vulnerabilities requiring immediate attention
- **HIGH**: Significant issues affecting functionality or performance
- **MEDIUM**: Important improvements for maintainability
- **LOW**: Minor optimizations or best practices

### Summary Format
End with a numbered summary list:

```
## PRIORITY RECOMMENDATIONS
1. Fix hardcoded API key in config.php
2. Implement SQL injection protection in user search
3. Extract duplicate authentication logic
4. Add error handling to PaymentService
5. Resolve N+1 query in OrderController
6. Add database index on orders.user_id
```

This format allows you to say "Fix 1, 3, 4" and developers know exactly what to address.


### File Definitions:
Refined Endpoint Groups JSON.json    = Organized JSON of All Endpoints
Swagger.json                         = Full Swagger JSON
collectdata.sh                       = Script to Collect all project data into a single file
collect_files.sh                     = Script to Collect all project files into a single file
backup.deploy.yml                    = A backup of my deploy.yml (my original got trashed somehow so now I keep a spare)
AllEndpoints.json                    = A list of all Endpoints and their expected payloads.


==== TEXT FILE: ./AllEndpoints.json ====
Size: 2184874 bytes
Last Modified: Tue, Jun 10, 2025 10:23:48 AM
----------------------------------------
{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Communication/GetPortalReleaseNotes": {
      "get": {
        "tags": [
          "CommunicationApi"
        ],
        "summary": "Get Portal Release Notes",
        "operationId": "Communication/GetPortalReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[PortalReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Consumable/List": {
      "post": {
        "tags": [
          "ConsumableApi"
        ],
        "summary": "List all devices consumables",
        "operationId": "Consumable/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConsumablesDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/List": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the offices.",
        "operationId": "CostCenter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCostCentersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Get": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the office.",
        "operationId": "CostCenter/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Creates the office.",
        "operationId": "CostCenter/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Update": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Updates the office.",
        "operationId": "CostCenter/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Delete": {
      "delete": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Delete  office.",
        "operationId": "CostCenter/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns counters",
        "operationId": "Counter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListDetailed": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/ListDetailed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersDetailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDetailedDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListBlended": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns blended counters",
        "operationId": "Counter/ListBlended",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersBlendDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Export": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Export",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CounterCatalogItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Update": {
      "put": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Updat


==== TEXT FILE: ./app_contents_20250612_102859.txt ====
Size: 113148 bytes
Last Modified: Thu, Jun 12, 2025 10:29:50 AM
----------------------------------------
WEB APPLICATION CONTENT COLLECTION
Generated: Thu, Jun 12, 2025 10:29:47 AM
----------------------------------------

==== BINARY FILE: ./.DS_Store ====
Size: 6148 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
[Binary content not displayed]


==== CONFIG FILE: ./.env ====
Size: 648 bytes
Last Modified: Wed, Jun 11, 2025  5:02:18 PM
----------------------------------------
CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token

DEALER_CODE=NY06AGDWUQ
DEALER_ID=SZ13qRwU5GtFLj0i_CbEgQ2

MPSM_API_BASE_URL=https://api.abassetmanagement.com/api3/
# Optional override of BASE_URL if your CSS/JS lives elsewhere:
# BASE_URL=https://mpsm.resolutionsbydesign.us/

DEBUG_MODE=true
DEBUG_PANEL_ENABLED=true
DEBUG_LOG_TO_FILE=true
MAX_DEBUG_LOG_SIZE_MB=5

LOG_INFO=true
LOG_WARNING=true
LOG_ERROR=true
LOG_DEBUG=true
LOG_SECURITY=true

APP_VERSION=0.1.2

TIMEZONE=America/New_York



==== TEXT FILE: ./.github/workflows/ci.yml ====
Size: 2331 bytes
Last Modified: Thu, Jun 12, 2025 10:25:01 AM
----------------------------------------
# .github/workflows/ci.yml
name: CI / Lint & Validate

# Run this workflow on pushes and PRs to main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job: PHP syntax validation
  php-lint:
    name: "Lint PHP"
    runs-on: ubuntu-latest
    steps:
      # 1. Check out repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up PHP environment
      - name: Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none

      # 3. (Optional) Install composer dependencies if your code uses them
      # - name: Install Composer dependencies
      #   run: composer install --no-progress --no-suggest --prefer-dist

      # 4. Validate PHP syntax for every .php file
      - name: PHP Syntax Check (php -l)
        run: |
          # find all PHP files except vendor, run php -l on each
          find . -type f -name '*.php' \
            -not -path './vendor/*' \
            -print0 | xargs -0 -n1 php -l

  # Job: JavaScript linting
  js-lint:
    name: "Lint JS"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. Install Node.js for ESLint
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # 2. Install your JS dependencies (assuming package.json in repo root)
      - name: Install dependencies
        run: npm ci

      # 3. Run ESLint over your js/ folder
      - name: Run ESLint
        run: npx eslint js/

  # Job: JSON validation
  json-validate:
    name: "Validate JSON"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. Install jq (JSON CLI) for linting
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # 2. Lint each JSON schema file
      - name: Lint JSON files
        run: |
          for file in AllEndpoints.json \
                      "Refined Endpoint Groups JSON.json" \
                      Swagger.json; do
            echo "Checking $file"
            jq . "$file" >/dev/null || (echo "✖ Invalid JSON in $file" && exit 1)
          done



==== TEXT FILE: ./.github/workflows/deploy.yml ====
Size: 1943 bytes
Last Modified: Wed, Jun 11, 2025 12:47:49 PM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File in Root
        # This command creates 'version.js' directly in the root of the checked-out repository.
        run: |
          echo "window.appVersion = \"0.0.0.${{ github.run_number }}\";" > version.js

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          # IMPORTANT: Use a GitHub Secret for your password in a real-world scenario!
          # For this non-production example, it's hardcoded as per your instruction.
          password: Deploy123!
          protocol: ftp
          port: 21

          # Deploy everything from the root of the checked-out repository
          local-dir: ./
          # Deploy to the root directory of the FTP server
          server-dir: /

          # CAUTION: This will delete EVERYTHING on the server-dir before uploading!
          dangerous-clean-slate: true

          exclude: |
            .git/
            .github/ # Exclude GitHub Actions workflow files and their directories
            # Add any other files/directories you do NOT want to deploy from your repository root.
            # Example: node_modules/
            # Example: .env.development

          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo "### DEPLOYMENT SUMMARY ###"
          echo "- Version: 0.0.0.${{ github.run_number }}"
          echo "- FTP Server: ftp.resolutionsbydesign.us"
          echo "- Server Directory: /"
          echo "- Local Directory: ./"


==== TEXT FILE: ./Ai_Instructions_README.md ====
Size: 7170 bytes
Last Modified: Thu, Jun 12, 2025  8:36:59 AM
----------------------------------------
# AI AUDIT INSTRUCTIONS

## HOW TO PERFORM THE AUDIT

### Step 1: Repository Structure Analysis
- Examine the overall project structure and organization
- Identify main application entry points and core modules
- Map out the data flow between components

### Step 2: Code Quality Review
- Identify code duplication and opportunities for refactoring
- Check for proper error handling and exception management
- Look for memory leaks and resource management issues
- Assess variable naming conventions and code readability
- Check for dead code and unused imports/dependencies
- Evaluate function and class complexity
- Review commenting and documentation quality

### Step 3: Architecture Review
- Evaluate component separation and modularity
- Check for proper separation of concerns
- Assess dependency injection and coupling
- Review API design and REST compliance
- Examine database schema design and normalization
- Check for proper configuration management
- Assess scalability considerations

### Step 4: Dependency Management
- Check for outdated or vulnerable dependencies
- Look for unused dependencies that can be removed
- Assess dependency security and licensing
- Check for circular dependencies
- Review package lock file consistency

### Step 7: Testing Coverage
- Identify areas lacking unit tests
- Check for integration test coverage
- Look for edge cases that aren't tested
- Assess test quality and maintainability
- Check for proper mocking and test isolation

## WHAT TO LOOK FOR

### Security Vulnerabilities
- **Hardcoded Credentials**: API keys, passwords, tokens in source code
- **SQL Injection**: Unparameterized queries, string concatenation in SQL
- **XSS Vulnerabilities**: Unescaped user input in HTML output
- **Authentication Flaws**: Weak password policies, session fixation
- **Authorization Issues**: Missing access controls, privilege escalation
- **CSRF Vulnerabilities**: Missing CSRF tokens or validation
- **File Upload Issues**: Unrestricted file types, path traversal
- **Insecure Cryptography**: Weak algorithms, hardcoded keys
- **Information Disclosure**: Verbose error messages, debug info exposure
- **Insecure Dependencies**: Known CVEs in third-party packages

### Code Quality Issues
- **Code Duplication**: Repeated logic that should be extracted
- **Long Functions**: Methods exceeding 50 lines that need breaking down
- **Deep Nesting**: Excessive if/else or loop nesting levels
- **Magic Numbers**: Hardcoded values that should be constants
- **Poor Naming**: Unclear variable, function, or class names
- **Missing Error Handling**: Functions without try-catch or error checks
- **Inconsistent Formatting**: Mixed indentation, spacing, or style
- **Commented Code**: Dead code left in comments
- **TODO Comments**: Unfinished work or technical debt markers
- **Complex Conditionals**: Boolean logic that could be simplified

### Performance Problems
- **N+1 Database Queries**: Queries inside loops
- **Missing Database Indexes**: Slow queries on unindexed columns
- **Inefficient Algorithms**: O(n²) where O(n) would work
- **Memory Leaks**: Objects not properly disposed or cleared
- **Synchronous Operations**: Blocking calls that could be async
- **Large Payloads**: Oversized API responses or data transfers
- **Missing Caching**: Repeated expensive operations
- **Resource Waste**: Unnecessary object creation or processing
- **Inefficient Loops**: Unnecessary work inside iterations
- **Database Connection Issues**: Not closing connections properly

### Architecture Concerns
- **Tight Coupling**: Components too dependent on each other
- **Missing Abstractions**: Repeated patterns without interfaces
- **Monolithic Structure**: Large files or classes doing too much
- **Circular Dependencies**: Components referencing each other
- **Configuration Issues**: Hardcoded environment-specific values
- **API Design Flaws**: Non-RESTful endpoints, inconsistent responses
- **Database Design Issues**: Denormalization, missing foreign keys
- **Scalability Bottlenecks**: Single points of failure or contention
- **Missing Logging**: Insufficient debugging and monitoring
- **Poor Error Propagation**: Errors not properly bubbled up

## AUDIT REPORT FORMAT

### Findings Structure
Present each finding as a numbered item with:

```
## FINDINGS

### Security Issues
1. **Hardcoded API Key in config.php** (CRITICAL)
   - File: `config/api.php` line 15
   - Issue: Database password hardcoded in source
   - Impact: Credential exposure in version control
   - Fix: Move to environment variable

2. **SQL Injection in user search** (HIGH)
   - File: `models/User.php` line 45
   - Issue: Unparameterized query construction
   - Impact: Database compromise possible
   - Fix: Use prepared statements with parameters

### Code Quality Issues
3. **Duplicate authentication logic** (MEDIUM)
   - Files: `controllers/AuthController.php`, `middleware/Auth.php`
   - Issue: Same validation code repeated in multiple places
   - Impact: Maintenance burden, inconsistency risk
   - Fix: Extract to shared AuthService class

4. **Missing error handling** (MEDIUM)
   - File: `services/PaymentService.php` line 23
   - Issue: API call without try-catch
   - Impact: Unhandled exceptions crash application
   - Fix: Add proper exception handling

### Performance Issues
5. **N+1 query problem** (HIGH)
   - File: `controllers/OrderController.php` line 67
   - Issue: Loading users individually in loop
   - Impact: Slow page load, database overload
   - Fix: Use eager loading or single query with joins

6. **Missing database index** (MEDIUM)
   - Table: `orders`
   - Issue: No index on frequently queried `user_id` column
   - Impact: Slow query performance
   - Fix: Add index on `user_id` column
```

### Priority Levels
- **CRITICAL**: Security vulnerabilities requiring immediate attention
- **HIGH**: Significant issues affecting functionality or performance
- **MEDIUM**: Important improvements for maintainability
- **LOW**: Minor optimizations or best practices

### Summary Format
End with a numbered summary list:

```
## PRIORITY RECOMMENDATIONS
1. Fix hardcoded API key in config.php
2. Implement SQL injection protection in user search
3. Extract duplicate authentication logic
4. Add error handling to PaymentService
5. Resolve N+1 query in OrderController
6. Add database index on orders.user_id
```

This format allows you to say "Fix 1, 3, 4" and developers know exactly what to address.


### File Definitions:
Refined Endpoint Groups JSON.json    = Organized JSON of All Endpoints
Swagger.json                         = Full Swagger JSON
collectdata.sh                       = Script to Collect all project data into a single file
collect_files.sh                     = Script to Collect all project files into a single file
backup.deploy.yml                    = A backup of my deploy.yml (my original got trashed somehow so now I keep a spare)
AllEndpoints.json                    = A list of all Endpoints and their expected payloads.


==== TEXT FILE: ./AllEndpoints.json ====
Size: 2184874 bytes
Last Modified: Tue, Jun 10, 2025 10:23:48 AM
----------------------------------------
{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false



==== TEXT FILE: ./app_structure_20250612_102859.json ====
Size: 7253525 bytes
Last Modified: Thu, Jun 12, 2025 10:29:47 AM
----------------------------------------
[
{
    "path": ".DS_Store",
    "name": ".DS_Store",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./.DS_Store 2a74c93000000000 255 3e72eff 4096 4096 62093311 33173055 33173055 18446744073709551615 -1
2025-06-10 07:50:32",
    "size_bytes":   File: "./.DS_Store"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 33173055   Available: 33173055
Inodes: Total: 18446744073709551615 Free: -1
6148,
    "mime_type": "application/octet-stream",
    "file_type": "Binary",
    "content": "[Binary file - content skipped]"
}
,
{
    "path": ".env",
    "name": ".env",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./.env 2a74c93000000000 255 3e72eff 4096 4096 62093311 33173053 33173053 18446744073709551615 -1
2025-06-11 17:02:18",
    "size_bytes":   File: "./.env"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 33173053   Available: 33173053
Inodes: Total: 18446744073709551615 Free: -1
648,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token

DEALER_CODE=NY06AGDWUQ
DEALER_ID=SZ13qRwU5GtFLj0i_CbEgQ2

MPSM_API_BASE_URL=https://api.abassetmanagement.com/api3/
# Optional override of BASE_URL if your CSS/JS lives elsewhere:
# BASE_URL=https://mpsm.resolutionsbydesign.us/

DEBUG_MODE=true
DEBUG_PANEL_ENABLED=true
DEBUG_LOG_TO_FILE=true
MAX_DEBUG_LOG_SIZE_MB=5

LOG_INFO=true
LOG_WARNING=true
LOG_ERROR=true
LOG_DEBUG=true
LOG_SECURITY=true

APP_VERSION=0.1.2

TIMEZONE=America/New_York"
}
,
{
    "path": ".github/workflows/ci.yml",
    "name": "ci.yml",
    "directory": ".github/workflows",
    "creation_date": "",
    "modification_date": "./.github/workflows/ci.yml 2a74c93000000000 255 3e72eff 4096 4096 62093311 33173008 33173008 18446744073709551615 -1
2025-06-12 10:25:01",
    "size_bytes":   File: "./.github/workflows/ci.yml"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 33173008   Available: 33173008
Inodes: Total: 18446744073709551615 Free: -1
2331,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "# .github/workflows/ci.yml
name: CI / Lint & Validate

# Run this workflow on pushes and PRs to main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job: PHP syntax validation
  php-lint:
    name: \"Lint PHP\"
    runs-on: ubuntu-latest
    steps:
      # 1. Check out repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up PHP environment
      - name: Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          coverage: none

      # 3. (Optional) Install composer dependencies if your code uses them
      # - name: Install Composer dependencies
      #   run: composer install --no-progress --no-suggest --prefer-dist

      # 4. Validate PHP syntax for every .php file
      - name: PHP Syntax Check (php -l)
        run: |
          # find all PHP files except vendor, run php -l on each
          find . -type f -name '*.php' \\
            -not -path './vendor/*' \\
            -print0 | xargs -0 -n1 php -l

  # Job: JavaScript linting
  js-lint:
    name: \"Lint JS\"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. Install Node.js for ESLint
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # 2. Install your JS dependencies (assuming package.json in repo root)
      - name: Install dependencies
        run: npm ci

      # 3. Run ESLint over your js/ folder
      - name: Run ESLint
        run: npx eslint js/

  # Job: JSON validation
  json-validate:
    name: \"Validate JSON\"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 1. Install jq (JSON CLI) for linting
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # 2. Lint each JSON schema file
      - name: Lint JSON files
        run: |
          for file in AllEndpoints.json \\
                      \"Refined Endpoint Groups JSON.json\" \\
                      Swagger.json; do
            echo \"Checking $file\"
            jq . \"$file\" >/dev/null || (echo \"✖ Invalid JSON in $file\" && exit 1)
          done"
}
,
{
    "path": ".github/workflows/deploy.yml",
    "name": "deploy.yml",
    "directory": ".github/workflows",
    "creation_date": "",
    "modification_date": "./.github/workflows/deploy.yml 2a74c93000000000 255 3e72eff 4096 4096 62093311 33173007 33173007 18446744073709551615 -1
2025-06-11 12:47:49",
    "size_bytes":   File: "./.github/workflows/deploy.yml"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 33173007   Available: 33173007
Inodes: Total: 18446744073709551615 Free: -1
1943,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "name: FTP Deploy - Final Lean

on:
  push:
    branches: [\"main\"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File in Root
        # This command creates 'version.js' directly in the root of the checked-out repository.
        run: |
          echo \"window.appVersion = \\\"0.0.0.${{ github.run_number }}\\\";\" > version.js

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          # IMPORTANT: Use a GitHub Secret for your password in a real-world scenario!
          # For this non-production example, it's hardcoded as per your instruction.
          password: Deploy123!
          protocol: ftp
          port: 21

          # Deploy everything from the root of the checked-out repository
          local-dir: ./
          # Deploy to the root directory of the FTP server
          server-dir: /

          # CAUTION: This will delete EVERYTHING on the server-dir before uploading!
          dangerous-clean-slate: true

          exclude: |
            .git/
            .github/ # Exclude GitHub Actions workflow files and their directories
            # Add any other files/directories you do NOT want to deploy from your repository root.
            # Example: node_modules/
            # Example: .env.development

          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo \"### DEPLOYMENT SUMMARY ###\"
          echo \"- Version: 0.0.0.${{ github.run_number }}\"
          echo \"- FTP Server: ftp.resolutionsbydesign.us\"
          echo \"- Server Directory: /\"
          echo \"- Local Directory: ./\""
}
,
{
    "path": "Ai_Instructions_README.md",
    "name": "Ai_Instructions_README.md",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./Ai_Instructions_README.md 2a74c93000000000 255 3e72eff 4096 4096 62093311 33173007 33173007 18446744073709551615 -1
2025-06-12 08:36:59",
    "size_bytes":   File: "./Ai_Instructions_README.md"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 33173007   Available: 33173007
Inodes: Total: 18446744073709551615 Free: -1
7170,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "# AI AUDIT INSTRUCTIONS

## HOW TO PERFORM THE AUDIT

### Step 1: Repository Structure Analysis
- Examine the overall project structure and organization
- Identify main application entry points and core modules
- Map out the data flow between components

### Step 2: Code Quality Review
- Identify code duplication and opportunities for refactoring
- Check for proper error handling and exception management
- Look for memory leaks and resource management issues
- Assess variable naming conventions and code readability
- Check for dead code and unused imports/dependencies
- Evaluate function and class complexity
- Review commenting and documentation quality

### Step 3: Architecture Review
- Evaluate component separation and modularity
- Check for proper separation of concerns
- Assess dependency injection and coupling
- Review API design and REST compliance
- Examine database schema design and normalization
- Check for proper configuration management
- Assess scalability considerations

### Step 4: Dependency Management
- Check for outdated or vulnerable dependencies
- Look for unused dependencies that can be removed
- Assess dependency security and licensing
- Check for circular dependencies
- Review package lock file consistency

### Step 7: Testing Coverage
- Identify areas lacking unit tests
- Check for integration test coverage
- Look for edge cases that aren't tested
- Assess test quality and maintainability
- Check for proper mocking and test isolation

## WHAT TO LOOK FOR

### Security Vulnerabilities
- **Hardcoded Credentials**: API keys, passwords, tokens in source code
- **SQL Injection**: Unparameterized queries, string concatenation in SQL
- **XSS Vulnerabilities**: Unescaped user input in HTML output
- **Authentication Flaws**: Weak password policies, session fixation
- **Authorization Issues**: Missing access controls, privilege escalation
- **CSRF Vulnerabilities**: Missing CSRF tokens or validation
- **File Upload Issues**: Unrestricted file types, path traversal
- **Insecure Cryptography**: Weak algorithms, hardcoded keys
- **Information Disclosure**: Verbose error messages, debug info exposure
- **Insecure Dependencies**: Known CVEs in third-party packages

### Code Quality Issues
- **Code Duplication**: Repeated logic that should be extracted
- **Long Functions**: Methods exceeding 50 lines that need breaking down
- **Deep Nesting**: Excessive if/else or loop nesting levels
- **Magic Numbers**: Hardcoded values that should be constants
- **Poor Naming**: Unclear variable, function, or class names
- **Missing Error Handling**: Functions without try-catch or error checks
- **Inconsistent Formatting**: Mixed indentation, spacing, or style
- **Commented Code**: Dead code left in comments
- **TODO Comments**: Unfinished work or technical debt markers
- **Complex Conditionals**: Boolean logic that could be simplified

### Performance Problems
- **N+1 Database Queries**: Queries inside loops
- **Missing Database Indexes**: Slow queries on unindexed columns
- **Inefficient Algorithms**: O(n²) where O(n) would work
- **Memory Leaks**: Objects not properly disposed or cleared
- **Synchronous Operations**: Blocking calls that could be async
- **Large Payloads**: Oversized API responses or data transfers
- **Missing Caching**: Repeated expensive operations
- **Resource Waste**: Unnecessary object creation or processing
- **Inefficient Loops**: Unnecessary work inside iterations
- **Database Connection Issues**: Not closing connections properly

### Architecture Concerns
- **Tight Coupling**: Components too dependent on each other
- **Missing Abstractions**: Repeated patterns without interfaces
- **Monolithic Structure**: Large files or classes doing too much
- **Circular Dependencies**: Components referencing each other
- **Configuration Issues**: Hardcoded environment-specific values
- **API Design Flaws**: Non-RESTful endpoints, inconsistent responses
- **Database Design Issues**: Denormalization, missing foreign keys
- **Scalability Bottlenecks**: Single points of failure or contention
- **Missing Logging**: Insufficient debugging and monitoring
- **Poor Error Propagation**: Errors not properly bubbled up

## AUDIT REPORT FORMAT

### Findings Structure
Present each finding as a numbered item with:

```
## FINDINGS

### Security Issues
1. **Hardcoded API Key in config.php** (CRITICAL)
   - File: `config/api.php` line 15
   - Issue: Database password hardcoded in source
   - Impact: Credential exposure in version control
   - Fix: Move to environment variable

2. **SQL Injection in user search** (HIGH)
   - File: `models/User.php` line 45
   - Issue: Unparameterized query construction
   - Impact: Database compromise possible
   - Fix: Use prepared statements with parameters

### Code Quality Issues
3. **Duplicate authentication logic** (MEDIUM)
   - Files: `controllers/AuthController.php`, `middleware/Auth.php`
   - Issue: Same validation code repeated in multiple places
   - Impact: Maintenance burden, inconsistency risk
   - Fix: Extract to shared AuthService class

4. **Missing error handling** (MEDIUM)
   - File: `services/PaymentService.php` line 23
   - Issue: API call without try-catch
   - Impact: Unhandled exceptions crash application
   - Fix: Add proper exception handling

### Performance Issues
5. **N+1 query problem** (HIGH)
   - File: `controllers/OrderController.php` line 67
   - Issue: Loading users individually in loop
   - Impact: Slow page load, database overload
   - Fix: Use eager loading or single query with joins

6. **Missing database index** (MEDIUM)
   - Table: `orders`
   - Issue: No index on frequently queried `user_id` column
   - Impact: Slow query performance
   - Fix: Add index on `user_id` column
```

### Priority Levels
- **CRITICAL**: Security vulnerabilities requiring immediate attention
- **HIGH**: Significant issues affecting functionality or performance
- **MEDIUM**: Important improvements for maintainability
- **LOW**: Minor optimizations or best practices

### Summary Format
End with a numbered summary list:

```
## PRIORITY RECOMMENDATIONS
1. Fix hardcoded API key in config.php
2. Implement SQL injection protection in user search
3. Extract duplicate authentication logic
4. Add error handling to PaymentService
5. Resolve N+1 query in OrderController
6. Add database index on orders.user_id
```

This format allows you to say \"Fix 1, 3, 4\" and developers know exactly what to address.


### File Definitions:
Refined Endpoint Groups JSON.json    = Organized JSON of All Endpoints
Swagger.json                         = Full Swagger JSON
collectdata.sh                       = Script to Collect all project data into a single file
collect_files.sh                     = Script to Collect all project files into a single file
backup.deploy.yml                    = A backup of my deploy.yml (my original got trashed somehow so now I keep a spare)
AllEndpoints.json                    = A list of all Endpoints and their expected payloads."
}
,
{
    "path": "AllEndpoints.json",
    "name": "AllEndpoints.json",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./AllEndpoints.json 2a74c93000000000 255 3e72eff 4096 4096 62093311 33173004 33173004 18446744073709551615 -1
2025-06-10 10:23:48",
    "size_bytes":   File: "./AllEndpoints.json"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 33173004   Available: 33173004
Inodes: Total: 18446744073709551615 Free: -1
2184874,
    "mime_type": "application/json",
    "file_type": "Text",
    "content": "{
  \"swagger\": \"2.0\",
  \"info\": {
    \"version\": \"v1\",
    \"title\": \"Mps Monitor Api\"
  },
  \"host\": \"localhost:34287\",
  \"schemes\": [
    \"https\"
  ],
  \"paths\": {
    \"/Account/GetProfile\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets profile of current authenticated user.\",
        \"operationId\": \"Account/GetProfile\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/RefreshAuthCookie\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/RefreshAuthCookie\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/Object\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Logout\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Logout\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/Object\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/UpdateProfile\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Update profile of current authenticated user.\",
        \"operationId\": \"Account/UpdateProfile\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateProfileRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faData\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faData\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": true,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faDataForProfile\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faDataForProfile\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faDataForAccount\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faDataForAccount\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          },
          {
            \"name\": \"userName\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"password\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"psk2fa\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Enable2faForAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Enable2faForAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/Enable2faForAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Enable2faForProfile\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Enable2faForProfile\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/Enable2faForProfileRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/SendOtpEmailForAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/SendOtpEmailForAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/SendOtpEmailForAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/SetPreferredDealer\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets profile of current authenticated account.\",
        \"operationId\": \"Account/SetPreferredDealer\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/SetPreferredDealerRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets the account.\",
        \"description\": \"\",
        \"operationId\": \"Account/GetAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetAccounts\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets the accounts.\",
        \"operationId\": \"Account/GetAccounts\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetAccountsRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Create\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Create an account\",
        \"operationId\": \"Account/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Update\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Update an account\",
        \"operationId\": \"Account/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ChangePassword\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Changes the password of the connected account\",
        \"operationId\": \"Account/ChangePassword\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ChangePasswordRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ResetPassword\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Resets the password.\",
        \"operationId\": \"Account/ResetPassword\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ResetPasswordRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ResetPasswordVerifyToken\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Verify the Resets password auth token.\",
        \"operationId\": \"Account/ResetPasswordVerifyToken\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ResetPasswordVerifyTokenRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ChangeLanguage\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Change language\",
        \"operationId\": \"Account/ChangeLanguage\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ChangeLanguageRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Delete\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes an account\",
        \"operationId\": \"Account/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Delete2fa\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes the two factor authentication for a user\",
        \"operationId\": \"Account/Delete2fa\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/DeleteProfile2fa\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes the two factor authentication for a user\",
        \"operationId\": \"Account/DeleteProfile2fa\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/DisableAlertLimits\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/DisableAlertLimits\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/DisableAlertLimitsRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/GetAllLimits\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/GetAllLimits\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"customerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"deviceId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"productId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"alertLimitSource\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"Default\",
              \"Dealer\",
              \"DealerProduct\",
              \"Customer\",
              \"CustomerProduct\",
              \"InstalledProduct\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2SourceDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DealerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetProductList\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetProductList\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the dealer code.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[ProductBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetProduct\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DealerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/DeleteProduct\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/DeleteProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/CreateProduct\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/CreateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/UpdateProduct\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/UpdateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2CustomerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/DeleteDefaultForConsumable\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/DeleteDefaultForConsumable\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"customerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"supplyType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"ManteinanceKit\",
              \"PhotoConductor\",
              \"Toner\"
            ]
          },
          {
            \"name\": \"colorType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"NotAvailable\",
              \"Black\",
              \"Cyan\",
              \"Magenta\",
              \"Yellow\",
              \"Black1\",
              \"Black2\",
              \"Black3\"
            ]
          },
          {
            \"name\": \"maintenanceKitTypeId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"maintenanceKitColorId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetProductList\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetProductList\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the dealer code.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[ProductBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetProduct\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"customerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the CustomerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/DeleteProduct\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/DeleteProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"customerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the CustomerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/CreateProduct\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/CreateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/UpdateProduct\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/UpdateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DeviceDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/DeleteDefaultForConsumable\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/DeleteDefaultForConsumable\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"deviceId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"supplyType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"ManteinanceKit\",
              \"PhotoConductor\",
              \"Toner\"
            ]
          },
          {
            \"name\": \"colorType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"NotAvailable\",
              \"Black\",
              \"Cyan\",
              \"Magenta\",
              \"Yellow\",
              \"Black1\",
              \"Black2\",
              \"Black3\"
            ]
          },
          {
            \"name\": \"maintenanceKitTypeId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"maintenanceKitColorId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Dealer/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get dealers Alert Limit settings\",
        \"operationId\": \"AlertLimit/Dealer/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Dealer/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified dealer\",
        \"operationId\": \"AlertLimit/Dealer/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get customer Alert Limit settings\",
        \"operationId\": \"AlertLimit/Customer/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer\",
        \"operationId\": \"AlertLimit/Customer/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/List\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get dealers Alert Limit settings\",
        \"operationId\": \"AlertLimit/Customer/Product/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimitCustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer and Product\",
        \"operationId\": \"AlertLimit/Customer/Product/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get device Alert Limit settings\",
        \"operationId\": \"AlertLimit/Device/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AlertLimitBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer and Product\",
        \"operationId\": \"AlertLimit/Device/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Delete\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Delete Alert limits\",
        \"operationId\": \"AlertLimit/Customer/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/Delete\": {
      \"post\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"operationId\": \"AlertLimit/Customer/Product/Delete\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/DeleteRequest[KeyValue]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Delete\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"operationId\": \"AlertLimit/Device/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Analytics/GetReportResult\": {
      \"get\": {
        \"tags\": [
          \"Analytics\"
        ],
        \"summary\": \"Get result from a saved report.\",
        \"operationId\": \"Analytics/GetReportResult\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"idReport\",
            \"in\": \"query\",
            \"description\": \"The ID of a saved custom report.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[TabularResultDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Analytics/GetReportFileResult\": {
      \"get\": {
        \"tags\": [
          \"Analytics\"
        ],
        \"summary\": \"Get result as file (Excel, CSV) from a saved report.\",
        \"operationId\": \"Analytics/GetReportFileResult\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\"
        ],
        \"parameters\": [
          {
            \"name\": \"idReport\",
            \"in\": \"query\",
            \"description\": \"The ID of a saved custom report.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"reportFormat\",
            \"in\": \"query\",
            \"description\": \"The export format of the result (Excel, CSV)\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseHttpResponseMessage\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/List\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Get Api Clients for Dealer.\",
        \"operationId\": \"ApiClient/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"pageNumber\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the page number.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"pageRows\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the page rows.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"sortColumn\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the sort column.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"sortOrder\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the sort order.\",
            \"required\": true,
            \"type\": \"string\",
            \"enum\": [
              \"Asc\",
              \"Desc\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Get\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Update\": {
      \"put\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[ApiClientUpdateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Create\": {
      \"post\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[ApiClientCreateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Delete\": {
      \"delete\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Delete Api Client\",
        \"operationId\": \"ApiClient/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/List\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Get Api user list\",
        \"operationId\": \"ApiClient/Account/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Get\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Update\": {
      \"put\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Delete\": {
      \"delete\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Create\": {
      \"post\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[ApiClientAccountCreateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/GetChallengeUrlRedirect\": {
      \"get\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Returns the login url based on the domain specified.\",
        \"operationId\": \"azuread/GetChallengeUrlRedirect\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"returnUrl\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"name\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the name.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"type\": \"string\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/GetDealerAzureSettings\": {
      \"get\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Get Azure Ad configuration\",
        \"operationId\": \"azuread/GetDealerAzureSettings\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AzureADDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/GetCustomerAzureSettings\": {
      \"get\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Get Azure Ad customer configuration\",
        \"operationId\": \"azuread/GetCustomerAzureSettings\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AzureADDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/CreateAzureDomain\": {
      \"post\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Create the azure domain configuration.\",
        \"operationId\": \"azuread/CreateAzureDomain\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[AzureADDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AzureADDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/UpdateAzureDomain\": {
      \"put\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Update the azure domain configuration.\",
        \"operationId\": \"azuread/UpdateAzureDomain\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[AzureADDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AzureADDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetCustomersContracts\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the customers contracts.\",
        \"operationId\": \"Billing/GetCustomersContracts\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetCustomersContractsRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[CustomerContractDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetDealerInvoicesList\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the dealer to dealer invoices.\",
        \"operationId\": \"Billing/GetDealerInvoicesList\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetDealerInvoicesRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[DealerInvoicesListDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetCustomersInvoicesList\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the customers invoices.\",
        \"operationId\": \"Billing/GetCustomersInvoicesList\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetCustomersInvoicesRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[CustomerInvoiceListDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetCustomerInvoicesList\": {
      \"post\": {
        \"tags\": [
          \


==== TEXT FILE: ./backup.deploy.yml ====
Size: 3250 bytes
Last Modified: Tue, Jun 10, 2025 10:36:20 AM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"] # Trigger on pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Run the job on a fresh Ubuntu environment
    timeout-minutes: 15 # Overall job timeout (can be adjusted if deployments are very fast)

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          # IMPORTANT: Replace these hardcoded values with GitHub Secrets for production!
          # Go to your repository settings -> Secrets and variables -> Actions
          # Add:
          #   FTP_SERVER: ftp.resolutionsbydesign.us
          #   FTP_USERNAME: mpsm@mpsm.resolutionsbydesign.us
          #   FTP_PASSWORD: YourActualStrongPassword!
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          password: Deploy123! 
          
          local-dir: ./ # Deploy from the root of your GitHub repository
          # The 'server-directory' should be '/' if your cPanel FTP user's
          # "Home Directory" is already set to the target web root
          # (e.g., /home/resolut7/public_html/mpsm.resolutionsbydesign.us/).
          # This tells the action to deploy INTO the root of your FTP login.
          server-directory: / 
          
          protocol: ftp # Use 'ftps' if your server supports and requires explicit FTPS
          exclude: .git/ # Exclude the .git directory from being uploaded
          log-level: verbose # Keep verbose logging for detailed transfer info
          delete: true # Delete files on the server that are not in the local repository
          timeout: 120 # Timeout for the deploy operation in seconds (2 minutes)

      - name: 📜 Deployment Completed Report
        # This step provides a summary of the deployment outcome.
        run: |
          echo "### DEPLOYMENT SUMMARY ###" > report.md
          echo "- Deployment Method: SamKirkland/FTP-Deploy-Action" >> report.md
          echo "- Local repository root (./) deployed to: FTP account's home directory" >> report.md
          echo "  (Expected server path: /home/resolut7/public_html/mpsm.resolutionsbydesign.us/)" >> report.md
          echo "- Website URL: https://mpsm.resolutionsbydesign.us" >> report.md
          echo "" >> report.md
          echo "---" >> report.md
          echo "**Next Steps:**" >> report.md
          echo "1. **Verify Live Site:** Check https://mpsm.resolutionsbydesign.us in your browser." >> report.md
          echo "2. **IMPORTANT: Secure Credentials!** Move your FTP server, username, and password into GitHub Repository Secrets." >> report.md
          echo "   (Go to Settings -> Secrets and variables -> Actions in your GitHub repo)" >> report.md
          echo "3. **Clear Cache:** If changes aren't visible, try clearing your browser cache or any server-side caching." >> report.md
          echo "4. **GreenGeeks Support:** If issues persist, contact GreenGeeks support with a link to this successful workflow run." >> report.md
          
          cat report.md



==== PHP FILE: ./cards/printer_status_card.php ====
Size: 1075 bytes
Last Modified: Wed, Jun 11, 2025  5:04:03 PM
----------------------------------------
<?php
/**
 * Printer Status Card
 */
$cid   = $customer_id    ?? 'N/A';
$title = $card_title     ?? 'Printer Status';
$sum   = $status_summary ?? ['online'=>0,'offline'=>0,'warning'=>0,'error'=>0,'unknown'=>0];
debug_log("Rendering Printer Status Card for {$cid}", 'DEBUG');
?>
<div class="card printer-status-card">
  <h3><?php echo sanitize_html($title); ?></h3>
  <?php if($cid!=='N/A'): ?><p class="card-subtitle">Customer: <?php echo sanitize_html($cid); ?></p><?php endif; ?>
  <div class="status-summary-grid">
    <?php foreach($sum as $k=>$v): ?>
      <div class="status-item <?php echo sanitize_html($k); ?>">
        <span class="count"><?php echo sanitize_html((string)$v); ?></span>
        <span class="label"><?php echo ucfirst(sanitize_html($k)); ?></span>
      </div>
    <?php endforeach; ?>
  </div>
  <p class="total-printers">Total: <strong><?php echo sanitize_html((string)array_sum($sum)); ?></strong></p>
  <div class="card-actions">
    <a href="#" class="small-button view-details-button">View Details</a>
  </div>
</div>



==== PHP FILE: ./cards/toner_levels_card.php ====
Size: 1090 bytes
Last Modified: Wed, Jun 11, 2025  5:04:13 PM
----------------------------------------
<?php
/**
 * Toner Levels Card
 */
$cid   = $customer_id   ?? 'N/A';
$title = $card_title    ?? 'Toner Levels';
$data  = $toner_data    ?? ['black'=>0,'cyan'=>0,'magenta'=>0,'yellow'=>0];
$th    = isset($low_threshold) ? (int)$low_threshold : 20;
debug_log("Rendering Toner Levels Card for {$cid}", 'DEBUG');
?>
<div class="card toner-levels-card">
  <h3><?php echo sanitize_html($title); ?></h3>
  <?php if($cid!=='N/A'): ?><p class="card-subtitle">Customer: <?php echo sanitize_html($cid); ?></p><?php endif; ?>
  <ul class="toner-list">
    <?php foreach($data as $c=>$lvl):
      $warn = $lvl < $th ? 'low' : '';
    ?>
      <li class="toner-item <?php echo sanitize_html($warn); ?>">
        <span class="toner-color"><?php echo ucfirst(sanitize_html($c)); ?>:</span>
        <span class="toner-level"><?php echo sanitize_html((string)$lvl); ?>%</span>
      </li>
    <?php endforeach; ?>
  </ul>
  <?php if(min($data) < $th): ?>
    <p class="toner-warning">⚠️ Some toners below <?php echo sanitize_html((string)$th); ?>%</p>
  <?php endif; ?>
</div>



==== TEXT FILE: ./collectdata.sh ====
Size: 5860 bytes
Last Modified: Wed, Jun 11, 2025  8:22:20 AM
----------------------------------------
#!/bin/bash

# Combined Web Application Code Collector
# Outputs both JSON structure and readable text content

# Configuration
JSON_OUTPUT="app_structure_$(date +'%Y%m%d_%H%M%S').json"
TEXT_OUTPUT="app_contents_$(date +'%Y%m%d_%H%M%S').txt"

# Files to include full content for
FULL_EXTENSIONS=("php" "html" "htm" "css" "js" "json" "xml" "md" "txt" "env" "gitignore" "htaccess" "sh")
MAX_PREVIEW_SIZE=5000  # 5KB previews for other text files

# Directories to exclude
EXCLUDE_DIRS=("vendor" "node_modules" ".git" ".idea" "build" "dist" "cache" "logs")

# Binary extensions to skip content for
EXCLUDE_EXT=("png" "jpg" "jpeg" "gif" "svg" "ico" "woff" "woff2" "ttf" "eot" "pdf" "zip" "tar.gz" "mp3" "mp4" "avi" "mov")

# Helper functions
escape_json() {
    sed 's/\\/\\\\/g; s/"/\\"/g; s/\t/\\t/g; s/\r/\\r/g; s/\n/\\n/g'
}

is_text_file() {
    file -b --mime-encoding "$1" | grep -qvi 'binary'
}

should_exclude() {
    local file="$1"
    
    # Check excluded directories
    for dir in "${EXCLUDE_DIRS[@]}"; do
        if [[ "$file" == *"/$dir/"* ]]; then
            return 0
        fi
    done
    
    # Check excluded extensions
    local extension="${file##*.}"
    for ext in "${EXCLUDE_EXT[@]}"; do
        if [[ "${extension,,}" == "${ext,,}" ]]; then
            return 0
        fi
    done
    
    return 1
}

# Generate JSON structure
echo "Generating JSON structure..."
echo "[" > "$JSON_OUTPUT"
first_entry=true

find . -type f -print0 | while IFS= read -r -d '' file; do
    if should_exclude "$file"; then
        continue
    fi

    FILE_SIZE=$(stat -f '%z' "$file" 2>/dev/null || stat -c '%s' "$file")

    CREATION_DATE=$(stat -f '%B' "$file" 2>/dev/null || stat -c '%W' "$file" 2>/dev/null)
    if [[ "$CREATION_DATE" -le 0 || -z "$CREATION_DATE" ]]; then
        CREATION_DATE="N/A"
    else
        CREATION_DATE=$(date -r "$CREATION_DATE" '+%Y-%m-%dT%H:%M:%S' 2>/dev/null || date -d @"$CREATION_DATE" '+%Y-%m-%dT%H:%M:%S')
    fi

    MOD_DATE=$(stat -f '%Sm' -t '%Y-%m-%dT%H:%M:%S' "$file" 2>/dev/null || stat -c '%y' "$file" | cut -d'.' -f1)

    MIME_TYPE=$(file --mime-type -b "$file")
    FILE_TYPE=$(echo "$MIME_TYPE" | grep -qi 'text\|json\|xml\|script' && echo "Text" || echo "Binary")

    EXT="${file##*.}"
    INCLUDE_FULL=false
    for ext in "${FULL_EXTENSIONS[@]}"; do
        if [[ "${EXT,,}" == "$ext" ]]; then
            INCLUDE_FULL=true
            break
        fi
    done

    CONTENT=""
    if [[ "$FILE_TYPE" == "Text" ]]; then
        if [[ "$INCLUDE_FULL" == true ]]; then
            CONTENT=$(cat "$file" | escape_json)
        else
            CONTENT=$(head -c $MAX_PREVIEW_SIZE "$file" | escape_json)
        fi
    else
        CONTENT="[Binary file - content skipped]"
    fi

    if [[ "$first_entry" == false ]]; then
        echo "," >> "$JSON_OUTPUT"
    else
        first_entry=false
    fi

    cat <<EOF >> "$JSON_OUTPUT"
{
    "path": "$(echo "${file#./}" | escape_json)",
    "name": "$(basename "$file" | escape_json)",
    "directory": "$(dirname "${file#./}" | escape_json)",
    "creation_date": "$CREATION_DATE",
    "modification_date": "$MOD_DATE",
    "size_bytes": $FILE_SIZE,
    "mime_type": "$MIME_TYPE",
    "file_type": "$FILE_TYPE",
    "content": "$CONTENT"
}
EOF
done

echo "]" >> "$JSON_OUTPUT"

# Generate readable text output
echo "Generating readable text output..."
{
    echo "WEB APPLICATION CONTENT COLLECTION"
    echo "Generated: $(date)"
    echo "----------------------------------------"
    echo ""
    
    find . -type f | while read -r file; do
        if should_exclude "$file"; then
            continue
        fi
        
        EXT="${file##*.}"
        
        # Special handling for important files
        if [[ "${EXT,,}" == "php" ]]; then
            echo "==== PHP FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        if [[ "${EXT,,}" == "js" || "${EXT,,}" == "css" || "${EXT,,}" == "html" || "${EXT,,}" == "htm" ]]; then
            echo "==== ${EXT^^} FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        if [[ "${EXT,,}" == "env" || "${EXT,,}" == "gitignore" || "${EXT,,}" == "htaccess" ]]; then
            echo "==== CONFIG FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        # For other files, check if they're text
        if is_text_file "$file"; then
            echo "==== TEXT FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            head -c 100000 "$file"  # Show first 100KB
            echo -e "\n\n"
        else
            echo "==== BINARY FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "[Binary content not displayed]"
            echo -e "\n"
        fi
    done
} > "$TEXT_OUTPUT"

echo "Collection complete!"
echo "1. JSON structure saved to: $JSON_OUTPUT"
echo "2. Readable text content saved to: $TEXT_OUTPUT"


==== TEXT FILE: ./collect_files.sh ====
Size: 2180 bytes
Last Modified: Wed, Jun 11, 2025 10:01:20 AM
----------------------------------------
#!/bin/bash

# Smart PHP Project File Collector
OUTPUT_FILE="php_project_contents_$(date +'%Y%m%d_%H%M%S').txt"

# Configure exclusions (add more as needed)
EXCLUDE_DIRS=("vendor" "node_modules" ".git" ".idea" "build" "dist")
EXCLUDE_EXT=("png" "jpg" "jpeg" "gif" "svg" "ico" "woff" "woff2" "ttf" "eot" "pdf" "zip" "tar.gz")

# Better text file detection
is_text_file() {
    file -b --mime-encoding "$1" | grep -qvi 'binary'
}

# Start output
{
    echo "PHP PROJECT CONTENT COLLECTION"
    echo "Generated: $(date)"
    echo "----------------------------------------"
    echo ""
    
    find . -type f | while read -r file; do
        # Skip excluded directories
        for dir in "${EXCLUDE_DIRS[@]}"; do
            if [[ "$file" == *"/$dir/"* ]]; then
                continue 2
            fi
        done
        
        # Skip excluded extensions
        extension="${file##*.}"
        for ext in "${EXCLUDE_EXT[@]}"; do
            if [[ "${extension,,}" == "${ext,,}" ]]; then
                continue 2
            fi
        done
        
        # Special handling for PHP files - always include
        if [[ "${file##*.}" == "php" ]]; then
            echo "==== PHP FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        # For other files, check if they're text
        if is_text_file "$file"; then
            echo "==== TEXT FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            head -c 100000 "$file"  # Show first 100KB
            echo -e "\n\n"
        else
            echo "==== BINARY FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "[Binary content not displayed]"
            echo -e "\n"
        fi
    done
} > "$OUTPUT_FILE"

echo "Collection complete! Output saved to $OUTPUT_FILE" 


==== PHP FILE: ./config.php ====
Size: 3110 bytes
Last Modified: Thu, Jun 12, 2025  9:48:34 AM
----------------------------------------
<?php
declare(strict_types=1);
/**
 * config.php – single‐point bootstrap for env, session, and constants.
 */

// ─── 0) Load .env (if available) so DEBUG_MODE can be set early ───────────────
$autoload = __DIR__ . '/vendor/autoload.php';
if (file_exists($autoload)) {
    require_once $autoload;
    Dotenv\Dotenv::createImmutable(__DIR__)->load();
}

// ─── 1) DEBUG_MODE & Error Reporting ─────────────────────────────────────────
define('DEBUG_MODE', filter_var($_ENV['DEBUG_MODE'] ?? 'false', FILTER_VALIDATE_BOOLEAN));
ini_set('display_errors', DEBUG_MODE ? '1' : '0');
ini_set('display_startup_errors', DEBUG_MODE ? '1' : '0');
error_reporting(E_ALL);

// ─── 2) Secure Session Startup ────────────────────────────────────────────────
session_set_cookie_params([
    'httponly' => true,
    'secure'   => isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on',
    'samesite' => 'Strict',
]);
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

// ─── 3) Base URLs & App Name ───────────────────────────────────────────────────
define('APP_NAME',        $_ENV['APP_NAME']        ?? 'MPSM Dashboard');
define('SITE_BASE_URL',   rtrim($_ENV['SITE_BASE_URL'] ?? '/', '/') . '/');
define('API_BASE_URL',    rtrim($_ENV['API_BASE_URL']  ?? 'https://api.abassetmanagement.com/api3/', '/') . '/');
// Back‐compat for any legacy BASE_URL usage in views/partials:
define('BASE_URL',        SITE_BASE_URL);

// ─── 4) Credentials & Dealer Info ─────────────────────────────────────────────
define('CLIENT_ID',       $_ENV['CLIENT_ID']       ?? '');
define('CLIENT_SECRET',   $_ENV['CLIENT_SECRET']   ?? '');
define('USERNAME',        $_ENV['USERNAME']        ?? '');
define('PASSWORD',        $_ENV['PASSWORD']        ?? '');
define('SCOPE',           $_ENV['SCOPE']           ?? '');
define('TOKEN_URL',       $_ENV['TOKEN_URL']       ?? '');
define('DEALER_CODE',     $_ENV['DEALER_CODE']     ?? '');
define('DEALER_ID',       $_ENV['DEALER_ID']       ?? '');
define('DEVICE_PAGE_SIZE',(int) ($_ENV['DEVICE_PAGE_SIZE'] ?? 50));

// ─── 5) Validate Critical Config ──────────────────────────────────────────────
if (!CLIENT_ID || !CLIENT_SECRET || !DEALER_CODE) {
    if (DEBUG_MODE) {
        throw new RuntimeException('Missing essential .env variables (CLIENT_ID, CLIENT_SECRET, or DEALER_CODE).');
    }
    // In production, just log and continue; API calls will fail gracefully.
    error_log('⚠️ config.php: Missing CLIENT_ID, CLIENT_SECRET, or DEALER_CODE in .env');
}

// End of config.php



==== CSS FILE: ./css/card-editor.css ====
Size: 1582 bytes
Last Modified: Thu, Jun 12, 2025  9:15:16 AM
----------------------------------------
/* card-editor.css - full styles for the CardEditor component */

.cards-container {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin: 1rem 0;
}

.card {
  width: 200px;
  perspective: 1000px;
}

.card-inner {
  position: relative;
  width: 100%;
  transform-style: preserve-3d;
  transition: transform 0.6s;
}

.card.flipped .card-inner {
  transform: rotateY(180deg);
}

.card-front,
.card-back {
  position: absolute;
  backface-visibility: hidden;
  width: 100%;
  padding: 1rem;
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
  border-radius: 4px;
  background: #fff;
}

.card-front {
  cursor: pointer;
}

.card-back {
  transform: rotateY(180deg);
}

.card.enlarged {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 80%;
  max-width: 600px;
  transform: translate(-50%, -50%) scale(1) !important;
  z-index: 1000;
}

.payload-params,
fieldset {
  margin: 0.5rem 0;
}

.payload-params legend {
  font-weight: bold;
}

.form-group,
label {
  display: block;
  margin-bottom: 0.5rem;
}

input {
  width: 100%;
  padding: 0.25rem;
  margin-bottom: 0.5rem;
  box-sizing: border-box;
}

button {
  margin-right: 0.5rem;
  padding: 0.5rem 1rem;
  background: #007bff;
  color: #fff;
  border: none;
  border-radius: 3px;
  cursor: pointer;
}

button:hover {
  background: #0056b3;
}

.api-result {
  margin-top: 1rem;
  max-height: 200px;
  overflow: auto;
  background: #f8f9fa;
  padding: 0.5rem;
  border-radius: 4px;
}

.error {
  color: #c00;
  font-weight: bold;
}



==== CSS FILE: ./css/debug.css ====
Size: 579 bytes
Last Modified: Thu, Jun 12, 2025  9:56:44 AM
----------------------------------------
/* debug.css – styles for the debug toggle & panel */

.debug-toggle {
  margin-left: 0.5rem;
  background: transparent;
  border: none;
  font-size: 1.2rem;
  cursor: pointer;
  color: #0f0;
}

#debug-panel {
  position: fixed;
  bottom: 0; left: 0; right: 0;
  max-height: 30%;
  overflow-y: auto;
  background: rgba(0, 0, 0, 0.85);
  color: #0f0;
  font-family: monospace;
  padding: 0.5em;
  z-index: 9999;
  border-top: 2px solid #0f0;
}

#debug-panel.hidden {
  display: none;
}

#debug-panel h4 {
  margin: 0 0 0.5em;
  font-size: 1em;
}



==== CSS FILE: ./css/styles.css ====
Size: 10881 bytes
Last Modified: Wed, Jun 11, 2025  4:33:51 PM
----------------------------------------
/*
 * MPSM Dashboard - Main Stylesheet
 *
 * Defines variables, base styles, layout, components, theming,
 * and includes the debug-panel overlay with modern styling.
 */

/* --- Theming Variables --- */
:root {
    --bg-primary-dark: #1a1a1a;
    --bg-secondary-dark: #2a2a2a;
    --text-primary-dark: #e0e0e0;
    --text-secondary-dark: #a0a0a0;
    --border-color-dark: rgba(255,255,255,0.1);
    --glass-bg-dark: rgba(42,42,42,0.6);
    --glass-shadow-dark: rgba(0,0,0,0.3);

    --bg-primary-light: #f0f0f0;
    --bg-secondary-light: #ffffff;
    --text-primary-light: #333333;
    --text-secondary-light: #666666;
    --border-color-light: rgba(0,0,0,0.1);
    --glass-bg-light: rgba(255,255,255,0.6);
    --glass-shadow-light: rgba(0,0,0,0.1);

    --highlight-cyan: #00bcd4;
    --highlight-magenta: #e91e63;
    --highlight-yellow: #ffeb3b;

    --glass-blur: 10px;
    --glass-border-width: 1px;
    --glass-border-radius: 12px;

    --theme-transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, backdrop-filter 0.3s ease;
}

/* Theme switching */
body.theme-dark {
    --bg-primary: var(--bg-primary-dark);
    --bg-secondary: var(--bg-secondary-dark);
    --text-primary: var(--text-primary-dark);
    --text-secondary: var(--text-secondary-dark);
    --border-color: var(--border-color-dark);
    --glass-bg: var(--glass-bg-dark);
    --glass-shadow: var(--glass-shadow-dark);
}
body.theme-light {
    --bg-primary: var(--bg-primary-light);
    --bg-secondary: var(--bg-secondary-light);
    --text-primary: var(--text-primary-light);
    --text-secondary: var(--text-secondary-light);
    --border-color: var(--border-color-light);
    --glass-bg: var(--glass-bg-light);
    --glass-shadow: var(--glass-shadow-light);
}

/* Reset & base */
*,*::before,*::after{box-sizing:border-box;margin:0;padding:0;}
body{font-family:'Segoe UI',Roboto,'Helvetica Neue',Arial,sans-serif;line-height:1.6;color:var(--text-primary);background:var(--bg-primary);min-height:100vh;display:flex;flex-direction:column;transition:var(--theme-transition);}
a{color:var(--highlight-cyan);text-decoration:none;transition:color .2s;}
a:hover{color:var(--highlight-magenta);}
button,input[type="submit"],.button{background:var(--highlight-cyan);color:var(--bg-secondary);border:none;padding:10px 20px;border-radius:8px;cursor:pointer;font-size:1rem;transition:background .2s,transform .1s;}
button:hover,input[type="submit"]:hover,.button:hover{background:var(--highlight-magenta);transform:translateY(-2px);}
input[type="text"],input[type="search"],select,textarea{padding:10px;border:1px solid var(--border-color);border-radius:8px;background:var(--bg-secondary);color:var(--text-primary);font-size:1rem;transition:border .2s,background .2s;}
input:focus,select:focus,textarea:focus{outline:none;border-color:var(--highlight-cyan);box-shadow:0 0 0 2px rgba(0,188,212,0.2);}

/* Glassmorphic */
.glassmorphic{background:var(--glass-bg);backdrop-filter:blur(var(--glass-blur));border:var(--glass-border-width) solid var(--border-color);border-radius:var(--glass-border-radius);box-shadow:0 4px 30px var(--glass-shadow);transition:var(--theme-transition);}

/* Header */
.dashboard-header{position:sticky;top:0;background:var(--glass-bg);backdrop-filter:blur(var(--glass-blur));border-bottom:var(--glass-border-width) solid var(--border-color);padding:20px 40px;display:flex;flex-direction:column;gap:15px;z-index:1000;}
.header-top{display:flex;justify-content:space-between;align-items:center;}
.app-branding h1{font-size:2.2rem;color:var(--text-primary);position:relative;padding-bottom:5px;}
.app-branding h1::after{content:'';position:absolute;bottom:0;left:0;width:100%;height:3px;background:linear-gradient(to right,var(--highlight-cyan),var(--highlight-magenta));border-radius:2px;}
.status-indicators{display:flex;gap:20px;align-items:center;}
.status-item{display:flex;align-items:center;gap:8px;font-size:.9rem;color:var(--text-secondary);}
.status-dot{width:12px;height:12px;border-radius:50%;border:1px solid var(--border-color);box-shadow:0 0 5px rgba(0,0,0,0.2);}
.status-dot.status-ok{background:limegreen;box-shadow:0 0 8px limegreen;}
.status-dot.status-error{background:crimson;box-shadow:0 0 8px crimson;}
.status-dot.status-unknown{background:orange;box-shadow:0 0 8px orange;}
.theme-toggle{background:none;border:1px solid var(--border-color);padding:8px;border-radius:50%;font-size:1.2rem;cursor:pointer;color:var(--text-primary);display:flex;align-items:center;justify-content:center;transition:var(--theme-transition);}
.theme-toggle:hover{background:rgba(0,188,212,0.1);border-color:var(--highlight-cyan);}
.theme-toggle .icon-light{display:none;}
.theme-toggle .icon-dark{display:block;}
body.theme-light .icon-light{display:block;}
body.theme-light .icon-dark{display:none;}

/* Navigation & customer */
.header-bottom{display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;gap:15px;}
.main-navigation ul{list-style:none;display:flex;gap:25px;}
.main-navigation a{color:var(--text-secondary);font-weight:bold;font-size:1.1rem;position:relative;transition:color .2s;}
.main-navigation a:hover,a.active{color:var(--highlight-yellow);}
.main-navigation a::after{content:'';position:absolute;left:50%;transform:translateX(-50%);bottom:-5px;width:0;height:3px;background:var(--highlight-yellow);border-radius:2px;transition:width .3s;}
.main-navigation a:hover::after,a.active::after{width:100%;}
.customer-selection{display:flex;align-items:center;gap:10px;}
.customer-selection .select-wrapper{position:relative;width:250px;}
.customer-selection select{width:100%;padding-right:30px;appearance:none;background:url("data:image/svg+xml;utf8,<svg fill='%23a0a0a0' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>") no-repeat right 8px center;background-size:20px;}
.customer-selection input{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;pointer-events:none;transition:opacity .3s;}
.customer-selection input.active{opacity:1;pointer-events:all;background:var(--bg-secondary);}
.cta-button{background:linear-gradient(45deg,var(--highlight-cyan),var(--highlight-magenta));color:#fff;padding:10px 25px;font-weight:bold;box-shadow:0 5px 15px rgba(233,30,99,0.3);transition:background .2s,box-shadow .2s;}
.cta-button:hover{background:linear-gradient(45deg,var(--highlight-magenta),var(--highlight-cyan));box-shadow:0 8px 20px rgba(0,188,212,0.4);}

/* Main content & tabs */
.dashboard-main{flex-grow:1;padding:20px 40px;}
.views-tabs{display:flex;border-bottom:2px solid #ccc;margin-bottom:1rem;}
.views-tabs button{padding:.5rem 1rem;background:none;border:none;border-bottom:3px solid transparent;cursor:pointer;font-size:1rem;}
.views-tabs button.active{border-color:#007acc;font-weight:bold;}
.view-content{display:none;padding:20px;background:var(--glass-bg);backdrop-filter:blur(var(--glass-blur));border-radius:var(--glass-border-radius);box-shadow:0 2px 10px var(--glass-shadow);margin-bottom:20px;}
.view-content.active{display:block;}
.view-settings-panel{position:fixed;top:0;right:-300px;width:300px;height:100vh;background:#f4f4f4;border-left:1px solid #ddd;box-shadow:-2px 0 8px rgba(0,0,0,0.1);transition:right .3s;padding:1rem;overflow-y:auto;}
.view-settings-panel.open{right:0;}

/* Cards grid & cards */
.cards-grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(300px,1fr));gap:30px;}
.card{background:var(--glass-bg);backdrop-filter:blur(var(--glass-blur));border:var(--glass-border-width) solid var(--border-color);border-radius:var(--glass-border-radius);box-shadow:0 4px 30px var(--glass-shadow);padding:25px;display:flex;flex-direction:column;gap:15px;position:relative;overflow:hidden;transition:transform .2s,box-shadow .2s;}
.card::before{content:'';position:absolute;top:0;left:0;width:100%;height:5px;background:linear-gradient(to right,var(--highlight-cyan),var(--highlight-magenta));opacity:0.8;border-radius:var(--glass-border-radius) var(--glass-border-radius) 0 0;}
.card:hover{transform:translateY(-5px);box-shadow:0 8px 40px var(--glass-shadow),0 0 20px rgba(0,188,212,0.3);}
.card h3{font-size:1.5rem;color:var(--text-primary);margin-bottom:10px;}
.card p{color:var(--text-secondary);font-size:1rem;}
.error-card{background:rgba(255,0,0,0.1);border:1px solid crimson;color:crimson;}
.error-card h3{color:crimson;}
.error-card p{color:#ff6347;}

/* Footer */
.dashboard-footer{padding:20px 40px;text-align:center;color:var(--text-secondary);font-size:.9rem;border-top:1px solid var(--border-color);background:var(--bg-secondary);transition:var(--theme-transition);border-radius:0 0 var(--glass-border-radius) var(--glass-border-radius);}

/* Debug panel overlay */
#debug-panel{position:fixed;bottom:20px;left:10%;width:80%;max-width:1200px;height:50vh;display:flex;flex-direction:column;background:var(--glass-bg);backdrop-filter:blur(var(--glass-blur));border:2px solid var(--highlight-cyan);border-radius:var(--glass-border-radius);box-shadow:0 0 20px var(--highlight-cyan),0 0 40px var(--highlight-magenta),inset 0 0 10px var(--highlight-yellow);overflow:hidden;z-index:9999;animation:debugPanelGlow 3s infinite alternate;transition:transform .3s ease;}
#debug-panel.hidden{transform:translateY(calc(100% - 40px));}
.debug-header{display:flex;align-items:center;justify-content:space-between;padding:8px 12px;background:rgba(0,0,0,0.2);border-bottom:1px solid var(--border-color);}
.debug-header h3{margin:0;color:var(--highlight-yellow);font-size:1rem;}
.debug-button{padding:2px 6px;font-size:.75rem;border-radius:4px;background:var(--bg-secondary);color:var(--text-secondary);border:1px solid var(--border-color);transition:background .2s,color .2s,border-color .2s;cursor:pointer;}
.debug-button:hover{background:var(--highlight-cyan);color:#fff;border-color:var(--highlight-cyan);}
.debug-content{flex:1 1 auto;padding:8px 12px;overflow-y:auto;background:rgba(0,0,0,0.1);}
.debug-log-output{margin:0;font-size:.8rem;line-height:1.4;white-space:pre-wrap;}
@keyframes debugPanelGlow{from{box-shadow:0 0 10px var(--highlight-cyan),0 0 20px var(--highlight-magenta),inset 0 0 5px var(--highlight-yellow);}to{box-shadow:0 0 20px var(--highlight-cyan),0 0 40px var(--highlight-magenta),inset 0 0 15px var(--highlight-yellow);}}
@media(max-width:768px){.dashboard-header{padding:15px 20px}.header-bottom{flex-direction:column;align-items:flex-start}.main-navigation ul{flex-wrap:wrap;gap:15px}.customer-selection{width:100%;justify-content:center;flex-wrap:wrap}.select-wrapper{width:100%}.dashboard-main{padding:15px 20px}.cards-grid{grid-template-columns:1fr}#debug-panel{width:90%;bottom:10px;left:5%;max-height:70vh}}



==== PHP FILE: ./functions.php ====
Size: 3079 bytes
Last Modified: Thu, Jun 12, 2025  9:48:45 AM
----------------------------------------
<?php
declare(strict_types=1);
/**
 * functions.php – shared helpers: logging, partials, sanitization, API calls.
 */

require_once __DIR__ . '/config.php';  // ensures all constants & session are set

/**
 * debug_log – append debug messages only if DEBUG_MODE is true.
 */
function debug_log(string $message, string $level = 'INFO'): void {
    if (! DEBUG_MODE) {
        return;
    }
    $entry = sprintf("[%s] %s: %s\n", date('c'), strtoupper($level), $message);
    $logDir = __DIR__ . '/logs';
    if (! is_dir($logDir) && ! mkdir($logDir, 0755, true)) {
        error_log("Cannot create log directory: {$logDir}");
        return;
    }
    file_put_contents("{$logDir}/debug-" . date('Y-m-d') . ".log", $entry, FILE_APPEND);
}

/**
 * include_partial – safely include a PHP partial with scoped variables.
 */
function include_partial(string $relPath, array $vars = []): bool {
    $base = realpath(__DIR__);
    $full = realpath(__DIR__ . '/' . ltrim($relPath, '/'));
    if ($full === false || strpos($full, $base) !== 0) {
        debug_log("Partial path traversal or missing: {$relPath}", 'ERROR');
        return false;
    }
    extract($vars, EXTR_SKIP);
    include $full;
    return true;
}

/**
 * sanitize_html – escape user/output strings for HTML contexts.
 */
function sanitize_html(string $s): string {
    return htmlspecialchars($s, ENT_QUOTES | ENT_SUBSTITUTE, 'UTF-8');
}

/**
 * sanitize_url – escape strings safe for URL segments/queries.
 */
function sanitize_url(string $s): string {
    $clean = filter_var($s, FILTER_SANITIZE_URL);
    return $clean === false ? '' : $clean;
}

/**
 * fetch_customers – retrieves customer list via API, with basic error checks.
 */
function fetch_customers(): array {
    $url = API_BASE_URL . 'Customer/GetCustomers';
    $payload = json_encode([
        'DealerCode' => DEALER_CODE,
        'PageNumber' => 1,
        'PageRows'   => DEVICE_PAGE_SIZE,
        'SortColumn' => 'Id',
        'SortOrder'  => 0
    ]);

    $ch = curl_init($url);
    curl_setopt_array($ch, [
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_POST           => true,
        CURLOPT_HTTPHEADER     => [
            'Content-Type: application/json',
            'Authorization: Bearer ' . ($_SESSION['access_token'] ?? '')
        ],
        CURLOPT_POSTFIELDS     => $payload,
        CURLOPT_TIMEOUT        => 10,
    ]);

    $resp = curl_exec($ch);
    if (curl_errno($ch)) {
        debug_log('cURL error: ' . curl_error($ch), 'ERROR');
        curl_close($ch);
        return [];
    }
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    if ($httpCode !== 200) {
        debug_log("fetch_customers: HTTP {$httpCode}", 'ERROR');
        return [];
    }

    $data = json_decode($resp, true);
    if (json_last_error() !== JSON_ERROR_NONE) {
        debug_log('JSON parse error: ' . json_last_error_msg(), 'ERROR');
        return [];
    }

    return $data['Result'] ?? [];
}



==== PHP FILE: ./includes/CardEditor.php ====
Size: 4655 bytes
Last Modified: Thu, Jun 12, 2025  9:14:42 AM
----------------------------------------
<?php
declare(strict_types=1);
/**
 * CardEditor.php - renders interactive API-testing cards.
 */

require_once __DIR__ . '/../config.php';
require_once __DIR__ . '/../functions.php';

// 1) Session must already be started by config.php

class CardEditor {
    private array $endpoints = [];
    private string $apiRoot;

    public function __construct() {
        $this->apiRoot = API_BASE_URL;
        $this->loadEndpoints();
    }

    private function loadEndpoints(): void {
        $file = __DIR__ . '/../AllEndpoints.json';
        if (! file_exists($file)) {
            debug_log("AllEndpoints.json missing", 'ERROR');
            return;
        }
        $json = json_decode(file_get_contents($file), true);
        if (! is_array($json)) {
            debug_log("AllEndpoints.json parse error", 'ERROR');
            return;
        }
        foreach ($json as $k => $ep) {
            if (isset($ep['Method'], $ep['Url'])) {
                $this->endpoints[$k] = [
                    'method'  => strtoupper($ep['Method']),
                    'url'     => $ep['Url'],
                    'payload' => $ep['Request'] ?? []
                ];
            }
        }
    }

    public function render(): void {
        echo '<link rel="stylesheet" href="' . SITE_BASE_URL . 'css/card-editor.css">';
        echo '<div class="cards-container">';
        foreach ($this->endpoints as $key => $ep) {
            if ($ep['method'] === 'GET') {
                $this->renderCard($key, $ep);
            }
        }
        echo '</div>';
        $this->renderScripts();
    }

    private function renderCard(string $k, array $ep): void {
        $cfg = htmlspecialchars(json_encode($ep), ENT_QUOTES|ENT_SUBSTITUTE);
        echo <<<HTML
<div class="card" id="card_{$k}">
  <div class="card-inner">
    <div class="card-front" onclick="CE_flipCard('card_{$k}')">
      <h4>{$k}</h4>
      <small>{$ep['method']} {$ep['url']}</small>
    </div>
    <div class="card-back">
      <input type="hidden" id="{$k}_config" value="{$cfg}">
      <button onclick="CE_flipCard('card_{$k}')">× Close</button>
      <form id="card_{$k}_form"></form>
      <div id="card_{$k}_result" class="api-result"></div>
    </div>
  </div>
</div>
<script>CE_updateForm('{$k}','card_{$k}');</script>
HTML;
    }

    private function renderScripts(): void {
        $root = htmlspecialchars($this->apiRoot, ENT_QUOTES|ENT_SUBSTITUTE);
        echo <<<HTML
<script>
(function(){
  const ROOT = "{$root}";
  function _flip(id){ const c=document.getElementById(id); c.classList.toggle('flipped'); c.classList.toggle('enlarged'); }
  function _updateForm(key,card){
    const ep = JSON.parse(document.getElementById(key + '_config').value);
    const form = document.getElementById(card + '_form');
    form.innerHTML = '';
    if (ep.payload && typeof ep.payload==='object'){
      let html = '<fieldset><legend>Parameters</legend>';
      for (let p in ep.payload){
        const cfg = String(ep.payload[p]);
        const opt = cfg.includes('optional');
        const type = cfg.replace('|optional','');
        const fid = card+'_'+p;
        html += '<label>'+p+' ('+type+')'+(opt?' (opt)':'')+'</label>';
        html += '<input id="'+fid+'" name="'+p+'" type="'+(type==='integer'?'number':'text')+'" '+(opt?'':'required')+'>';
      }
      html += '</fieldset>';
      form.innerHTML = html;
    }
    form.innerHTML += '<button type="button" onclick="CE_test(\''+key+'\',\''+card+'\')">Test</button>';
  }
  async function _test(key,card){
    const ep = JSON.parse(document.getElementById(key + '_config').value);
    const form = document.getElementById(card + '_form');
    const data = {};
    Array.from(form.elements).forEach(e=>{ if(e.name && e.value) data[e.name]=e.value; });
    let url = ROOT + ep.url;
    for (let k in data) url = url.replace('{'+k+'}',encodeURIComponent(data[k]));
    const qs = new URLSearchParams(data).toString();
    if(qs) url += (url.includes('?')?'&':'?')+qs;
    try {
      const res = await fetch(url,{ headers:{ 'Authorization':'Bearer '+document.getElementById('api-token').value }});
      const js = await res.json();
      document.getElementById(card + '_result').innerHTML = '<pre>'+JSON.stringify(js,null,2)+'</pre>';
    } catch(err){
      document.getElementById(card + '_result').innerHTML = '<div class="error">Error: '+err.message+'</div>';
    }
  }
  window.CE_flipCard = _flip;
  window.CE_updateForm = _updateForm;
  window.CE_test       = _test;
})();
</script>
HTML;
    }
}



==== PHP FILE: ./includes/footer.php ====
Size: 1819 bytes
Last Modified: Wed, Jun 11, 2025  5:03:07 PM
----------------------------------------
<?php
/**
 * Dashboard Footer & Debug Panel
 */
if(!isset($GLOBALS['debug_messages'])) {
    $GLOBALS['debug_messages'] = [];
    debug_log("Initialized debug_messages", 'DEBUG');
}
debug_log("Rendering footer", 'DEBUG');
?>
<footer class="dashboard-footer">
  <p>&copy; <?php echo date('Y');?> <?php echo sanitize_html(APP_NAME);?>. Version <?php echo sanitize_html(APP_VERSION);?>.</p>
</footer>
<?php if (DEBUG_MODE && DEBUG_PANEL_ENABLED):?>
  <div id="debug-panel" class="debug-panel">
    <div class="debug-header">
      <h3>Debug Log</h3>
      <button id="debug-toggle-visibility" class="debug-button" title="Toggle Panel">−</button>
      <button id="debug-clear-log" class="debug-button" title="Clear Logs">🗑️</button>
    </div>
    <div class="debug-content">
      <pre id="debug-log-output" class="debug-log-output">
<?php
      if(empty($GLOBALS['debug_messages'])) {
          echo "[INFO] No log messages yet.\n";
      } else {
          foreach($GLOBALS['debug_messages'] as $line) {
              echo sanitize_html($line) . "\n";
          }
      }
?>
      </pre>
    </div>
  </div>
  <script>
  (function(){
    const panel = document.getElementById('debug-panel');
    const tgl   = document.getElementById('debug-toggle-visibility');
    const clr   = document.getElementById('debug-clear-log');
    const out   = document.getElementById('debug-log-output');
    if (localStorage.getItem('debugPanelHidden')==='true') panel.classList.add('hidden');
    tgl.addEventListener('click',()=>{
      panel.classList.toggle('hidden');
      localStorage.setItem('debugPanelHidden', panel.classList.contains('hidden'));
    });
    clr.addEventListener('click',()=>out.textContent="[INFO] Logs cleared.\n");
  })();
  </script>
<?php endif;?>



==== PHP FILE: ./includes/header.php ====
Size: 3752 bytes
Last Modified: Thu, Jun 12, 2025  9:54:26 AM
----------------------------------------
<?php
/**
 * includes/header.php
 *
 * Dashboard Header Partial
 *
 * Renders:
 *  - Application title (APP_NAME)
 *  - Database & API status indicators
 *  - Theme toggle
 *  - Debug toggle (🐞) when DEBUG_MODE=true
 *  - Views navigation
 *  - Customer selection dropdown
 */

$db_status           = $db_status           ?? ['status'=>'unknown','message'=>'Status not retrieved.'];
$api_status          = $api_status          ?? ['status'=>'unknown','message'=>'Status not retrieved.'];
$customers           = $customers           ?? [];
$current_customer_id = $current_customer_id ?? null;
$available_views     = $available_views     ?? [];
$current_view_slug   = $current_view_slug   ?? 'dashboard';

debug_log("Rendering header", 'DEBUG');
?>
<header class="dashboard-header glassmorphic">

  <!-- Hidden API token for JS -->
  <input
    type="hidden"
    id="api-token"
    value="<?php echo sanitize_html($_SESSION['access_token'] ?? ''); ?>"
  >

  <div class="header-top">
    <div class="app-branding">
      <h1><?php echo sanitize_html(APP_NAME); ?></h1>
    </div>
    <div class="status-indicators">
      <div class="status-item db-status">
        <span
          class="status-dot status-<?php echo sanitize_html($db_status['status']); ?>"
          title="Database: <?php echo sanitize_html($db_status['message']); ?>"
        ></span>
        <span>Database</span>
      </div>
      <div class="status-item api-status">
        <span
          class="status-dot status-<?php echo sanitize_html($api_status['status']); ?>"
          title="API: <?php echo sanitize_html($api_status['message']); ?>"
        ></span>
        <span>API</span>
      </div>
      <button id="theme-toggle" class="theme-toggle" title="Toggle Theme">
        <span class="icon-light">☀️</span>
        <span class="icon-dark">🌙</span>
      </button>
      <?php if (DEBUG_MODE): ?>
        <button id="debug-toggle" class="debug-toggle" title="Toggle Debug 🐞">🐞</button>
      <?php endif; ?>
    </div>
  </div>

  <div class="header-bottom">
    <nav class="main-navigation">
      <ul>
        <?php foreach ($available_views as $slug => $label): 
          $active = ($slug === $current_view_slug) ? 'active' : '';
          $url    = BASE_URL . '?view=' . sanitize_url($slug);
        ?>
          <li>
            <a href="<?php echo sanitize_html($url); ?>"
               class="<?php echo sanitize_html($active); ?>">
              <?php echo sanitize_html($label); ?>
            </a>
          </li>
        <?php endforeach; ?>
      </ul>
    </nav>

    <div class="customer-selection">
      <label for="customer-select" class="sr-only">Select Customer</label>
      <div class="select-wrapper glassmorphic">
        <select id="customer-select" name="customer_code">
          <option value="">-- Select Customer --</option>
          <?php foreach ($customers as $cust):
            $code = sanitize_html($cust['Code']);
            $desc = sanitize_html($cust['Description']);
            $sel  = ($code === $current_customer_id) ? 'selected' : '';
          ?>
            <option value="<?php echo $code; ?>" <?php echo $sel; ?>>
              <?php echo $desc; ?>
            </option>
          <?php endforeach; ?>
        </select>
        <input
          type="text"
          id="customer-search"
          class="customer-search-input"
          placeholder="Search customer…"
          aria-label="Search customer"
        >
      </div>
      <button id="apply-customer-filter" class="cta-button">Apply Filter</button>
    </div>
  </div>
</header>

<?php debug_log("Header rendered", 'DEBUG'); ?>



==== PHP FILE: ./index.php ====
Size: 3629 bytes
Last Modified: Thu, Jun 12, 2025  9:54:38 AM
----------------------------------------
<?php
declare(strict_types=1);
ini_set('display_errors', DEBUG_MODE ? '1' : '0');
ini_set('display_startup_errors', DEBUG_MODE ? '1' : '0');
error_reporting(E_ALL);

/**
 * index.php
 *
 * 1. Bootstrap (config.php loads .env, session, constants)
 * 2. Helpers
 * 3. Fetch data
 * 4. Determine view
 * 5. Render <head> + CSS
 * 6. Render header
 * 7. Render CardEditor
 * 8. Render debug panel (if DEBUG_MODE)
 * 9. Render main view
 * 10. Render footer
 */

require_once __DIR__ . '/config.php';
require_once __DIR__ . '/functions.php';

// Fetch customers
$customers = fetch_customers();

// Handle customer selection POST
if (! empty($_POST['customer_code'])) {
    $_SESSION['customer_code'] = $_POST['customer_code'];
}
$current_customer_code = $_SESSION['customer_code'] ?? null;

// Status indicators
$db_status  = ['status'=>'ok','message'=>'Database connected.'];
$api_status = ['status'=>'ok','message'=>'API reachable.'];

// Views
$available_views = [
    'dashboard' => 'Dashboard Overview',
    'reports'   => 'Reports',
    'analytics' => 'Analytics',
];
$current_view = $_GET['view'] ?? 'dashboard';
if (! array_key_exists($current_view, $available_views)) {
    $current_view = 'dashboard';
}

// ---------------
// HTML OUTPUT
?><!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title><?php echo sanitize_html(APP_NAME); ?></title>
  <link rel="stylesheet" href="<?php echo BASE_URL; ?>css/styles.css">
  <link rel="stylesheet" href="<?php echo BASE_URL; ?>css/debug.css">
</head>
<body class="theme-dark">

<?php
// ---------------
// Header
include_partial('includes/header.php', [
    'db_status'           => $db_status,
    'api_status'          => $api_status,
    'customers'           => $customers,
    'current_customer_id' => $current_customer_code,
    'available_views'     => $available_views,
    'current_view_slug'   => $current_view,
]);

// ---------------
// Card Editor
require_once __DIR__ . '/includes/CardEditor.php';
(new CardEditor())->render();

// ---------------
// Debug Panel
if (DEBUG_MODE): ?>
  <div id="debug-panel" class="hidden">
    <h4>🐞 Debug Log (<?php echo date('Y-m-d'); ?>)</h4>
    <pre><?php
      $logfile = __DIR__ . '/logs/debug-' . date('Y-m-d') . '.log';
      if (file_exists($logfile)) {
          echo sanitize_html(file_get_contents($logfile));
      } else {
          echo "No log file found for today.";
      }
    ?></pre>
  </div>
<?php endif; ?>

<?php
// ---------------
// Main View
echo '<main class="dashboard-main">';
$viewData = [
    'selected_customer_id' => $current_customer_code,
    'available_views'      => $available_views,
    'current_view_slug'    => $current_view,
];
if (! include_partial("views/{$current_view}.php", $viewData)) {
    echo '<div class="view-not-found">';
    echo '<h2>View Not Found!</h2>';
    echo '<p>Could not load view <code>' . sanitize_html($current_view) . '</code>.</p>';
    echo '</div>';
}
echo '</main>';

// ---------------
// Footer
include_partial('includes/footer.php');
?>

<!-- ---------------
// Debug Toggle Script
--------------- -->
<script>
document.addEventListener('DOMContentLoaded', function(){
  const btn   = document.getElementById('debug-toggle');
  const panel = document.getElementById('debug-panel');
  if (btn && panel) {
    btn.addEventListener('click', function(){
      panel.classList.toggle('hidden');
    });
  }
});
</script>

</body>
</html>



==== JS FILE: ./js/script.js ====
Size: 11184 bytes
Last Modified: Wed, Jun 11, 2025 12:37:58 PM
----------------------------------------
/**
 * MPSM Dashboard - Main JavaScript File
 *
 * This file contains all the client-side JavaScript for the MPSM Dashboard.
 * It handles interactive elements such as theme switching, the searchable customer dropdown,
 * and the functionality of the debug panel (toggle, clear, drag).
 *
 * Debugging Philosophy:
 * console.log statements are used extensively within this JS file to trace execution,
 * verify element selections, and debug interactive behaviors directly in the browser's
 * developer console. These logs should be comprehensive to aid troubleshooting.
 */

document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM Content Loaded. Initializing JavaScript components...');

    // --- Theme Toggle Functionality ---
    const themeToggleBtn = document.getElementById('theme-toggle');
    const body = document.body;

    if (themeToggleBtn && body) {
        console.log('Theme toggle button found. Initializing theme functionality.');

        // Function to set the theme based on local storage or system preference
        function applyTheme(theme) {
            console.log('Applying theme:', theme);
            if (theme === 'dark') {
                body.classList.remove('theme-light');
                body.classList.add('theme-dark');
            } else {
                body.classList.remove('theme-dark');
                body.classList.add('theme-light');
            }
            localStorage.setItem('mpsm_theme', theme); // Save preference
            console.log('Theme applied and saved to localStorage:', theme);
        }

        // Check for saved theme preference or system preference on load
        const savedTheme = localStorage.getItem('mpsm_theme');
        if (savedTheme) {
            applyTheme(savedTheme);
            console.log('Loaded theme from localStorage:', savedTheme);
        } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            // Check for system dark mode preference
            applyTheme('dark');
            console.log('Applying system dark mode preference.');
        } else {
            // Default to light theme if no preference found
            applyTheme('light'); // Explicitly set light as default if no dark preference
            console.log('Defaulting to light theme.');
        }

        // Add event listener for theme toggle button
        themeToggleBtn.addEventListener('click', function() {
            const currentTheme = body.classList.contains('theme-dark') ? 'dark' : 'light';
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            applyTheme(newTheme);
            console.log('Theme toggled from', currentTheme, 'to', newTheme);
        });
    } else {
        console.warn('Theme toggle button or body element not found. Theme functionality skipped.');
    }

    // --- Customer Selection Dropdown with Search Functionality ---
    const customerSelect = document.getElementById('customer-select');
    const customerSearchInput = document.getElementById('customer-search');
    const applyCustomerFilterBtn = document.getElementById('apply-customer-filter');

    if (customerSelect && customerSearchInput && applyCustomerFilterBtn) {
        console.log('Customer selection elements found. Initializing customer filter.');

        // Hide the dropdown and show the search input initially
        customerSelect.style.display = 'none';
        customerSearchInput.classList.add('active');
        console.log('Customer dropdown hidden, search input shown.');

        // Cache the original options for filtering
        const originalOptions = Array.from(customerSelect.options).map(option => ({
            value: option.value,
            text: option.textContent
        }));
        console.log('Original customer options cached:', originalOptions);

        customerSearchInput.addEventListener('input', function() {
            const searchTerm = customerSearchInput.value.toLowerCase();
            console.log('Customer search input changed. Search term:', searchTerm);

            // Clear current options
            customerSelect.innerHTML = '';
            customerSelect.style.display = 'block'; // Temporarily show to update options

            let matchFound = false;
            let firstMatchValue = null;

            // Add a default "Select Customer" option
            const defaultOption = document.createElement('option');
            defaultOption.value = '';
            defaultOption.textContent = '-- Select Customer --';
            customerSelect.appendChild(defaultOption);

            originalOptions.forEach(option => {
                if (option.value === '') return; // Skip the initial default option

                if (option.text.toLowerCase().includes(searchTerm)) {
                    const newOption = document.createElement('option');
                    newOption.value = option.value;
                    newOption.textContent = option.text;
                    customerSelect.appendChild(newOption);
                    if (!matchFound) {
                        firstMatchValue = option.value;
                        matchFound = true;
                    }
                    console.log('Found match for customer:', option.text);
                }
            });

            // If a single exact match or first fuzzy match is found, select it
            if (firstMatchValue) {
                customerSelect.value = firstMatchValue;
                console.log('Automatically selected first matching customer:', firstMatchValue);
            } else {
                customerSelect.value = ''; // No match, reset selection
                console.log('No customer match found for search term.');
            }

            customerSelect.style.display = 'none'; // Hide dropdown again after updating
        });

        // Event listener for the "Apply Filter" button
        applyCustomerFilterBtn.addEventListener('click', function() {
            const selectedCustomerId = customerSelect.value; // This will hold the value from the filtered dropdown
            const currentView = new URLSearchParams(window.location.search).get('view') || 'dashboard'; // Get current view

            console.log('Apply Filter button clicked. Selected Customer ID:', selectedCustomerId);

            if (selectedCustomerId) {
                // Redirect with the selected customer ID and current view
                window.location.href = `?view=${encodeURIComponent(currentView)}&customer_id=${encodeURIComponent(selectedCustomerId)}`;
                console.log('Redirecting to:', `?view=${encodeURIComponent(currentView)}&customer_id=${encodeURIComponent(selectedCustomerId)}`);
            } else {
                // If no customer is selected, remove customer_id from URL
                const url = new URL(window.location.href);
                url.searchParams.delete('customer_id');
                window.location.href = url.toString();
                console.log('No customer selected, redirecting to remove customer_id from URL:', url.toString());
            }
        });

        // Initialize search input value if customer_id is already in URL
        const initialCustomerId = new URLSearchParams(window.location.search).get('customer_id');
        if (initialCustomerId) {
            const selectedOption = originalOptions.find(option => option.value == initialCustomerId);
            if (selectedOption) {
                customerSearchInput.value = selectedOption.text;
                console.log('Pre-filled customer search input with:', selectedOption.text);
            }
        }
    } else {
        console.warn('Customer selection elements not fully found. Customer filter functionality skipped.');
    }

    // --- Debug Panel Functionality ---
    const debugPanel = document.getElementById('debug-panel');
    const debugToggleVisibilityBtn = document.getElementById('debug-toggle-visibility');
    const debugClearLogBtn = document.getElementById('debug-clear-log');
    const debugLogOutput = document.getElementById('debug-log-output');

    if (debugPanel && debugToggleVisibilityBtn && debugClearLogBtn && debugLogOutput) {
        console.log('Debug panel elements found. Initializing debug panel functionality.');

        // Toggle Visibility
        debugToggleVisibilityBtn.addEventListener('click', function() {
            debugPanel.classList.toggle('hidden');
            console.log('Debug panel visibility toggled. Hidden status:', debugPanel.classList.contains('hidden'));
        });

        // Clear Log
        debugClearLogBtn.addEventListener('click', function() {
            debugLogOutput.innerHTML = '[INFO] Log cleared by user.\n';
            console.log('Debug log cleared.');
        });

        // Drag Functionality (Basic)
        let isDragging = false;
        let offsetX, offsetY;

        const debugHeader = debugPanel.querySelector('.debug-header');
        if (debugHeader) {
            debugHeader.addEventListener('mousedown', (e) => {
                isDragging = true;
                offsetX = e.clientX - debugPanel.getBoundingClientRect().left;
                offsetY = e.clientY - debugPanel.getBoundingClientRect().top;
                debugPanel.style.cursor = 'grabbing';
                console.log('Debug panel dragging started.');
            });

            document.addEventListener('mousemove', (e) => {
                if (!isDragging) return;
                debugPanel.style.left = (e.clientX - offsetX) + 'px';
                debugPanel.style.top = (e.clientY - offsetY) + 'px';
                // Prevent panel from going off-screen (basic boundary check)
                const panelRect = debugPanel.getBoundingClientRect();
                if (panelRect.left < 0) debugPanel.style.left = '0px';
                if (panelRect.top < 0) debugPanel.style.top = '0px';
                if (panelRect.right > window.innerWidth) debugPanel.style.left = (window.innerWidth - panelRect.width) + 'px';
                if (panelRect.bottom > window.innerHeight) debugPanel.style.top = (window.innerHeight - panelRect.height) + 'px';
            });

            document.addEventListener('mouseup', () => {
                if (isDragging) {
                    isDragging = false;
                    debugPanel.style.cursor = 'grab';
                    console.log('Debug panel dragging ended.');
                }
            });
        } else {
            console.warn('Debug panel header not found. Drag functionality skipped.');
        }

        // Scroll debug log to bottom on load
        debugLogOutput.scrollTop = debugLogOutput.scrollHeight;
        console.log('Debug log scrolled to bottom on load.');

    } else {
        console.warn('Debug panel elements not fully found. Debug panel functionality skipped.');
    }

    console.log('JavaScript initialization complete.');
});


==== TEXT FILE: ./Refined Endpoint Groups JSON.json ====
Size: 5116 bytes
Last Modified: Tue, Jun 10, 2025 11:13:34 AM
----------------------------------------
{
  "Developer": {
    "WhiteLabel": {
      "endpoints": [
        "/WhiteLabel/GetWhiteLabel",
        "/WhiteLabel/Update",
        "/WhiteLabel/GetPlaceholders"
      ]
    },
    "Devices": {
      "endpoints": [
        "/Devices/SetFirmware",
        "/Devices/SetZebraSettings"
      ]
    }
  },
  "Admin": {
    "Account": {
      "Profile": {
        "endpoints": [
          "/Account/GetProfile",
          "/Account/UpdateProfile"
        ]
      },
      "Authentication": {
        "2FA": {
          "endpoints": [
            "/Account/GetPsk2faData",
            "/Account/GetPsk2faDataForProfile",
            "/Account/GetPsk2faDataForAccount",
            "/Account/Enable2faForAccount",
            "/Account/Enable2faForProfile",
            "/Account/Delete2fa",
            "/Account/DeleteProfile2fa"
          ]
        },
        "Session": {
          "endpoints": [
            "/Account/RefreshAuthCookie",
            "/Account/Logout",
            "/Account/SendOtpEmailForAccount"
          ]
        },
        "Password": {
          "endpoints": [
            "/Account/ChangePassword",
            "/Account/ResetPassword",
            "/Account/ResetPasswordVerifyToken"
          ]
        }
      },
      "AccountManagement": {
        "endpoints": [
          "/Account/SetPreferredDealer",
          "/Account/GetAccount",
          "/Account/GetAccounts",
          "/Account/Create",
          "/Account/Update",
          "/Account/Delete"
        ]
      },
      "Preferences": {
        "endpoints": [
          "/Account/ChangeLanguage"
        ]
      }
    }
  },
  "Dealer": {
    "AlertLimit2": {
      "Dealer": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Dealer/GetDefault",
            "/AlertLimit2/Dealer/CreateDefault",
            "/AlertLimit2/Dealer/UpdateDefault"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit2/Dealer/GetProductList",
            "/AlertLimit2/Dealer/GetProduct",
            "/AlertLimit2/Dealer/DeleteProduct",
            "/AlertLimit2/Dealer/CreateProduct",
            "/AlertLimit2/Dealer/UpdateProduct"
          ]
        }
      }
    },
    "AlertLimit": {
      "Dealer": {
        "endpoints": [
          "/AlertLimit/Dealer/Get",
          "/AlertLimit/Dealer/Update"
        ]
      }
    }
  },
  "Service": {
    "AlertLimit2": {
      "General": {
        "endpoints": [
          "/AlertLimit2/DisableAlertLimits",
          "/AlertLimit2/GetAllLimits"
        ]
      },
      "Customer": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Customer/GetDefault",
            "/AlertLimit2/Customer/CreateDefault",
            "/AlertLimit2/Customer/UpdateDefault",
            "/AlertLimit2/Customer/DeleteDefaultForConsumable"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit2/Customer/GetProductList",
            "/AlertLimit2/Customer/GetProduct",
            "/AlertLimit2/Customer/DeleteProduct",
            "/AlertLimit2/Customer/CreateProduct",
            "/AlertLimit2/Customer/UpdateProduct"
          ]
        }
      },
      "Device": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Device/GetDefault",
            "/AlertLimit2/Device/CreateDefault",
            "/AlertLimit2/Device/UpdateDefault",
            "/AlertLimit2/Device/DeleteDefaultForConsumable"
          ]
        }
      }
    },
    "AlertLimit": {
      "Customer": {
        "General": {
          "endpoints": [
            "/AlertLimit/Customer/Get",
            "/AlertLimit/Customer/Update"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit/Customer/Product/List",
            "/AlertLimit/Customer/Product/Update"
          ]
        }
      },
      "Device": {
        "endpoints": [
          "/AlertLimit/Device/Get",
          "/AlertLimit/Device/Update"
        ]
      }
    },
    "Ticket": {
      "General": {
        "endpoints": [
          "/Ticket/GetByNumber",
          "/Ticket/GetTickets",
          "/Ticket/Create",
          "/Ticket/Update",
          "/Ticket/CreateChild"
        ]
      },
      "Metadata": {
        "endpoints": [
          "/Ticket/GetAttachment",
          "/Ticket/GetMedia",
          "/Ticket/GetCategoryLanguage",
          "/Ticket/GetSubTypesByCategory",
          "/Ticket/GetOperators",
          "/Ticket/GetCustomerTicketStatus"
        ]
      }
    },
    "TraceVolume": {
      "endpoints": [
        "/TraceVolume/GetList",
        "/TraceVolume/Get",
        "/TraceVolume/Create",
        "/TraceVolume/Update",
        "/TraceVolume/NewEvent"
      ]
    }
  },
  "Sales": {
    "TradingPartner": {
      "endpoints": [
        "/TradingPartner/Get",
        "/TradingPartner/GetList",
        "/TradingPartner/Update"
      ]
    }
  },
  "Accounting": {},
  "Guest": {
    "Account": {
      "Password": {
        "endpoints": [
          "/Account/ResetPassword",
          "/Account/ResetPasswordVerifyToken"
        ]
      }
    }
  }
}


==== TEXT FILE: ./Swagger.json ====
Size: 2109007 bytes
Last Modified: Tue, Jun 10, 2025 10:22:56 AM
----------------------------------------
{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Communication/GetPortalReleaseNotes": {
      "get": {
        "tags": [
          "CommunicationApi"
        ],
        "summary": "Get Portal Release Notes",
        "operationId": "Communication/GetPortalReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[PortalReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Consumable/List": {
      "post": {
        "tags": [
          "ConsumableApi"
        ],
        "summary": "List all devices consumables",
        "operationId": "Consumable/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConsumablesDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/List": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the offices.",
        "operationId": "CostCenter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCostCentersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Get": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the office.",
        "operationId": "CostCenter/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Creates the office.",
        "operationId": "CostCenter/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Update": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Updates the office.",
        "operationId": "CostCenter/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Delete": {
      "delete": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Delete  office.",
        "operationId": "CostCenter/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns counters",
        "operationId": "Counter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListDetailed": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/ListDetailed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersDetailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDetailedDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListBlended": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns blended counters",
        "operationId": "Counter/ListBlended",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersBlendDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Export": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Export",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CounterCatalogItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Update": {
      "put": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Suggestions": {
      "get": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Suggestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CounterCatalogSuggestionsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/List": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/Device/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Gets or sets the from date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Gets or sets the to date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CounterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/Export": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Export detailed counters",
        "operationId": "Counter/Device/Export",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportToCsv",
            "in": "query",
            "description": "Gets or sets a value indicating whether [export to CSV] or [export to XSLSX].",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Gets or sets the from date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Gets or sets the to


==== PHP FILE: ./token.php ====
Size: 1484 bytes
Last Modified: Wed, Jun 11, 2025  2:08:16 PM
----------------------------------------
<?php
/**
 * token.php
 *
 * Simple endpoint to fetch a valid OAuth2 access token on demand.
 * 
 * Usage:
 *   GET /token.php
 * 
 * Returns JSON:
 *   {
 *     "status": "success",
 *     "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9…"
 *   }
 * or on error:
 *   {
 *     "status": "error",
 *     "message": "Detailed error message"
 *   }
 *
 * This file:
 *  1. Boots your config (paths, env, debug settings)
 *  2. Includes helpers (debug_log, getAccessToken, respond_json)
 *  3. Attempts to get a token (cached or new)
 *  4. Sends a clean JSON response and exits
 */

// 1) Bootstrap application settings and helpers
require_once __DIR__ . '/config.php';      // loads DEBUG_MODE, APP_BASE_PATH, paths, error_reporting, session_start(), etc.
require_once __DIR__ . '/functions.php';   // loads debug_log(), getAccessToken(), respond_json(), output buffering, etc.

// 2) Attempt to fetch the token
try {
    // Calls loadCachedToken() or requestNewToken(), with debug_log entries for each step
    $token = getAccessToken();

    // 3a) On success, return the token
    respond_json([
        'status'       => 'success',
        'access_token' => $token,
    ]);

} catch (Throwable $e) {
    // 3b) On any error, log it and return an error JSON
    debug_log('Error in token.php: ' . $e->getMessage(), 'ERROR');

    respond_json([
        'status'  => 'error',
        'message' => $e->getMessage(),
    ]);
}



==== PHP FILE: ./views/analytics.php ====
Size: 319 bytes
Last Modified: Wed, Jun 11, 2025  5:03:40 PM
----------------------------------------
<?php
/**
 * Analytics View
 */
$cid = $selected_customer_id ?? null;
debug_log("Loading Analytics view. Customer: ".($cid??'None'), 'INFO');
?>
<h2 class="view-title"><?php echo sanitize_html($available_views[$current_view_slug]); ?></h2>
<div class="cards-grid">
  <!-- Add analytics cards here -->
</div>



==== PHP FILE: ./views/dashboard.php ====
Size: 738 bytes
Last Modified: Wed, Jun 11, 2025  5:03:20 PM
----------------------------------------
<?php
/**
 * Dashboard Overview View
 */
$cid = $selected_customer_id ?? null;
debug_log("Loading Dashboard view. Customer: ".($cid??'None'), 'INFO');
?>
<h2 class="view-title"><?php echo sanitize_html($available_views[$current_view_slug]); ?></h2>
<div class="cards-grid">
  <?php
    render_card('printer_status_card', [
      'customer_id'=>$cid,
      'card_title'=>'Printer Status Overview',
      'status_summary'=>['online'=>10,'offline'=>2,'warning'=>1,'error'=>0,'unknown'=>0]
    ]);
    render_card('toner_levels_card', [
      'customer_id'=>$cid,
      'card_title'=>'Toner Levels',
      'toner_data'=>['black'=>80,'cyan'=>70,'magenta'=>65,'yellow'=>50],
      'low_threshold'=>30
    ]);
  ?>
</div>



==== PHP FILE: ./views/reports.php ====
Size: 312 bytes
Last Modified: Wed, Jun 11, 2025  5:03:30 PM
----------------------------------------
<?php
/**
 * Reports View
 */
$cid = $selected_customer_id ?? null;
debug_log("Loading Reports view. Customer: ".($cid??'None'), 'INFO');
?>
<h2 class="view-title"><?php echo sanitize_html($available_views[$current_view_slug]); ?></h2>
<div class="cards-grid">
  <!-- Add report cards here -->
</div>



