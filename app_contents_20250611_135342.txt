WEB APPLICATION CONTENT COLLECTION
Generated: Wed, Jun 11, 2025  1:54:13 PM
----------------------------------------

==== BINARY FILE: ./.DS_Store ====
Size: 6148 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
[Binary content not displayed]


==== CONFIG FILE: ./.env ====
Size: 508 bytes
Last Modified: Wed, Jun 11, 2025 11:17:59 AM
----------------------------------------
CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/

# Database configuration
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr

# Dealer Info
DEALER_CODE=SZ13qRwU5GtFLj0i_CbEgQ2
DEALER_ID=123456

# UI settings
DEVICE_PAGE_SIZE=25

# Debugging toggle (true or false)
DEBUG_MODE=true


==== TEXT FILE: ./.github/workflows/deploy.yml ====
Size: 1943 bytes
Last Modified: Wed, Jun 11, 2025 12:47:49 PM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File in Root
        # This command creates 'version.js' directly in the root of the checked-out repository.
        run: |
          echo "window.appVersion = \"0.0.0.${{ github.run_number }}\";" > version.js

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          # IMPORTANT: Use a GitHub Secret for your password in a real-world scenario!
          # For this non-production example, it's hardcoded as per your instruction.
          password: Deploy123!
          protocol: ftp
          port: 21

          # Deploy everything from the root of the checked-out repository
          local-dir: ./
          # Deploy to the root directory of the FTP server
          server-dir: /

          # CAUTION: This will delete EVERYTHING on the server-dir before uploading!
          dangerous-clean-slate: true

          exclude: |
            .git/
            .github/ # Exclude GitHub Actions workflow files and their directories
            # Add any other files/directories you do NOT want to deploy from your repository root.
            # Example: node_modules/
            # Example: .env.development

          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo "### DEPLOYMENT SUMMARY ###"
          echo "- Version: 0.0.0.${{ github.run_number }}"
          echo "- FTP Server: ftp.resolutionsbydesign.us"
          echo "- Server Directory: /"
          echo "- Local Directory: ./"


==== TEXT FILE: ./AllEndpoints.json ====
Size: 2184874 bytes
Last Modified: Tue, Jun 10, 2025 10:23:48 AM
----------------------------------------
{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Communication/GetPortalReleaseNotes": {
      "get": {
        "tags": [
          "CommunicationApi"
        ],
        "summary": "Get Portal Release Notes",
        "operationId": "Communication/GetPortalReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[PortalReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Consumable/List": {
      "post": {
        "tags": [
          "ConsumableApi"
        ],
        "summary": "List all devices consumables",
        "operationId": "Consumable/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConsumablesDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/List": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the offices.",
        "operationId": "CostCenter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCostCentersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Get": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the office.",
        "operationId": "CostCenter/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Creates the office.",
        "operationId": "CostCenter/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Update": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Updates the office.",
        "operationId": "CostCenter/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Delete": {
      "delete": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Delete  office.",
        "operationId": "CostCenter/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns counters",
        "operationId": "Counter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListDetailed": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/ListDetailed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersDetailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDetailedDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListBlended": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns blended counters",
        "operationId": "Counter/ListBlended",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersBlendDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Export": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Export",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CounterCatalogItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Update": {
      "put": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Updat


==== TEXT FILE: ./app_contents_20250611_135342.txt ====
Size: 103198 bytes
Last Modified: Wed, Jun 11, 2025  1:54:15 PM
----------------------------------------
WEB APPLICATION CONTENT COLLECTION
Generated: Wed, Jun 11, 2025  1:54:13 PM
----------------------------------------

==== BINARY FILE: ./.DS_Store ====
Size: 6148 bytes
Last Modified: Tue, Jun 10, 2025  7:50:32 AM
[Binary content not displayed]


==== CONFIG FILE: ./.env ====
Size: 508 bytes
Last Modified: Wed, Jun 11, 2025 11:17:59 AM
----------------------------------------
CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/

# Database configuration
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr

# Dealer Info
DEALER_CODE=SZ13qRwU5GtFLj0i_CbEgQ2
DEALER_ID=123456

# UI settings
DEVICE_PAGE_SIZE=25

# Debugging toggle (true or false)
DEBUG_MODE=true


==== TEXT FILE: ./.github/workflows/deploy.yml ====
Size: 1943 bytes
Last Modified: Wed, Jun 11, 2025 12:47:49 PM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File in Root
        # This command creates 'version.js' directly in the root of the checked-out repository.
        run: |
          echo "window.appVersion = \"0.0.0.${{ github.run_number }}\";" > version.js

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          # IMPORTANT: Use a GitHub Secret for your password in a real-world scenario!
          # For this non-production example, it's hardcoded as per your instruction.
          password: Deploy123!
          protocol: ftp
          port: 21

          # Deploy everything from the root of the checked-out repository
          local-dir: ./
          # Deploy to the root directory of the FTP server
          server-dir: /

          # CAUTION: This will delete EVERYTHING on the server-dir before uploading!
          dangerous-clean-slate: true

          exclude: |
            .git/
            .github/ # Exclude GitHub Actions workflow files and their directories
            # Add any other files/directories you do NOT want to deploy from your repository root.
            # Example: node_modules/
            # Example: .env.development

          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo "### DEPLOYMENT SUMMARY ###"
          echo "- Version: 0.0.0.${{ github.run_number }}"
          echo "- FTP Server: ftp.resolutionsbydesign.us"
          echo "- Server Directory: /"
          echo "- Local Directory: ./"


==== TEXT FILE: ./AllEndpoints.json ====
Size: 2184874 bytes
Last Modified: Tue, Jun 10, 2025 10:23:48 AM
----------------------------------------
{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Communication/GetPortalReleaseNotes": {
      "get": {
        "tags": [
          "CommunicationApi"
        ],
        "summary": "Get Portal Release Notes",
        "operationId": "Communication/GetPortalReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[PortalReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Consumable/List": {
      "post": {
        "tags": [
          "ConsumableApi"
        ],
        "summary": "List all devices consumables",
        "operationId": "Consumable/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConsumablesDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/List": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the offices.",
        "operationId": "CostCenter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCostCentersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Get": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the office.",
        "operationId": "CostCenter/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Creates the office.",
        "operationId": "CostCenter/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Update": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Updates the office.",
        "operationId": "CostCenter/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Delete": {
      "delete": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Delete  office.",
        "operationId": "CostCenter/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns counters",
        "operationId": "Counter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListDetailed": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/ListDetailed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersDetailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDetailedDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListBlended": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns blended counters",
        "operationId": "Counter/ListBlended",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
  


==== TEXT FILE: ./app_structure_20250611_135342.json ====
Size: 7255252 bytes
Last Modified: Wed, Jun 11, 2025  1:54:13 PM
----------------------------------------
[
{
    "path": ".DS_Store",
    "name": ".DS_Store",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./.DS_Store 2a74c93000000000 255 3e72eff 4096 4096 62093311 40542239 40542239 18446744073709551615 -1
2025-06-10 07:50:32",
    "size_bytes":   File: "./.DS_Store"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 40542239   Available: 40542239
Inodes: Total: 18446744073709551615 Free: -1
6148,
    "mime_type": "application/octet-stream",
    "file_type": "Binary",
    "content": "[Binary file - content skipped]"
}
,
{
    "path": ".env",
    "name": ".env",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./.env 2a74c93000000000 255 3e72eff 4096 4096 62093311 40542254 40542254 18446744073709551615 -1
2025-06-11 11:17:59",
    "size_bytes":   File: "./.env"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 40542254   Available: 40542254
Inodes: Total: 18446744073709551615 Free: -1
508,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "CLIENT_ID=9AT9j4UoU2BgLEqmiYCz
CLIENT_SECRET=9gTbAKBCZe1ftYQbLbq9
USERNAME=dashboard
PASSWORD=d@$hpa$$2024
SCOPE=account
TOKEN_URL=https://api.abassetmanagement.com/api3/token
BASE_URL=https://api.abassetmanagement.com/api3/

# Database configuration
DB_HOST=localhost
DB_NAME=resolut7_mpsm
DB_USER=resolut7_mpsm
DB_PASS=MP$M_Nr0lr

# Dealer Info
DEALER_CODE=SZ13qRwU5GtFLj0i_CbEgQ2
DEALER_ID=123456

# UI settings
DEVICE_PAGE_SIZE=25

# Debugging toggle (true or false)
DEBUG_MODE=true"
}
,
{
    "path": ".github/workflows/deploy.yml",
    "name": "deploy.yml",
    "directory": ".github/workflows",
    "creation_date": "",
    "modification_date": "./.github/workflows/deploy.yml 2a74c93000000000 255 3e72eff 4096 4096 62093311 40542254 40542254 18446744073709551615 -1
2025-06-11 12:47:49",
    "size_bytes":   File: "./.github/workflows/deploy.yml"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 40542254   Available: 40542254
Inodes: Total: 18446744073709551615 Free: -1
1943,
    "mime_type": "text/plain",
    "file_type": "Text",
    "content": "name: FTP Deploy - Final Lean

on:
  push:
    branches: [\"main\"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔢 Generate Version File in Root
        # This command creates 'version.js' directly in the root of the checked-out repository.
        run: |
          echo \"window.appVersion = \\\"0.0.0.${{ github.run_number }}\\\";\" > version.js

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          # IMPORTANT: Use a GitHub Secret for your password in a real-world scenario!
          # For this non-production example, it's hardcoded as per your instruction.
          password: Deploy123!
          protocol: ftp
          port: 21

          # Deploy everything from the root of the checked-out repository
          local-dir: ./
          # Deploy to the root directory of the FTP server
          server-dir: /

          # CAUTION: This will delete EVERYTHING on the server-dir before uploading!
          dangerous-clean-slate: true

          exclude: |
            .git/
            .github/ # Exclude GitHub Actions workflow files and their directories
            # Add any other files/directories you do NOT want to deploy from your repository root.
            # Example: node_modules/
            # Example: .env.development

          log-level: verbose

      - name: 📜 Deployment Completed Report
        run: |
          echo \"### DEPLOYMENT SUMMARY ###\"
          echo \"- Version: 0.0.0.${{ github.run_number }}\"
          echo \"- FTP Server: ftp.resolutionsbydesign.us\"
          echo \"- Server Directory: /\"
          echo \"- Local Directory: ./\""
}
,
{
    "path": "AllEndpoints.json",
    "name": "AllEndpoints.json",
    "directory": ".",
    "creation_date": "",
    "modification_date": "./AllEndpoints.json 2a74c93000000000 255 3e72eff 4096 4096 62093311 40542253 40542253 18446744073709551615 -1
2025-06-10 10:23:48",
    "size_bytes":   File: "./AllEndpoints.json"
    ID: 2a74c93000000000 Namelen: 255     Type: UNKNOWN (0x3e72eff)
Block size: 4096       Fundamental block size: 4096
Blocks: Total: 62093311   Free: 40542253   Available: 40542253
Inodes: Total: 18446744073709551615 Free: -1
2184874,
    "mime_type": "application/json",
    "file_type": "Text",
    "content": "{
  \"swagger\": \"2.0\",
  \"info\": {
    \"version\": \"v1\",
    \"title\": \"Mps Monitor Api\"
  },
  \"host\": \"localhost:34287\",
  \"schemes\": [
    \"https\"
  ],
  \"paths\": {
    \"/Account/GetProfile\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets profile of current authenticated user.\",
        \"operationId\": \"Account/GetProfile\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/RefreshAuthCookie\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/RefreshAuthCookie\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/Object\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Logout\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Logout\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/Object\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/UpdateProfile\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Update profile of current authenticated user.\",
        \"operationId\": \"Account/UpdateProfile\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateProfileRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faData\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faData\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": true,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faDataForProfile\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faDataForProfile\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetPsk2faDataForAccount\": {
      \"get\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/GetPsk2faDataForAccount\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"platform\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"MpsMonitor\",
              \"Katun\",
              \"Olivetti\",
              \"HpSds\",
              \"CloudConnected\",
              \"Ehawk\",
              \"MpsMonitorOld\"
            ]
          },
          {
            \"name\": \"userName\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"password\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"psk2fa\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[Psk2faDataDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Enable2faForAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Enable2faForAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/Enable2faForAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Enable2faForProfile\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/Enable2faForProfile\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/Enable2faForProfileRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/SendOtpEmailForAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"operationId\": \"Account/SendOtpEmailForAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/SendOtpEmailForAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/SetPreferredDealer\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets profile of current authenticated account.\",
        \"operationId\": \"Account/SetPreferredDealer\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/SetPreferredDealerRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetAccount\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets the account.\",
        \"description\": \"\",
        \"operationId\": \"Account/GetAccount\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/GetAccounts\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Gets the accounts.\",
        \"operationId\": \"Account/GetAccounts\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetAccountsRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Create\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Create an account\",
        \"operationId\": \"Account/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Update\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Update an account\",
        \"operationId\": \"Account/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateAccountRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ChangePassword\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Changes the password of the connected account\",
        \"operationId\": \"Account/ChangePassword\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ChangePasswordRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ResetPassword\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Resets the password.\",
        \"operationId\": \"Account/ResetPassword\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ResetPasswordRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ResetPasswordVerifyToken\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Verify the Resets password auth token.\",
        \"operationId\": \"Account/ResetPasswordVerifyToken\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ResetPasswordVerifyTokenRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/ChangeLanguage\": {
      \"post\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"Change language\",
        \"operationId\": \"Account/ChangeLanguage\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/ChangeLanguageRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Delete\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes an account\",
        \"operationId\": \"Account/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/Delete2fa\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes the two factor authentication for a user\",
        \"operationId\": \"Account/Delete2fa\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Account/DeleteProfile2fa\": {
      \"delete\": {
        \"tags\": [
          \"Account\"
        ],
        \"summary\": \"This operation deletes the two factor authentication for a user\",
        \"operationId\": \"Account/DeleteProfile2fa\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/DisableAlertLimits\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/DisableAlertLimits\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/DisableAlertLimitsRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/GetAllLimits\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/GetAllLimits\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"customerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"deviceId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"productId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"alertLimitSource\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"Default\",
              \"Dealer\",
              \"DealerProduct\",
              \"Customer\",
              \"CustomerProduct\",
              \"InstalledProduct\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2SourceDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DealerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetProductList\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetProductList\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the dealer code.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[ProductBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/GetProduct\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/GetProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DealerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/DeleteProduct\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/DeleteProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the DealerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/CreateProduct\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/CreateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Dealer/UpdateProduct\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Dealer/UpdateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2CustomerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/DeleteDefaultForConsumable\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/DeleteDefaultForConsumable\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"customerId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"supplyType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"ManteinanceKit\",
              \"PhotoConductor\",
              \"Toner\"
            ]
          },
          {
            \"name\": \"colorType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"NotAvailable\",
              \"Black\",
              \"Cyan\",
              \"Magenta\",
              \"Yellow\",
              \"Black1\",
              \"Black2\",
              \"Black3\"
            ]
          },
          {
            \"name\": \"maintenanceKitTypeId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"maintenanceKitColorId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetProductList\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetProductList\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the dealer code.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[ProductBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/GetProduct\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/GetProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"customerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the CustomerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/DeleteProduct\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/DeleteProduct\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"customerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the CustomerCode.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/CreateProduct\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/CreateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Customer/UpdateProduct\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Customer/UpdateProduct\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/GetDefault\": {
      \"get\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/GetDefault\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimit2DeviceDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/CreateDefault\": {
      \"post\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/CreateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/UpdateDefault\": {
      \"put\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/UpdateDefault\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit2/Device/DeleteDefaultForConsumable\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimit2Api\"
        ],
        \"operationId\": \"AlertLimit2/Device/DeleteDefaultForConsumable\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"deviceId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"supplyType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"ManteinanceKit\",
              \"PhotoConductor\",
              \"Toner\"
            ]
          },
          {
            \"name\": \"colorType\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\",
            \"enum\": [
              \"NotAvailable\",
              \"Black\",
              \"Cyan\",
              \"Magenta\",
              \"Yellow\",
              \"Black1\",
              \"Black2\",
              \"Black3\"
            ]
          },
          {
            \"name\": \"maintenanceKitTypeId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"maintenanceKitColorId\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Dealer/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get dealers Alert Limit settings\",
        \"operationId\": \"AlertLimit/Dealer/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Dealer/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified dealer\",
        \"operationId\": \"AlertLimit/Dealer/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get customer Alert Limit settings\",
        \"operationId\": \"AlertLimit/Customer/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer\",
        \"operationId\": \"AlertLimit/Customer/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/List\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get dealers Alert Limit settings\",
        \"operationId\": \"AlertLimit/Customer/Product/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AlertLimitCustomerProductDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer and Product\",
        \"operationId\": \"AlertLimit/Customer/Product/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Get\": {
      \"get\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Get device Alert Limit settings\",
        \"operationId\": \"AlertLimit/Device/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AlertLimitBaseDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Update\": {
      \"put\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Set Alert limits for a specified Customer and Product\",
        \"operationId\": \"AlertLimit/Device/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Delete\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"summary\": \"Delete Alert limits\",
        \"operationId\": \"AlertLimit/Customer/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Customer/Product/Delete\": {
      \"post\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"operationId\": \"AlertLimit/Customer/Product/Delete\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/DeleteRequest[KeyValue]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/AlertLimit/Device/Delete\": {
      \"delete\": {
        \"tags\": [
          \"AlertLimitApi\"
        ],
        \"operationId\": \"AlertLimit/Device/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Analytics/GetReportResult\": {
      \"get\": {
        \"tags\": [
          \"Analytics\"
        ],
        \"summary\": \"Get result from a saved report.\",
        \"operationId\": \"Analytics/GetReportResult\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"idReport\",
            \"in\": \"query\",
            \"description\": \"The ID of a saved custom report.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[TabularResultDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Analytics/GetReportFileResult\": {
      \"get\": {
        \"tags\": [
          \"Analytics\"
        ],
        \"summary\": \"Get result as file (Excel, CSV) from a saved report.\",
        \"operationId\": \"Analytics/GetReportFileResult\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\"
        ],
        \"parameters\": [
          {
            \"name\": \"idReport\",
            \"in\": \"query\",
            \"description\": \"The ID of a saved custom report.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"reportFormat\",
            \"in\": \"query\",
            \"description\": \"The export format of the result (Excel, CSV)\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseHttpResponseMessage\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/List\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Get Api Clients for Dealer.\",
        \"operationId\": \"ApiClient/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"dealerCode\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"filterText\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the filter text.\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"pageNumber\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the page number.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"pageRows\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the page rows.\",
            \"required\": true,
            \"type\": \"integer\",
            \"format\": \"int32\"
          },
          {
            \"name\": \"sortColumn\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the sort column.\",
            \"required\": true,
            \"type\": \"string\"
          },
          {
            \"name\": \"sortOrder\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the sort order.\",
            \"required\": true,
            \"type\": \"string\",
            \"enum\": [
              \"Asc\",
              \"Desc\"
            ]
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Get\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Update\": {
      \"put\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[ApiClientUpdateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Create\": {
      \"post\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[ApiClientCreateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[ApiClientDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Delete\": {
      \"delete\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Delete Api Client\",
        \"operationId\": \"ApiClient/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/List\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"Get Api user list\",
        \"operationId\": \"ApiClient/Account/List\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Get\": {
      \"get\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Get\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Update\": {
      \"put\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Update\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Delete\": {
      \"delete\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Delete\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"id\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the identifier.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/ApiClient/Account/Create\": {
      \"post\": {
        \"tags\": [
          \"ApiClientApi\"
        ],
        \"summary\": \"GEt Api Client Detail\",
        \"operationId\": \"ApiClient/Account/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[ApiClientAccountCreateRequest]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AccountApiDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/GetChallengeUrlRedirect\": {
      \"get\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Returns the login url based on the domain specified.\",
        \"operationId\": \"azuread/GetChallengeUrlRedirect\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"returnUrl\",
            \"in\": \"query\",
            \"required\": false,
            \"type\": \"string\"
          },
          {
            \"name\": \"name\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the name.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"type\": \"string\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/GetDealerAzureSettings\": {
      \"get\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Get Azure Ad configuration\",
        \"operationId\": \"azuread/GetDealerAzureSettings\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AzureADDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/GetCustomerAzureSettings\": {
      \"get\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Get Azure Ad customer configuration\",
        \"operationId\": \"azuread/GetCustomerAzureSettings\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"code\",
            \"in\": \"query\",
            \"description\": \"Gets or sets the code.\",
            \"required\": true,
            \"type\": \"string\"
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AzureADDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/CreateAzureDomain\": {
      \"post\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Create the azure domain configuration.\",
        \"operationId\": \"azuread/CreateAzureDomain\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[AzureADDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AzureADDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/azuread/UpdateAzureDomain\": {
      \"put\": {
        \"tags\": [
          \"AzureADApi\"
        ],
        \"summary\": \"Update the azure domain configuration.\",
        \"operationId\": \"azuread/UpdateAzureDomain\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateRequest[AzureADDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[AzureADDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetCustomersContracts\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the customers contracts.\",
        \"operationId\": \"Billing/GetCustomersContracts\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetCustomersContractsRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[CustomerContractDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetDealerInvoicesList\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the dealer to dealer invoices.\",
        \"operationId\": \"Billing/GetDealerInvoicesList\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetDealerInvoicesRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[DealerInvoicesListDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetCustomersInvoicesList\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the customers invoices.\",
        \"operationId\": \"Billing/GetCustomersInvoicesList\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetCustomersInvoicesRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[CustomerInvoiceListDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetCustomerInvoicesList\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the customer invoices.\",
        \"operationId\": \"Billing/GetCustomerInvoicesList\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetCustomerInvoicesRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[InvoiceListDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetDealerInvoice\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the invoice Header and Rows.\",
        \"operationId\": \"Billing/GetDealerInvoice\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetByIdRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[DealerInvoiceDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetCustomerInvoice\": {
      \"post\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Gets the customer invoice Header and Rows\",
        \"operationId\": \"Billing/GetCustomerInvoice\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetByIdRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[InvoiceHeaderDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/GetInvoiceCategories\": {
      \"get\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Get Invoice Categories\",
        \"operationId\": \"Billing/GetInvoiceCategories\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[InvoiceCategoryDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Billing/UpdateCustomerInvoice\": {
      \"patch\": {
        \"tags\": [
          \"Billing\"
        ],
        \"summary\": \"Update Customer Invoice\",
        \"operationId\": \"Billing/UpdateCustomerInvoice\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/UpdateCustomerInvoiceRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/BaseResponse\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Communication/GetPortalReleaseNotes\": {
      \"get\": {
        \"tags\": [
          \"CommunicationApi\"
        ],
        \"summary\": \"Get Portal Release Notes\",
        \"operationId\": \"Communication/GetPortalReleaseNotes\",
        \"consumes\": [],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[PortalReleaseNoteDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/Consumable/List\": {
      \"post\": {
        \"tags\": [
          \"ConsumableApi\"
        ],
        \"summary\": \"List all devices consumables\",
        \"operationId\": \"Consumable/List\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetConsumablesRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/ListResultResponse[ConsumablesDeviceDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/CostCenter/List\": {
      \"post\": {
        \"tags\": [
          \"CostCenter\"
        ],
        \"summary\": \"Gets the offices.\",
        \"operationId\": \"CostCenter/List\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",
          \"application/vnd.ms-excel\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetCostCentersRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/PagedResultResponse[CostCenterDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/CostCenter/Get\": {
      \"post\": {
        \"tags\": [
          \"CostCenter\"
        ],
        \"summary\": \"Gets the office.\",
        \"operationId\": \"CostCenter/Get\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/GetByIdRequest\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$ref\": \"#/definitions/SingleResultResponse[CostCenterDto]\"
            }
          }
        },
        \"deprecated\": false
      }
    },
    \"/CostCenter/Create\": {
      \"post\": {
        \"tags\": [
          \"CostCenter\"
        ],
        \"summary\": \"Creates the office.\",
        \"operationId\": \"CostCenter/Create\",
        \"consumes\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\",
          \"application/x-www-form-urlencoded\"
        ],
        \"produces\": [
          \"application/json\",
          \"text/json\",
          \"application/xml\",
          \"text/xml\"
        ],
        \"parameters\": [
          {
            \"name\": \"request\",
            \"in\": \"body\",
            \"description\": \"The request.\",
            \"required\": true,
            \"schema\": {
              \"$ref\": \"#/definitions/CreateRequest[CostCenterDto]\"
            }
          }
        ],
        \"responses\": {
          \"200\": {
            \"description\": \"OK\",
            \"schema\": {
              \"$


==== TEXT FILE: ./backup.deploy.yml ====
Size: 3250 bytes
Last Modified: Tue, Jun 10, 2025 10:36:20 AM
----------------------------------------
name: FTP Deploy - Final Lean

on:
  push:
    branches: ["main"] # Trigger on pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Run the job on a fresh Ubuntu environment
    timeout-minutes: 15 # Overall job timeout (can be adjusted if deployments are very fast)

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: 🚀 Deploy Website via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0
        with:
          # IMPORTANT: Replace these hardcoded values with GitHub Secrets for production!
          # Go to your repository settings -> Secrets and variables -> Actions
          # Add:
          #   FTP_SERVER: ftp.resolutionsbydesign.us
          #   FTP_USERNAME: mpsm@mpsm.resolutionsbydesign.us
          #   FTP_PASSWORD: YourActualStrongPassword!
          server: ftp.resolutionsbydesign.us
          username: mpsm@mpsm.resolutionsbydesign.us
          password: Deploy123! 
          
          local-dir: ./ # Deploy from the root of your GitHub repository
          # The 'server-directory' should be '/' if your cPanel FTP user's
          # "Home Directory" is already set to the target web root
          # (e.g., /home/resolut7/public_html/mpsm.resolutionsbydesign.us/).
          # This tells the action to deploy INTO the root of your FTP login.
          server-directory: / 
          
          protocol: ftp # Use 'ftps' if your server supports and requires explicit FTPS
          exclude: .git/ # Exclude the .git directory from being uploaded
          log-level: verbose # Keep verbose logging for detailed transfer info
          delete: true # Delete files on the server that are not in the local repository
          timeout: 120 # Timeout for the deploy operation in seconds (2 minutes)

      - name: 📜 Deployment Completed Report
        # This step provides a summary of the deployment outcome.
        run: |
          echo "### DEPLOYMENT SUMMARY ###" > report.md
          echo "- Deployment Method: SamKirkland/FTP-Deploy-Action" >> report.md
          echo "- Local repository root (./) deployed to: FTP account's home directory" >> report.md
          echo "  (Expected server path: /home/resolut7/public_html/mpsm.resolutionsbydesign.us/)" >> report.md
          echo "- Website URL: https://mpsm.resolutionsbydesign.us" >> report.md
          echo "" >> report.md
          echo "---" >> report.md
          echo "**Next Steps:**" >> report.md
          echo "1. **Verify Live Site:** Check https://mpsm.resolutionsbydesign.us in your browser." >> report.md
          echo "2. **IMPORTANT: Secure Credentials!** Move your FTP server, username, and password into GitHub Repository Secrets." >> report.md
          echo "   (Go to Settings -> Secrets and variables -> Actions in your GitHub repo)" >> report.md
          echo "3. **Clear Cache:** If changes aren't visible, try clearing your browser cache or any server-side caching." >> report.md
          echo "4. **GreenGeeks Support:** If issues persist, contact GreenGeeks support with a link to this successful workflow run." >> report.md
          
          cat report.md



==== PHP FILE: ./cards/printer_status_card.php ====
Size: 5550 bytes
Last Modified: Wed, Jun 11, 2025 12:40:19 PM
----------------------------------------
<?php
/**
 * MPSM Dashboard - Card: Printer Status
 *
 * This file is a self-contained component representing the "Printer Status" card.
 * It displays a summary of printer statuses (online, offline, warning, error).
 *
 * This file expects the following variables to be available (passed via render_card):
 * - $customer_id (int|null): The ID of the currently selected customer.
 * - $card_title (string): The title to display for this card.
 * - $status_summary (array): An associative array with counts for different statuses.
 * Example: ['online' => 15, 'offline' => 2, 'warning' => 3, 'error' => 1]
 *
 * Debugging Philosophy:
 * Every piece of data used by the card should be logged upon its inclusion.
 * This helps verify that the correct data is being passed and processed.
 */

// Ensure variables are defined, providing defaults for robustness.
$customer_id = $customer_id ?? 'N/A';
$card_title = $card_title ?? 'Printer Status Summary';
$status_summary = $status_summary ?? [
    'online' => 0,
    'offline' => 0,
    'warning' => 0,
    'error' => 0,
    'unknown' => 0 // Add unknown for robustness
];

debug_log("Rendering Printer Status Card. Title: '$card_title', Customer ID: $customer_id", 'DEBUG');
debug_log("Printer Status Data: " . json_encode($status_summary), 'DEBUG');

// Calculate total printers for display
$total_printers = array_sum($status_summary);

?>
<div class="card printer-status-card">
    <h3><?php echo sanitize_html($card_title); ?></h3>
    <?php if ($customer_id != 'N/A'): ?>
        <p class="card-subtitle">For Customer ID: <strong><?php echo sanitize_html($customer_id); ?></strong></p>
    <?php else: ?>
        <p class="card-subtitle">No customer selected.</p>
    <?php endif; ?>

    <div class="status-summary-grid">
        <div class="status-item online">
            <span class="count"><?php echo sanitize_html($status_summary['online']); ?></span>
            <span class="label">Online</span>
        </div>
        <div class="status-item offline">
            <span class="count"><?php echo sanitize_html($status_summary['offline']); ?></span>
            <span class="label">Offline</span>
        </div>
        <div class="status-item warning">
            <span class="count"><?php echo sanitize_html($status_summary['warning']); ?></span>
            <span class="label">Warning</span>
        </div>
        <div class="status-item error">
            <span class="count"><?php echo sanitize_html($status_summary['error']); ?></span>
            <span class="label">Error</span>
        </div>
        <?php if (isset($status_summary['unknown'])): ?>
            <div class="status-item unknown">
                <span class="count"><?php echo sanitize_html($status_summary['unknown']); ?></span>
                <span class="label">Unknown</span>
            </div>
        <?php endif; ?>
    </div>

    <p class="total-printers">Total Printers: <strong><?php echo sanitize_html($total_printers); ?></strong></p>

    <div class="card-actions">
        <a href="#" class="button small-button view-details-button" title="View detailed printer list">View Details</a>
    </div>

    <?php debug_log("Finished rendering Printer Status Card.", 'DEBUG'); ?>
</div>

<style>
/* Card-specific styles for Printer Status Card */
.printer-status-card {
    /* Specific overrides if needed, though general card styles handle most */
}

.printer-status-card .status-summary-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    gap: 15px;
    margin-top: 15px;
    margin-bottom: 20px;
    padding: 10px;
    background-color: rgba(0,0,0,0.1); /* Slight darker background for the grid */
    border-radius: 8px;
}

.printer-status-card .status-item {
    text-align: center;
    padding: 10px 5px;
    border-radius: 8px;
    background-color: var(--bg-secondary-dark); /* Use secondary background for contrast */
    color: var(--text-primary);
    border: 1px solid var(--border-color);
}

.printer-status-card .status-item .count {
    display: block;
    font-size: 1.8rem;
    font-weight: bold;
    margin-bottom: 5px;
}

.printer-status-card .status-item .label {
    font-size: 0.9rem;
    color: var(--text-secondary);
}

/* Specific coloring for status items */
.printer-status-card .status-item.online .count { color: limegreen; }
.printer-status-card .status-item.offline .count { color: #808080; /* Dark grey */ }
.printer-status-card .status-item.warning .count { color: var(--highlight-yellow); }
.printer-status-card .status-item.error .count { color: var(--highlight-magenta); }
.printer-status-card .status-item.unknown .count { color: orange; }


.printer-status-card .total-printers {
    text-align: right;
    font-size: 1.1rem;
    color: var(--text-primary);
    font-weight: bold;
    margin-top: 10px;
}

.printer-status-card .card-actions {
    margin-top: auto; /* Push actions to the bottom */
    text-align: right;
}

.printer-status-card .small-button {
    padding: 8px 15px;
    font-size: 0.9rem;
    background-color: var(--highlight-key); /* Use a darker highlight for buttons */
    color: #fff;
    border: 1px solid var(--highlight-key);
    border-radius: 5px;
}

.printer-status-card .small-button:hover {
    background-color: var(--bg-primary); /* Darker on hover */
    border-color: var(--highlight-cyan);
    color: var(--highlight-cyan);
}
</style>


==== PHP FILE: ./cards/toner_levels_card.php ====
Size: 5171 bytes
Last Modified: Wed, Jun 11, 2025 12:40:47 PM
----------------------------------------
<?php
/**
 * MPSM Dashboard - Card: Toner Levels
 *
 * This file is a self-contained component for displaying toner levels.
 * It visualizes toner levels for different colors and highlights low toner.
 *
 * This file expects the following variables to be available (passed via render_card):
 * - $customer_id (int|null): The ID of the currently selected customer.
 * - $card_title (string): The title to display for this card.
 * - $toner_data (array): An associative array with toner percentages for each color.
 * Example: ['black' => 75, 'cyan' => 60, 'magenta' => 40, 'yellow' => 20]
 * - $low_threshold (int): The percentage below which a toner level is considered "low".
 *
 * Debugging Philosophy:
 * Log the received toner data and threshold to ensure correct values are used for rendering.
 */

// Ensure variables are defined, providing defaults for robustness.
$customer_id = $customer_id ?? 'N/A';
$card_title = $card_title ?? 'Toner Levels Overview';
$toner_data = $toner_data ?? [
    'black' => 0,
    'cyan' => 0,
    'magenta' => 0,
    'yellow' => 0
];
$low_threshold = $low_threshold ?? 20; // Default low threshold

debug_log("Rendering Toner Levels Card. Title: '$card_title', Customer ID: $customer_id", 'DEBUG');
debug_log("Toner Data: " . json_encode($toner_data) . ", Low Threshold: $low_threshold%", 'DEBUG');

?>
<div class="card toner-levels-card">
    <h3><?php echo sanitize_html($card_title); ?></h3>
    <?php if ($customer_id != 'N/A'): ?>
        <p class="card-subtitle">For Customer ID: <strong><?php echo sanitize_html($customer_id); ?></strong></p>
    <?php else: ?>
        <p class="card-subtitle">No customer selected.</p>
    <?php endif; ?>

    <div class="toner-bars">
        <?php foreach ($toner_data as $color => $level):
            $level = sanitize_int($level); // Ensure level is an integer
            $level_class = '';
            if ($level <= $low_threshold) {
                $level_class = 'low-toner';
                debug_log("Toner for $color is low: $level%", 'WARNING');
            }
            ?>
            <div class="toner-item">
                <span class="toner-color-label <?php echo sanitize_html($color); ?>"><?php echo sanitize_html(ucfirst($color)); ?></span>
                <div class="toner-bar-container">
                    <div class="toner-bar <?php echo sanitize_html($level_class); ?>" style="width: <?php echo $level; ?>%;"></div>
                    <span class="toner-percentage"><?php echo $level; ?>%</span>
                </div>
            </div>
        <?php endforeach; ?>
    </div>

    <div class="card-actions">
        <a href="#" class="button small-button order-toner-button" title="Order new toner cartridges">Order Toner</a>
    </div>

    <?php debug_log("Finished rendering Toner Levels Card.", 'DEBUG'); ?>
</div>

<style>
/* Card-specific styles for Toner Levels Card */
.toner-levels-card {
    /* Specific overrides if needed */
}

.toner-bars {
    margin-top: 15px;
    margin-bottom: 20px;
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.toner-item {
    display: flex;
    align-items: center;
    gap: 10px;
}

.toner-color-label {
    width: 60px; /* Fixed width for labels */
    font-weight: bold;
    text-align: right;
    color: var(--text-secondary);
    text-transform: uppercase;
    font-size: 0.85rem;
}

/* Specific color labels */
.toner-color-label.black { color: #333; }
.toner-color-label.cyan { color: var(--highlight-cyan); }
.toner-color-label.magenta { color: var(--highlight-magenta); }
.toner-color-label.yellow { color: var(--highlight-yellow); }

.toner-bar-container {
    flex-grow: 1; /* Take remaining width */
    height: 20px;
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 10px;
    overflow: hidden;
    position: relative;
}

.toner-bar {
    height: 100%;
    background-color: limegreen; /* Default for healthy levels */
    border-radius: 10px;
    transition: width 0.5s ease-out, background-color 0.3s ease;
    position: relative;
    z-index: 1;
}

.toner-bar.low-toner {
    background-color: var(--highlight-magenta); /* Highlight low toner */
    box-shadow: 0 0 8px rgba(var(--highlight-magenta), 0.5); /* Glow for low toner */
}

.toner-bar-container .toner-percentage {
    position: absolute;
    right: 10px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-primary);
    font-size: 0.8rem;
    font-weight: bold;
    z-index: 2; /* Ensure percentage is above the bar */
    text-shadow: 0 0 2px rgba(0,0,0,0.5); /* readability */
}

.toner-levels-card .card-actions {
    margin-top: auto; /* Push actions to the bottom */
    text-align: right;
}

.toner-levels-card .order-toner-button {
    background: linear-gradient(45deg, var(--highlight-yellow), var(--highlight-key));
    color: var(--bg-primary-dark);
}

.toner-levels-card .order-toner-button:hover {
    background: linear-gradient(45deg, var(--highlight-key), var(--highlight-yellow));
    color: var(--highlight-yellow);
}
</style>


==== TEXT FILE: ./collectdata.sh ====
Size: 5860 bytes
Last Modified: Wed, Jun 11, 2025  8:22:20 AM
----------------------------------------
#!/bin/bash

# Combined Web Application Code Collector
# Outputs both JSON structure and readable text content

# Configuration
JSON_OUTPUT="app_structure_$(date +'%Y%m%d_%H%M%S').json"
TEXT_OUTPUT="app_contents_$(date +'%Y%m%d_%H%M%S').txt"

# Files to include full content for
FULL_EXTENSIONS=("php" "html" "htm" "css" "js" "json" "xml" "md" "txt" "env" "gitignore" "htaccess" "sh")
MAX_PREVIEW_SIZE=5000  # 5KB previews for other text files

# Directories to exclude
EXCLUDE_DIRS=("vendor" "node_modules" ".git" ".idea" "build" "dist" "cache" "logs")

# Binary extensions to skip content for
EXCLUDE_EXT=("png" "jpg" "jpeg" "gif" "svg" "ico" "woff" "woff2" "ttf" "eot" "pdf" "zip" "tar.gz" "mp3" "mp4" "avi" "mov")

# Helper functions
escape_json() {
    sed 's/\\/\\\\/g; s/"/\\"/g; s/\t/\\t/g; s/\r/\\r/g; s/\n/\\n/g'
}

is_text_file() {
    file -b --mime-encoding "$1" | grep -qvi 'binary'
}

should_exclude() {
    local file="$1"
    
    # Check excluded directories
    for dir in "${EXCLUDE_DIRS[@]}"; do
        if [[ "$file" == *"/$dir/"* ]]; then
            return 0
        fi
    done
    
    # Check excluded extensions
    local extension="${file##*.}"
    for ext in "${EXCLUDE_EXT[@]}"; do
        if [[ "${extension,,}" == "${ext,,}" ]]; then
            return 0
        fi
    done
    
    return 1
}

# Generate JSON structure
echo "Generating JSON structure..."
echo "[" > "$JSON_OUTPUT"
first_entry=true

find . -type f -print0 | while IFS= read -r -d '' file; do
    if should_exclude "$file"; then
        continue
    fi

    FILE_SIZE=$(stat -f '%z' "$file" 2>/dev/null || stat -c '%s' "$file")

    CREATION_DATE=$(stat -f '%B' "$file" 2>/dev/null || stat -c '%W' "$file" 2>/dev/null)
    if [[ "$CREATION_DATE" -le 0 || -z "$CREATION_DATE" ]]; then
        CREATION_DATE="N/A"
    else
        CREATION_DATE=$(date -r "$CREATION_DATE" '+%Y-%m-%dT%H:%M:%S' 2>/dev/null || date -d @"$CREATION_DATE" '+%Y-%m-%dT%H:%M:%S')
    fi

    MOD_DATE=$(stat -f '%Sm' -t '%Y-%m-%dT%H:%M:%S' "$file" 2>/dev/null || stat -c '%y' "$file" | cut -d'.' -f1)

    MIME_TYPE=$(file --mime-type -b "$file")
    FILE_TYPE=$(echo "$MIME_TYPE" | grep -qi 'text\|json\|xml\|script' && echo "Text" || echo "Binary")

    EXT="${file##*.}"
    INCLUDE_FULL=false
    for ext in "${FULL_EXTENSIONS[@]}"; do
        if [[ "${EXT,,}" == "$ext" ]]; then
            INCLUDE_FULL=true
            break
        fi
    done

    CONTENT=""
    if [[ "$FILE_TYPE" == "Text" ]]; then
        if [[ "$INCLUDE_FULL" == true ]]; then
            CONTENT=$(cat "$file" | escape_json)
        else
            CONTENT=$(head -c $MAX_PREVIEW_SIZE "$file" | escape_json)
        fi
    else
        CONTENT="[Binary file - content skipped]"
    fi

    if [[ "$first_entry" == false ]]; then
        echo "," >> "$JSON_OUTPUT"
    else
        first_entry=false
    fi

    cat <<EOF >> "$JSON_OUTPUT"
{
    "path": "$(echo "${file#./}" | escape_json)",
    "name": "$(basename "$file" | escape_json)",
    "directory": "$(dirname "${file#./}" | escape_json)",
    "creation_date": "$CREATION_DATE",
    "modification_date": "$MOD_DATE",
    "size_bytes": $FILE_SIZE,
    "mime_type": "$MIME_TYPE",
    "file_type": "$FILE_TYPE",
    "content": "$CONTENT"
}
EOF
done

echo "]" >> "$JSON_OUTPUT"

# Generate readable text output
echo "Generating readable text output..."
{
    echo "WEB APPLICATION CONTENT COLLECTION"
    echo "Generated: $(date)"
    echo "----------------------------------------"
    echo ""
    
    find . -type f | while read -r file; do
        if should_exclude "$file"; then
            continue
        fi
        
        EXT="${file##*.}"
        
        # Special handling for important files
        if [[ "${EXT,,}" == "php" ]]; then
            echo "==== PHP FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        if [[ "${EXT,,}" == "js" || "${EXT,,}" == "css" || "${EXT,,}" == "html" || "${EXT,,}" == "htm" ]]; then
            echo "==== ${EXT^^} FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        if [[ "${EXT,,}" == "env" || "${EXT,,}" == "gitignore" || "${EXT,,}" == "htaccess" ]]; then
            echo "==== CONFIG FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        # For other files, check if they're text
        if is_text_file "$file"; then
            echo "==== TEXT FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            head -c 100000 "$file"  # Show first 100KB
            echo -e "\n\n"
        else
            echo "==== BINARY FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "[Binary content not displayed]"
            echo -e "\n"
        fi
    done
} > "$TEXT_OUTPUT"

echo "Collection complete!"
echo "1. JSON structure saved to: $JSON_OUTPUT"
echo "2. Readable text content saved to: $TEXT_OUTPUT"


==== TEXT FILE: ./collect_files.sh ====
Size: 2180 bytes
Last Modified: Wed, Jun 11, 2025 10:01:20 AM
----------------------------------------
#!/bin/bash

# Smart PHP Project File Collector
OUTPUT_FILE="php_project_contents_$(date +'%Y%m%d_%H%M%S').txt"

# Configure exclusions (add more as needed)
EXCLUDE_DIRS=("vendor" "node_modules" ".git" ".idea" "build" "dist")
EXCLUDE_EXT=("png" "jpg" "jpeg" "gif" "svg" "ico" "woff" "woff2" "ttf" "eot" "pdf" "zip" "tar.gz")

# Better text file detection
is_text_file() {
    file -b --mime-encoding "$1" | grep -qvi 'binary'
}

# Start output
{
    echo "PHP PROJECT CONTENT COLLECTION"
    echo "Generated: $(date)"
    echo "----------------------------------------"
    echo ""
    
    find . -type f | while read -r file; do
        # Skip excluded directories
        for dir in "${EXCLUDE_DIRS[@]}"; do
            if [[ "$file" == *"/$dir/"* ]]; then
                continue 2
            fi
        done
        
        # Skip excluded extensions
        extension="${file##*.}"
        for ext in "${EXCLUDE_EXT[@]}"; do
            if [[ "${extension,,}" == "${ext,,}" ]]; then
                continue 2
            fi
        done
        
        # Special handling for PHP files - always include
        if [[ "${file##*.}" == "php" ]]; then
            echo "==== PHP FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            cat "$file"
            echo -e "\n\n"
            continue
        fi
        
        # For other files, check if they're text
        if is_text_file "$file"; then
            echo "==== TEXT FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "----------------------------------------"
            head -c 100000 "$file"  # Show first 100KB
            echo -e "\n\n"
        else
            echo "==== BINARY FILE: $file ===="
            echo "Size: $(stat -c%s "$file") bytes"
            echo "Last Modified: $(date -r "$file")"
            echo "[Binary content not displayed]"
            echo -e "\n"
        fi
    done
} > "$OUTPUT_FILE"

echo "Collection complete! Output saved to $OUTPUT_FILE" 


==== PHP FILE: ./config.php ====
Size: 9519 bytes
Last Modified: Wed, Jun 11, 2025 12:51:28 PM
----------------------------------------
<?php
/**
 * MPSM Dashboard - Configuration File
 *
 * This file contains all global configuration settings for the MPSM Dashboard.
 * It's the central place to manage environment variables, paths, debug modes,
 * and other essential settings that control the application's behavior.
 *
 * All settings are heavily commented to provide clear understanding of their purpose.
 *
 * Debugging Philosophy:
 * Every configuration option related to debugging should be clearly defined here.
 * If something isn't working, the first place to check should be the debug settings.
 */

// --- General Application Settings ---

/**
 * @var string APP_NAME
 * A user-friendly name for the application. Used in titles and headers.
 */
define('APP_NAME', 'MPSM Dashboard');

/**
 * @var string APP_VERSION
 * Current version of the dashboard. Useful for caching busting and debugging.
 */
define('APP_VERSION', '0.1.0-alpha');

/**
 * @var string APP_BASE_PATH
 * The absolute file path to the root directory of the application.
 * This is crucial for including files securely and reliably, regardless of
 * where the script is executed or the URL it's accessed from.
 * Using __DIR__ ensures this path is always relative to this config file itself.
 */
define('APP_BASE_PATH', __DIR__ . DIRECTORY_SEPARATOR); // Ensures trailing slash for consistent path concatenation.

// --- Debugging Settings ---

/**
 * @var bool DEBUG_MODE
 * Enables or disables the global debug mode for the application.
 *
 * When true:
 * - Detailed error messages might be displayed (if error_reporting is also configured).
 * - The debug panel will be visible (unless specifically hidden by other settings).
 * - More verbose logging will occur.
 * - Performance might be slightly impacted due to increased logging and checks.
 *
 * When false:
 * - Production-ready mode. Errors should be logged but not displayed to users.
 * - Debug panel will be hidden.
 * - Minimal logging for performance.
 *
 * ALWAYS set to false in a production environment for security and performance.
 */
define('DEBUG_MODE', true);

/**
 * @var bool DEBUG_PANEL_ENABLED
 * Controls the visibility of the dedicated debug panel in the UI.
 * This can be independent of DEBUG_MODE. For instance, DEBUG_MODE might be true
 * (for logging) but the panel hidden for a cleaner UI during testing.
 */
define('DEBUG_PANEL_ENABLED', true);

/**
 * @var string DEBUG_LOG_FILE
 * The path to the file where debug messages will be logged.
 * Ensure this directory is writable by the web server.
 * If null or empty, logging might be directed to PHP's error log or stdout
 * depending on the `debug_log_to_file` setting.
 */
define('DEBUG_LOG_FILE', APP_BASE_PATH . 'logs' . DIRECTORY_SEPARATOR . 'debug.log');

/**
 * @var bool DEBUG_LOG_TO_FILE
 * If true, debug messages will be written to DEBUG_LOG_FILE.
 * If false, debug messages will only be echoed to the debug panel (if enabled).
 */
define('DEBUG_LOG_TO_FILE', true);

/**
 * @var int MAX_DEBUG_LOG_SIZE_MB
 * Maximum size of the debug log file in megabytes before it's truncated or rotated.
 * Set to 0 for no size limit (not recommended for long-running applications).
 */
define('MAX_DEBUG_LOG_SIZE_MB', 5);

/**
 * @var array DEBUG_LOG_LEVELS
 * Defines the types of messages that will be logged.
 * Each level (e.g., 'INFO', 'WARNING', 'ERROR') can be enabled/disabled.
 * This allows fine-grained control over what gets written to the log.
 */
define('DEBUG_LOG_LEVELS', [
    'INFO'    => true,    // General informational messages
    'WARNING' => true,    // Non-critical issues
    'ERROR'   => true,    // Critical errors that prevent functionality
    'DEBUG'   => true,    // Very verbose messages, useful for tracing execution flow
    'SECURITY' => true    // Security-related events (e.g., failed logins, suspicious activity)
]);

// --- Paths Configuration ---

/**
 * @var string BASE_URL
 * The base URL for the application. Used for generating absolute URLs
 * for CSS, JS, images, etc. If the app is in a subdirectory (e.g., example.com/dashboard),
 * this should be set accordingly. For root, use '/'.
 * Automatically determined if possible, but can be overridden.
 */
if (isset($_SERVER['HTTPS']) && $_SERVER['HTTPS'] === 'on') {
    $protocol = 'https://';
} else {
    $protocol = 'http://';
}
$host = $_SERVER['HTTP_HOST'];
$uri = rtrim(dirname($_SERVER['PHP_SELF']), '/\\'); // Get the current directory path relative to the document root
define('BASE_URL', $protocol . $host . $uri . '/');

/**
 * @var string CSS_PATH
 * Relative path to the CSS directory.
 */
define('CSS_PATH', 'css/');

/**
 * @var string JS_PATH
 * Relative path to the JavaScript directory.
 */
define('JS_PATH', 'js/');

/**
 * @var string VIEWS_PATH
 * Absolute path to the directory containing view files.
 * This helps prevent directory traversal vulnerabilities and ensures correct file inclusion.
 */
define('VIEWS_PATH', APP_BASE_PATH . 'views' . DIRECTORY_SEPARATOR);

/**
 * @var string CARDS_PATH
 * Absolute path to the directory containing individual card files.
 * This is where the dashboard will look for discoverable card components.
 */
define('CARDS_PATH', APP_BASE_PATH . 'cards' . DIRECTORY_SEPARATOR);

/**
 * @var string INCLUDES_PATH
 * Absolute path to the directory containing common includes.
 */
define('INCLUDES_PATH', APP_BASE_PATH . 'includes' . DIRECTORY_SEPARATOR);

// --- Database Configuration (Placeholders) ---
// Note: Actual credentials should ideally be stored outside the web root
// and loaded via environment variables or a secure configuration management system.
// For this skeleton, we'll keep them here as placeholders.

/**
 * @var string DB_HOST
 * Database host.
 */
define('DB_HOST', 'localhost');

/**
 * @var string DB_NAME
 * Database name.
 */
define('DB_NAME', 'mpsm_dashboard_db');

/**
 * @var string DB_USER
 * Database user.
 */
define('DB_USER', 'db_user');

/**
 * @var string DB_PASS
 * Database password.
 */
define('DB_PASS', 'db_password');

// --- MPS Monitor API Configuration (Placeholders) ---
// These are illustrative and will need to be replaced with actual API keys/secrets
// once you integrate with the MPS Monitor API.

/**
 * @var string MPSM_API_KEY
 * Your MPS Monitor API Key.
 */
define('MPSM_API_KEY', 'your_mps_monitor_api_key_here');

/**
 * @var string MPSM_API_SECRET
 * Your MPS Monitor API Secret.
 */
define('MPSM_API_SECRET', 'your_mps_monitor_api_secret_here');

/**
 * @var string MPSM_API_BASE_URL
 * The base URL for the MPS Monitor API.
 * This might vary based on your region or API version.
 */
define('MPSM_API_BASE_URL', 'https://api.mpsmonitor.com/v1/'); // Example URL

// --- Error Handling and Reporting ---

/**
 * Set PHP error reporting level.
 * E_ALL: Report all errors, warnings, and notices.
 * E_ALL & ~E_NOTICE & ~E_STRICT: All errors except notices and strict standards warnings.
 *
 * In production, you typically set this to 0 and rely on logging.
 */
if (DEBUG_MODE) {
    error_reporting(E_ALL);
    ini_set('display_errors', 'On'); // Display errors in development/debug
} else {
    error_reporting(0); // No errors displayed to the user
    ini_set('display_errors', 'Off');
}

/**
 * Set default timezone to avoid date/time errors.
 * IMPORTANT: Choose the timezone relevant to your server or target audience.
 */
date_default_timezone_set('America/New_York'); // Example: New York timezone

// --- Session Management ---
// Start a session to store user-specific data, like current view, customer selection, etc.
// Ensure session_start() is called only once per request.
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}

// Ensure the logs directory exists
if (DEBUG_LOG_TO_FILE && !is_dir(dirname(DEBUG_LOG_FILE))) {
    mkdir(dirname(DEBUG_LOG_FILE), 0755, true);
    // Log this action if possible, though it's a bootstrap step.
}

// --- Pre-flight Configuration Checks ---
// These checks ensure essential directories exist.
// Replaced trigger_error(E_USER_ERROR) with exit() for PHP 8.4+ compatibility.
// This will halt execution with a clear message if a critical path is missing.
if (DEBUG_MODE) {
    if (!is_dir(APP_BASE_PATH)) {
        exit("Configuration error: APP_BASE_PATH is not defined or is not a valid directory. Expected: " . APP_BASE_PATH);
    }
    if (!is_dir(VIEWS_PATH)) {
        exit("Configuration error: VIEWS_PATH is not defined or is not a valid directory. Expected: " . VIEWS_PATH);
    }
    if (!is_dir(CARDS_PATH)) {
        exit("Configuration error: CARDS_PATH is not defined or is not a valid directory. Expected: " . CARDS_PATH);
    }
    if (!is_dir(INCLUDES_PATH)) {
        // This is the specific line that was causing your fatal error with trigger_error
        exit("Configuration error: INCLUDES_PATH is not defined or is not a valid directory. Expected: " . INCLUDES_PATH);
    }
    // You might also want to check if DEBUG_LOG_FILE's directory is writable if DEBUG_LOG_TO_FILE is true
    // (though mkdir will attempt to create it if it doesn't exist).
    if (DEBUG_LOG_TO_FILE && !is_writable(dirname(DEBUG_LOG_FILE))) {
         exit("Configuration error: Log directory is not writable. Expected: " . dirname(DEBUG_LOG_FILE));
    }
}

// End of config.php


==== CSS FILE: ./css/style.css ====
Size: 16781 bytes
Last Modified: Wed, Jun 11, 2025 12:37:23 PM
----------------------------------------
/*
 * MPSM Dashboard - Main Stylesheet
 *
 * This file defines the visual styles for the entire MPSM Dashboard.
 * It includes base styles, layout definitions, component styling, and theme variables
 * for dark/light mode and CMYK highlights.
 *
 * Glassmorphism: Achieved using `backdrop-filter: blur()`, `rgba` colors, and subtle borders.
 * CMYK Highlights: Defined as CSS variables for easy modification and theme switching.
 */

/* --- CSS Variables for Theming --- */
:root {
    /* Base Colors - Dark Theme (Default) */
    --bg-primary-dark: #1a1a1a;        /* Dark background */
    --bg-secondary-dark: #2a2a2a;      /* Slightly lighter dark background for elements */
    --text-primary-dark: #e0e0e0;      /* Light text */
    --text-secondary-dark: #a0a0a0;    /* Grey text */
    --border-color-dark: rgba(255, 255, 255, 0.1); /* Subtle white border for glassmorphism */
    --glass-bg-dark: rgba(42, 42, 42, 0.6); /* Glassmorphic background */
    --glass-shadow-dark: rgba(0, 0, 0, 0.3); /* Shadow for glassmorphism */

    /* Base Colors - Light Theme */
    --bg-primary-light: #f0f0f0;       /* Light background */
    --bg-secondary-light: #ffffff;     /* White background for elements */
    --text-primary-light: #333333;     /* Dark text */
    --text-secondary-light: #666666;   /* Grey text */
    --border-color-light: rgba(0, 0, 0, 0.1); /* Subtle black border for glassmorphism */
    --glass-bg-light: rgba(255, 255, 255, 0.6); /* Glassmorphic background */
    --glass-shadow-light: rgba(0, 0, 0, 0.1); /* Shadow for glassmorphism */

    /* CMYK Highlight Colors */
    --highlight-cyan: #00bcd4;         /* Cyan */
    --highlight-magenta: #e91e63;      /* Magenta */
    --highlight-yellow: #ffeb3b;       /* Yellow */
    --highlight-key: #212121;          /* Key (Black - used for subtle elements) */

    /* Glassmorphism Properties */
    --glass-blur: 10px;
    --glass-border-width: 1px;
    --glass-border-radius: 12px;

    /* Transition for theme switching */
    --theme-transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease, backdrop-filter 0.3s ease;
}

/* --- Theme Specific Variables (Managed by JavaScript) --- */
body.theme-dark {
    --bg-primary: var(--bg-primary-dark);
    --bg-secondary: var(--bg-secondary-dark);
    --text-primary: var(--text-primary-dark);
    --text-secondary: var(--text-secondary-dark);
    --border-color: var(--border-color-dark);
    --glass-bg: var(--glass-bg-dark);
    --glass-shadow: var(--glass-shadow-dark);
}

body.theme-light {
    --bg-primary: var(--bg-primary-light);
    --bg-secondary: var(--bg-secondary-light);
    --text-primary: var(--text-primary-light);
    --text-secondary: var(--text-secondary-light);
    --border-color: var(--border-color-light);
    --glass-bg: var(--glass-bg-light);
    --glass-shadow: var(--glass-shadow-light);
}

/* --- Global Reset and Base Styles --- */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    line-height: 1.6;
    color: var(--text-primary);
    background-color: var(--bg-primary);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    transition: var(--theme-transition);
}

a {
    color: var(--highlight-cyan);
    text-decoration: none;
    transition: color 0.2s ease;
}

a:hover {
    color: var(--highlight-magenta);
}

button, input[type="submit"], .button {
    background-color: var(--highlight-cyan);
    color: var(--bg-secondary-dark); /* Dark text on highlight */
    border: none;
    padding: 10px 20px;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1rem;
    transition: background-color 0.2s ease, transform 0.1s ease;
}

button:hover, input[type="submit"]:hover, .button:hover {
    background-color: var(--highlight-magenta);
    transform: translateY(-2px);
}

button:active, input[type="submit"]:active, .button:active {
    transform: translateY(0);
}

input[type="text"], input[type="search"], select, textarea {
    padding: 10px;
    border: 1px solid var(--border-color);
    border-radius: 8px;
    background-color: var(--bg-secondary);
    color: var(--text-primary);
    font-size: 1rem;
    transition: border-color 0.2s ease, background-color 0.2s ease;
}

input[type="text"]:focus, input[type="search"]:focus, select:focus, textarea:focus {
    outline: none;
    border-color: var(--highlight-cyan);
    box-shadow: 0 0 0 2px rgba(var(--highlight-cyan), 0.2); /* Soft glow */
}

/* --- Glassmorphic Effect Base Class --- */
.glassmorphic {
    background: var(--glass-bg);
    backdrop-filter: blur(var(--glass-blur));
    border: var(--glass-border-width) solid var(--border-color);
    border-radius: var(--glass-border-radius);
    box-shadow: 0 4px 30px var(--glass-shadow);
    transition: var(--theme-transition);
}

/* --- Layout Structure --- */
.dashboard-header {
    width: 100%;
    padding: 20px 40px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    z-index: 1000; /* Ensure header is on top */
    margin-bottom: 20px;
    position: sticky;
    top: 0;
}

.header-top {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.app-branding h1 {
    font-size: 2.2rem;
    color: var(--text-primary);
    position: relative;
    padding-bottom: 5px;
}

.app-branding h1::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(to right, var(--highlight-cyan), var(--highlight-magenta));
    border-radius: 2px;
}

.status-indicators {
    display: flex;
    gap: 20px;
    align-items: center;
}

.status-item {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 0.9rem;
    color: var(--text-secondary);
}

.status-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 1px solid var(--border-color);
    box-shadow: 0 0 5px rgba(0,0,0,0.2);
}

.status-dot.status-ok {
    background-color: limegreen;
    box-shadow: 0 0 8px limegreen;
}

.status-dot.status-error {
    background-color: crimson;
    box-shadow: 0 0 8px crimson;
}

.status-dot.status-unknown {
    background-color: orange;
    box-shadow: 0 0 8px orange;
}

.theme-toggle {
    background: none;
    border: 1px solid var(--border-color);
    padding: 8px 12px;
    border-radius: 50%;
    font-size: 1.2rem;
    cursor: pointer;
    color: var(--text-primary);
    transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
}

.theme-toggle:hover {
    background-color: rgba(var(--highlight-cyan), 0.1);
    border-color: var(--highlight-cyan);
}

.theme-toggle .icon-light { display: none; }
.theme-toggle .icon-dark { display: block; }

body.theme-light .theme-toggle .icon-light { display: block; }
body.theme-light .theme-toggle .icon-dark { display: none; }

.header-bottom {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap; /* Allow wrapping on smaller screens */
    gap: 15px;
}

.main-navigation ul {
    list-style: none;
    display: flex;
    gap: 25px;
}

.main-navigation a {
    color: var(--text-secondary);
    font-weight: bold;
    font-size: 1.1rem;
    padding: 5px 0;
    position: relative;
    transition: color 0.2s ease;
}

.main-navigation a:hover {
    color: var(--text-primary);
}

.main-navigation a.active {
    color: var(--highlight-yellow);
}

.main-navigation a::after {
    content: '';
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: -5px;
    width: 0;
    height: 3px;
    background: var(--highlight-yellow);
    border-radius: 2px;
    transition: width 0.3s ease;
}

.main-navigation a:hover::after,
.main-navigation a.active::after {
    width: 100%;
}

.customer-selection {
    display: flex;
    align-items: center;
    gap: 10px;
}

.customer-selection .select-wrapper {
    position: relative;
    display: inline-block;
    width: 250px; /* Fixed width for dropdown */
}

.customer-dropdown {
    width: 100%;
    padding-right: 30px; /* Space for dropdown arrow */
    appearance: none; /* Remove default arrow */
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: url('data:image/svg+xml;utf8,<svg fill="%23a0a0a0" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>');
    background-repeat: no-repeat;
    background-position: right 8px center;
    background-size: 20px;
}

.customer-search-input {
    position: absolute; /* Position search input over the dropdown */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0; /* Hidden by default, JS will reveal */
    pointer-events: none; /* Do not block clicks */
    transition: opacity 0.3s ease;
}

.customer-search-input.active {
    opacity: 1;
    pointer-events: all;
    background-color: var(--bg-secondary); /* Ensure it's visible */
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

.cta-button {
    background: linear-gradient(45deg, var(--highlight-cyan), var(--highlight-magenta));
    color: #fff;
    padding: 10px 25px;
    font-weight: bold;
    box-shadow: 0 5px 15px rgba(var(--highlight-magenta), 0.3);
}

.cta-button:hover {
    background: linear-gradient(45deg, var(--highlight-magenta), var(--highlight-cyan));
    box-shadow: 0 8px 20px rgba(var(--highlight-cyan), 0.4);
}


.dashboard-main-content {
    flex-grow: 1; /* Allows content to take up remaining space */
    padding: 20px 40px;
}

.view-container {
    padding: 20px;
    margin-bottom: 20px;
    background-color: var(--bg-secondary); /* Not glassmorphic here by default, but cards are */
    border-radius: var(--glass-border-radius);
    box-shadow: 0 2px 10px rgba(0,0,0,0.1); /* Subtle shadow for the view container */
    transition: var(--theme-transition);
}

.view-title {
    font-size: 1.8rem;
    color: var(--text-primary);
    margin-bottom: 25px;
    position: relative;
    padding-bottom: 10px;
}

.view-title::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    width: 60px;
    height: 4px;
    background: var(--highlight-yellow);
    border-radius: 2px;
}

.cards-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); /* Responsive grid */
    gap: 30px; /* Increased gap for better spacing */
}

/* --- Card Styles --- */
.card {
    background: var(--glass-bg);
    backdrop-filter: blur(var(--glass-blur));
    border: var(--glass-border-width) solid var(--border-color);
    border-radius: var(--glass-border-radius);
    box-shadow: 0 4px 30px var(--glass-shadow);
    padding: 25px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    position: relative;
    overflow: hidden; /* Hide any overflow from content, or for glow effects */
    transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
}

.card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 5px;
    background: linear-gradient(to right, var(--highlight-cyan), var(--highlight-magenta));
    opacity: 0.8;
    border-radius: var(--glass-border-radius) var(--glass-border-radius) 0 0;
}

.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 40px var(--glass-shadow), 0 0 20px rgba(var(--highlight-cyan), 0.3); /* Add subtle glow */
}

.card h3 {
    font-size: 1.5rem;
    color: var(--text-primary);
    margin-bottom: 10px;
}

.card p {
    color: var(--text-secondary);
    font-size: 1rem;
}

.error-card {
    background-color: rgba(255, 0, 0, 0.1);
    border: 1px solid crimson;
    color: crimson;
}

.error-card h3 {
    color: crimson;
}
.error-card p {
    color: #ff6347;
}

/* --- Footer Styles --- */
.dashboard-footer {
    padding: 20px 40px;
    text-align: center;
    color: var(--text-secondary);
    font-size: 0.9rem;
    border-top: 1px solid var(--border-color);
    margin-top: 20px;
    background-color: var(--bg-secondary); /* Match header for aesthetic */
    transition: var(--theme-transition);
    border-radius: var(--glass-border-radius) var(--glass-border-radius) 0 0; /* Rounded top, flat bottom */
}


/* --- Debug Panel Styles --- */
#debug-panel {
    position: fixed;
    bottom: 20px;
    right: 20px;
    width: 350px;
    height: 400px; /* Fixed height for scrollability */
    max-height: 80vh; /* Max height to fit viewport */
    background: var(--glass-bg);
    backdrop-filter: blur(var(--glass-blur));
    border: var(--glass-border-width) solid var(--border-color);
    border-radius: var(--glass-border-radius);
    box-shadow: 0 4px 30px var(--glass-shadow);
    z-index: 9999; /* Always on top */
    display: flex;
    flex-direction: column;
    font-family: 'Cascadia Code', 'Fira Code', 'Lucida Console', monospace; /* Monospace font for logs */
    font-size: 0.85rem;
    color: var(--text-primary);
    transition: var(--theme-transition), transform 0.3s ease;
    overflow: hidden; /* For inner scrollable content */
}

#debug-panel.hidden {
    transform: translateY(calc(100% - 40px)); /* Hide most of it, leave header visible */
}

.debug-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 15px;
    background-color: rgba(0, 0, 0, 0.2); /* Slightly darker header */
    border-bottom: 1px solid var(--border-color);
    border-radius: var(--glass-border-radius) var(--glass-border-radius) 0 0;
    cursor: grab; /* Indicate draggable */
}

.debug-header h3 {
    margin: 0;
    font-size: 1rem;
    color: var(--highlight-yellow);
}

.debug-button {
    background: none;
    border: 1px solid var(--border-color);
    color: var(--text-secondary);
    font-size: 0.9rem;
    padding: 4px 8px;
    border-radius: 4px;
    cursor: pointer;
    transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
}

.debug-button:hover {
    background-color: rgba(var(--highlight-cyan), 0.1);
    color: var(--highlight-cyan);
    border-color: var(--highlight-cyan);
}

.debug-content {
    flex-grow: 1; /* Take remaining space */
    padding: 10px 15px;
    overflow-y: auto; /* Enable scrolling for log content */
    white-space: pre-wrap; /* Preserve whitespace and wrap text */
    word-wrap: break-word; /* Break long words */
    background-color: rgba(0, 0, 0, 0.1); /* Slightly opaque background for logs */
    border-radius: 0 0 var(--glass-border-radius) var(--glass-border-radius);
}

.debug-log-output {
    margin: 0;
    padding: 0;
    color: var(--text-primary);
    font-size: 0.8em; /* Slightly smaller font for logs */
    line-height: 1.4;
}

/* Specific log level coloring (optional, can be done with JS appending classes) */
.debug-log-output .log-info { color: var(--text-secondary); }
.debug-log-output .log-warning { color: var(--highlight-yellow); }
.debug-log-output .log-error { color: var(--highlight-magenta); }
.debug-log-output .log-debug { color: var(--highlight-cyan); }
.debug-log-output .log-security { color: #ff00ff; } /* Purple for security alerts */

/* Responsive Adjustments */
@media (max-width: 768px) {
    .dashboard-header {
        padding: 15px 20px;
    }

    .header-bottom {
        flex-direction: column;
        align-items: flex-start;
    }

    .main-navigation ul {
        flex-wrap: wrap;
        gap: 15px;
    }

    .customer-selection {
        width: 100%;
        justify-content: center;
        flex-wrap: wrap;
    }

    .customer-selection .select-wrapper {
        width: 100%;
    }

    .dashboard-main-content {
        padding: 15px 20px;
    }

    .cards-grid {
        grid-template-columns: 1fr; /* Stack cards on small screens */
    }

    #debug-panel {
        width: 90%;
        bottom: 10px;
        right: 5%;
        left: 5%;
        max-height: 70vh;
    }
}


==== PHP FILE: ./footer.php ====
Size: 3427 bytes
Last Modified: Wed, Jun 11, 2025 12:36:58 PM
----------------------------------------
<?php
/**
 * MPSM Dashboard - Footer Partial
 *
 * This file contains the HTML structure and PHP logic for the dashboard's footer section.
 * Crucially, it also houses the dynamic debug panel, which displays all logged messages.
 *
 * Debugging Philosophy:
 * The debug panel itself should be resilient. Even if other parts of the application fail,
 * it should attempt to load and display information about those failures.
 * Its own loading process is also logged.
 */

// Ensure debug_messages global array is initialized.
if (!isset($GLOBALS['debug_messages'])) {
    $GLOBALS['debug_messages'] = [];
    debug_log("DEBUG: Initialized \$GLOBALS['debug_messages'] in footer.php (was empty).", 'DEBUG');
}

debug_log("Rendering footer.php and debug panel.", 'INFO');
?>
<footer class="dashboard-footer">
    <p>&copy; <?php echo date('Y'); ?> <?php echo sanitize_html(APP_NAME); ?>. Version <?php echo sanitize_html(APP_VERSION); ?>.</p>
</footer>

<?php
// --- Debug Panel ---
// The debug panel is only rendered if DEBUG_MODE and DEBUG_PANEL_ENABLED are true.
if (defined('DEBUG_MODE') && DEBUG_MODE && defined('DEBUG_PANEL_ENABLED') && DEBUG_PANEL_ENABLED) {
    debug_log("DEBUG_PANEL_ENABLED is true. Attempting to render debug panel.", 'INFO');
?>
    <div id="debug-panel" class="debug-panel glassmorphic">
        <div class="debug-header">
            <h3>Debug Log</h3>
            <button id="debug-toggle-visibility" class="debug-button" title="Toggle Debug Panel Visibility">_</button>
            <button id="debug-clear-log" class="debug-button" title="Clear Log">X</button>
        </div>
        <div class="debug-content">
            <pre id="debug-log-output" class="debug-log-output">
<?php
                // --- Debug Panel Self-Check and Loading Messages ---
                // This section specifically helps diagnose if the debug panel itself fails to load.
                if (!isset($GLOBALS['debug_messages'])) {
                    echo "[CRITICAL DEBUG ERROR] \$GLOBALS['debug_messages'] array is not defined. Debug logging will not function.\n";
                } else if (empty($GLOBALS['debug_messages'])) {
                    echo "[INFO] Debug panel loaded, but no messages logged yet.\n";
                } else {
                    echo "[INFO] Debug panel loaded and displaying " . count($GLOBALS['debug_messages']) . " log entries.\n";
                }
                echo "[INFO] PHP Version: " . PHP_VERSION . "\n";
                echo "[INFO] Current Time: " . date('Y-m-d H:i:s') . "\n";
                echo "[INFO] APP_BASE_PATH: " . (defined('APP_BASE_PATH') ? APP_BASE_PATH : 'NOT DEFINED') . "\n";
                echo "[INFO] DEBUG_LOG_FILE: " . (defined('DEBUG_LOG_FILE') ? DEBUG_LOG_FILE : 'NOT DEFINED') . "\n";

                // Output all collected debug messages.
                foreach ($GLOBALS['debug_messages'] as $log_entry) {
                    // Sanitize messages to prevent XSS in the debug panel itself.
                    echo sanitize_html($log_entry) . "\n";
                }
?>
            </pre>
        </div>
    </div>
    <?php debug_log("Debug panel successfully rendered.", 'INFO'); ?>
<?php
} else {
    debug_log("DEBUG_MODE or DEBUG_PANEL_ENABLED is false. Debug panel is not rendered.", 'INFO');
}
?>

<?php debug_log("Footer.php rendering complete.", 'INFO'); ?>


==== PHP FILE: ./functions.php ====
Size: 10192 bytes
Last Modified: Wed, Jun 11, 2025  1:28:56 PM
----------------------------------------
<?php
/**
 * functions.php
 *
 * MPSM Dashboard helper library:
 *  - Debug logging (debug_log)
 *  - Template partial inclusion (include_partial)
 *  - Data sanitization (sanitize_html, sanitize_url)
 *  - OAuth2 password-grant token management (loadEnv, loadCachedToken, cacheToken, requestNewToken, getAccessToken)
 *
 * PHP 8.2+ required.
 */

// -----------------------------------------------------------------------------
//  Global Debug Log Storage
// -----------------------------------------------------------------------------
/**
 * @var array $debug_log_entries
 *   In-memory store for all debug log entries during this request.
 */
$debug_log_entries = [];

// -----------------------------------------------------------------------------
//  Debug Logging
// -----------------------------------------------------------------------------
/**
 * Logs a message with a specific severity level.
 *
 * Levels: INFO, WARNING, ERROR, CRITICAL, DEBUG, SECURITY.
 * - DEBUG and INFO: only if DEBUG_MODE===true and enabled in DEBUG_LOG_LEVELS.
 * - WARNING: same as INFO/DEBUG.
 * - ERROR, CRITICAL, SECURITY: always logged.
 *
 * @param string $message  The message to log.
 * @param string $level    Severity level (case-insensitive).
 */
function debug_log(string $message, string $level = 'INFO'): void
{
    global $debug_log_entries;

    $level = strtoupper($level);
    $logLevels = defined('DEBUG_LOG_LEVELS') ? DEBUG_LOG_LEVELS : [];

    $shouldLog =
        in_array($level, ['ERROR', 'CRITICAL', 'SECURITY'], true)
        || (
            defined('DEBUG_MODE')
            && DEBUG_MODE === true
            && isset($logLevels[$level])
            && $logLevels[$level] === true
        );

    if (! $shouldLog) {
        return;
    }

    $entry = [
        'time'    => date('Y-m-d H:i:s'),
        'level'   => $level,
        'message' => $message,
    ];
    $debug_log_entries[] = $entry;

    // File logging if enabled
    if (defined('DEBUG_LOG_TO_FILE') && DEBUG_LOG_TO_FILE && defined('DEBUG_LOG_FILE')) {
        $filePath = DEBUG_LOG_FILE;
        $dir      = dirname($filePath);

        if (! is_dir($dir)) {
            if (! mkdir($dir, 0755, true)) {
                error_log("Failed to create log directory: {$dir}");
                goto skip_file;
            }
        }
        if (defined('MAX_DEBUG_LOG_SIZE_MB') && MAX_DEBUG_LOG_SIZE_MB > 0) {
            if (file_exists($filePath) && filesize($filePath) / (1024*1024) > MAX_DEBUG_LOG_SIZE_MB) {
                file_put_contents(
                    $filePath,
                    "--- Log truncated (exceeded " . MAX_DEBUG_LOG_SIZE_MB . " MB) ---\n",
                    LOCK_EX
                );
            }
        }
        file_put_contents(
            $filePath,
            "[{$entry['time']}] [{$entry['level']}] {$entry['message']}\n",
            FILE_APPEND | LOCK_EX
        );
    }
    skip_file:

    if (in_array($level, ['ERROR', 'CRITICAL', 'SECURITY'], true)) {
        error_log("[MPSM_APP_LOG][{$level}] {$message}");
    }
}

// -----------------------------------------------------------------------------
//  Template Partial Inclusion
// -----------------------------------------------------------------------------
/**
 * Includes a PHP partial file and injects data into its scope.
 *
 * @param string $relativePath  Path to partial, relative to APP_BASE_PATH.
 * @param array  $data          Variables to extract for the partial.
 * @return bool  True on success; false if file missing.
 */
function include_partial(string $relativePath, array $data = []): bool
{
    $fullPath = APP_BASE_PATH . $relativePath;

    if (! file_exists($fullPath)) {
        debug_log("Partial not found: {$fullPath}", 'WARNING');
        if (defined('DEBUG_MODE') && DEBUG_MODE) {
            echo "<div class='warning-banner'>WARNING: Partial '{$relativePath}' missing.</div>";
        }
        return false;
    }

    extract($data, EXTR_SKIP);
    include $fullPath;
    debug_log("Included partial: {$relativePath}", 'DEBUG');
    return true;
}

// -----------------------------------------------------------------------------
//  Data Sanitization
// -----------------------------------------------------------------------------
/**
 * Escape a string for safe HTML output.
 */
function sanitize_html(string $input): string
{
    return htmlspecialchars($input, ENT_QUOTES, 'UTF-8');
}

/**
 * Clean a string for use in URLs (slugs, IDs).
 */
function sanitize_url(string $input): string
{
    $slug = preg_replace('/[^a-zA-Z0-9_-]/', '', $input);
    $slug = preg_replace('/[-_]+/', '-', $slug);
    $slug = trim($slug, '-_');
    return strtolower($slug);
}

// -----------------------------------------------------------------------------
//  OAuth2 Token Management (Password Grant)
// -----------------------------------------------------------------------------
define('ENV_FILE', __DIR__ . '/.env');
define('TOKEN_CACHE_FILE', __DIR__ . '/logs/token_cache.json');

/**
 * Load key=value pairs from .env into $_ENV.
 */
function loadEnv(): void
{
    if (! file_exists(ENV_FILE) || ! is_readable(ENV_FILE)) {
        throw new RuntimeException("Cannot load .env at " . ENV_FILE);
    }

    foreach (file(ENV_FILE, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES) as $line) {
        $line = trim($line);
        if ($line === '' || str_starts_with($line, '#')) {
            continue;
        }
        [$key, $val] = explode('=', $line, 2) + [1 => ''];
        $_ENV[trim($key)] = trim($val);
    }
    debug_log(".env loaded into \$_ENV", 'DEBUG');
}

/**
 * Attempt to read a valid cached token.
 *
 * @return array|null  ['access_token'=>string, 'expires_at'=>int] or null.
 */
function loadCachedToken(): ?array
{
    if (! file_exists(TOKEN_CACHE_FILE)) {
        debug_log("Token cache file not found", 'DEBUG');
        return null;
    }

    $raw = file_get_contents(TOKEN_CACHE_FILE);
    if ($raw === false) {
        debug_log("Failed to read token cache file", 'WARNING');
        return null;
    }

    $data = json_decode($raw, true);
    if (! is_array($data) || empty($data['access_token']) || empty($data['expires_at'])) {
        debug_log("Token cache corrupted or incomplete", 'WARNING');
        return null;
    }

    if (time() >= (int)$data['expires_at']) {
        debug_log("Cached token expired at {$data['expires_at']}", 'DEBUG');
        return null;
    }

    // Log the actual token and expiry for debugging
    debug_log("Using cached token (expires at {$data['expires_at']})", 'DEBUG');
    debug_log("Cached access token: {$data['access_token']}", 'DEBUG');

    return $data;
}

/**
 * Write a fresh token to cache for reuse.
 */
function cacheToken(string $accessToken, int $expiresIn): void
{
    $payload = [
        'access_token' => $accessToken,
        'expires_at'   => time() + $expiresIn - 30, // 30s buffer
    ];

    $dir = dirname(TOKEN_CACHE_FILE);
    if (! is_dir($dir)) {
        mkdir($dir, 0755, true);
    }

    if (file_put_contents(TOKEN_CACHE_FILE, json_encode($payload, JSON_PRETTY_PRINT)) === false) {
        throw new RuntimeException("Failed to write token cache to " . TOKEN_CACHE_FILE);
    }

    debug_log("Cached new token (expires in {$expiresIn} seconds)", 'DEBUG');
}

/**
 * Perform the OAuth2 password-grant request to obtain a new token.
 */
function requestNewToken(): array
{
    loadEnv();

    foreach (['CLIENT_ID','CLIENT_SECRET','USERNAME','PASSWORD','TOKEN_URL'] as $key) {
        if (empty($_ENV[$key])) {
            throw new RuntimeException("Missing \${$key} in .env");
        }
    }

    $form = http_build_query([
        'grant_type'    => 'password',
        'client_id'     => $_ENV['CLIENT_ID'],
        'client_secret' => $_ENV['CLIENT_SECRET'],
        'username'      => $_ENV['USERNAME'],
        'password'      => $_ENV['PASSWORD'],
        'scope'         => $_ENV['SCOPE'] ?? '',
    ]);

    debug_log("Requesting new OAuth2 token from {$_ENV['TOKEN_URL']}", 'DEBUG');

    $ch = curl_init($_ENV['TOKEN_URL']);
    curl_setopt_array($ch, [
        CURLOPT_POST           => true,
        CURLOPT_POSTFIELDS     => $form,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_HTTPHEADER     => ['Content-Type: application/x-www-form-urlencoded'],
        CURLOPT_FAILONERROR    => false,
    ]);

    $response = curl_exec($ch);
    if ($response === false) {
        $err = curl_error($ch);
        curl_close($ch);
        throw new RuntimeException("cURL error fetching token: {$err}");
    }

    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    if ($httpCode !== 200) {
        throw new RuntimeException("Token endpoint returned HTTP {$httpCode}: {$response}");
    }

    $data = json_decode($response, true);
    if (json_last_error() !== JSON_ERROR_NONE) {
        throw new RuntimeException("Invalid JSON from token endpoint: " . json_last_error_msg());
    }

    // Log the raw token details
    debug_log("Received new OAuth2 token response", 'DEBUG');
    debug_log("New access token: {$data['access_token']} (expires_in {$data['expires_in']}s)", 'DEBUG');

    return $data;
}

/**
 * Get a valid OAuth2 bearer token, using cache if possible.
 */
function getAccessToken(): string
{
    debug_log("getAccessToken() called", 'DEBUG');

    $cached = loadCachedToken();
    if ($cached !== null) {
        debug_log("getAccessToken returning cached token", 'DEBUG');
        return $cached['access_token'];
    }

    $tokenData = requestNewToken();

    if (empty($tokenData['access_token']) || empty($tokenData['expires_in'])) {
        throw new RuntimeException("Token response missing required fields");
    }

    cacheToken($tokenData['access_token'], (int)$tokenData['expires_in']);

    debug_log("getAccessToken returning new token", 'DEBUG');
    return $tokenData['access_token'];
}



==== PHP FILE: ./header.php ====
Size: 5985 bytes
Last Modified: Wed, Jun 11, 2025 12:36:46 PM
----------------------------------------
<?php
/**
 * MPSM Dashboard - Header Partial
 *
 * This file contains the HTML structure and PHP logic for the dashboard's header section.
 * It includes key UI elements such as the application title, database and API status indicators,
 * a searchable customer dropdown, and navigation links for different views.
 *
 * This file expects the following variables to be available (passed via include_partial):
 * - $db_status (array): Database connection status.
 * - $api_status (array): MPS Monitor API connection status.
 * - $customers (array): List of available customers for the dropdown.
 * - $current_customer_id (int|null): The ID of the currently selected customer.
 * - $available_views (array): List of all discoverable views.
 * - $current_view_slug (string): The slug of the currently active view.
 *
 * Debugging Philosophy:
 * Log the status of each component (DB, API, Customer dropdown) during rendering
 * to identify issues with data availability or rendering early.
 */

// Ensure variables are defined, providing defaults to prevent errors if not passed.
$db_status         = $db_status ?? ['status' => 'unknown', 'message' => 'Status not retrieved.'];
$api_status        = $api_status ?? ['status' => 'unknown', 'message' => 'Status not retrieved.'];
$customers         = $customers ?? [];
$current_customer_id = $current_customer_id ?? null;
$available_views   = $available_views ?? [];
$current_view_slug = $current_view_slug ?? 'dashboard';

debug_log("Rendering header.php. DB Status: " . $db_status['status'] . ", API Status: " . $api_status['status'], 'DEBUG');
debug_log("Available views: " . implode(', ', array_keys($available_views)), 'DEBUG');
debug_log("Current view slug: " . sanitize_html($current_view_slug), 'DEBUG');

?>
<header class="dashboard-header glassmorphic">
    <div class="header-top">
        <div class="app-branding">
            <h1><?php echo sanitize_html(APP_NAME); ?></h1>
        </div>
        <div class="status-indicators">
            <div class="status-item db-status">
                <span class="status-dot status-<?php echo sanitize_html($db_status['status']); ?>"
                      title="Database Status: <?php echo sanitize_html($db_status['message']); ?>"></span>
                <span>Database</span>
            </div>
            <div class="status-item api-status">
                <span class="status-dot status-<?php echo sanitize_html($api_status['status']); ?>"
                      title="API Status: <?php echo sanitize_html($api_status['message']); ?>"></span>
                <span>API</span>
            </div>
            <button id="theme-toggle" class="theme-toggle" title="Toggle Dark/Light Theme">
                <span class="icon-light">☀️</span>
                <span class="icon-dark">🌙</span>
            </button>
            <?php debug_log("Status indicators and theme toggle rendered.", 'DEBUG'); ?>
        </div>
    </div>

    <div class="header-bottom">
        <nav class="main-navigation">
            <ul>
                <?php
                // Render navigation links for each discoverable view.
                foreach ($available_views as $slug => $display_name) {
                    $is_active = ($slug === $current_view_slug) ? 'active' : '';
                    $nav_link_url = BASE_URL . '?view=' . sanitize_url($slug);
                    debug_log("Rendering navigation link for view: $slug (Active: $is_active)", 'DEBUG');
                    echo '<li><a href="' . sanitize_html($nav_link_url) . '" class="' . sanitize_html($is_active) . '">' . sanitize_html($display_name) . '</a></li>';
                }
                if (empty($available_views)) {
                    debug_log("No views found to render in navigation. Check 'views/' directory.", 'WARNING');
                    echo '<li><span class="no-views-message">No views available.</span></li>';
                }
                ?>
            </ul>
        </nav>

        <div class="customer-selection">
            <label for="customer-select" class="sr-only">Select Customer:</label>
            <div class="select-wrapper">
                <select id="customer-select" class="customer-dropdown" name="customer_id">
                    <option value="">-- Select Customer --</option>
                    <?php
                    if (!empty($customers)) {
                        debug_log("Populating customer dropdown with " . count($customers) . " customers.", 'INFO');
                        foreach ($customers as $customer) {
                            $customer_id = sanitize_int($customer['id']);
                            $customer_name = sanitize_html($customer['name']);
                            $selected = ($customer_id === $current_customer_id) ? 'selected' : '';
                            echo '<option value="' . $customer_id . '" ' . $selected . '>' . $customer_name . '</option>';
                            debug_log("Added customer to dropdown: ID $customer_id, Name '$customer_name'.", 'DEBUG');
                        }
                    } else {
                        debug_log("No customer data available to populate dropdown.", 'WARNING');
                        echo '<option value="" disabled>No customers available</option>';
                    }
                    ?>
                </select>
                <input type="text" id="customer-search" class="customer-search-input" placeholder="Search customer..." aria-label="Search customer">
                <?php debug_log("Customer dropdown and search input rendered.", 'DEBUG'); ?>
            </div>
            <button id="apply-customer-filter" class="button cta-button">Apply Filter</button>
            <?php debug_log("Apply customer filter button rendered.", 'DEBUG'); ?>
        </div>
    </div>
</header>
<?php debug_log("Header.php rendering complete.", 'INFO'); ?>


==== TEXT FILE: ./includes/del.txt ====
Size: 9 bytes
Last Modified: Wed, Jun 11, 2025 12:56:56 PM
----------------------------------------
dsadsadsa


==== PHP FILE: ./index.php ====
Size: 5143 bytes
Last Modified: Wed, Jun 11, 2025 12:48:10 PM
----------------------------------------
<?php
// MPSM Dashboard - index.php

// 1. Configuration and Utility Inclusion
// Make sure your config.php defines APP_BASE_PATH, BASE_URL, JS_PATH, CSS_PATH, APP_VERSION
// Example:
// define('APP_BASE_PATH', __DIR__ . '/'); // If index.php is in the root
// define('BASE_URL', 'http://yourdomain.com/');
// define('JS_PATH', 'js/');
// define('CSS_PATH', 'css/');
// define('APP_VERSION', '1.0.0'); // This APP_VERSION is a PHP constant, separate from JS version.js
// define('DEBUG_MODE', true); // Example
// define('APP_NAME', 'MPSM Dashboard'); // Example

require_once 'config.php';
require_once 'functions.php'; // Assuming debug_log, sanitize_html, sanitize_url, include_partial are here

// 2. Session Management (if used)
// session_start(); // Uncomment if you are using sessions

// 3. Routing and View Selection
$current_view_slug = $_GET['view'] ?? 'dashboard'; // Default to 'dashboard' view

$available_views = [
    'dashboard' => 'Dashboard Overview',
    'reports' => 'Detailed Reports',
    // Add other views as they are created
];

// Data to be passed to header, views, and footer
$header_data = [
    'app_name' => APP_NAME,
    'current_view_title' => $available_views[$current_view_slug] ?? 'Dashboard',
];

$view_data = [
    // Data specific to the view can be populated here based on $current_view_slug
    // For example, fetching data from a database
    'cards' => [
        // Example structure for cards
        ['title' => 'Total Printers', 'value' => '1200', 'icon' => 'printer'],
        ['title' => 'Devices Online', 'value' => '1150', 'icon' => 'wifi'],
        // ... more dynamic card data
    ],
];

debug_log("Application started. Current view: " . sanitize_html($current_view_slug), 'INFO');

// 4. HTML Document Structure and Content Inclusion
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo sanitize_html(APP_NAME); ?> | <?php echo sanitize_html($available_views[$current_view_slug] ?? 'Dashboard'); ?></title>
    <meta name="description" content="A customizable user interface dashboard for MPS Monitor.">

    <link rel="stylesheet" href="<?php echo BASE_URL . CSS_PATH; ?>style.css?v=<?php echo APP_VERSION; ?>">

    <?php debug_log("HTML head section rendered.", 'DEBUG'); ?>
</head>
<body class="theme-dark">
    <?php
    debug_log("Including header.php.", 'INFO');
    // Assuming header.php is in the root, or include_partial handles it correctly
    include_partial('header.php', $header_data);
    ?>

    <main class="dashboard-main-content">
        <?php debug_log("Main content area started.", 'INFO'); ?>
        <section class="view-container">
            <h2 class="view-title"><?php echo sanitize_html($available_views[$current_view_slug] ?? 'Unknown View'); ?></h2>
            <div class="cards-grid">
                <?php
                // Include the selected view file.
                // The view file is responsible for deciding which cards to render.
                $view_file_path = VIEWS_PATH . sanitize_url($current_view_slug) . '.php'; // Using VIEWS_PATH constant

                debug_log("Attempting to include view file: " . $view_file_path, 'INFO');

                // Basic security check: ensure the path is within the intended views directory
                if (strpos(realpath($view_file_path), realpath(VIEWS_PATH)) === 0 && file_exists($view_file_path)) {
                    // Extract view_data into the scope of the included view file.
                    extract($view_data);
                    include $view_file_path;
                    debug_log("Successfully included view: " . sanitize_html($current_view_slug), 'INFO');
                } else {
                    debug_log("View file not found for slug '" . sanitize_html($current_view_slug) . "' at: " . $view_file_path, 'ERROR');
                    echo "<div class='card error-card'>
                            <h3>View Not Found!</h3>
                            <p>The requested view '<strong>" . sanitize_html($current_view_slug) . "</strong>' could not be loaded.</p>
                            <p>Please check the URL or ensure the view file exists in the <code>" . sanitize_html(basename(VIEWS_PATH)) . "/</code> directory.</p>
                          </div>";
                }
                ?>
            </div>
        </section>
        <?php debug_log("Main content area ended.", 'INFO'); ?>
    </main>

    <?php
    debug_log("Including footer.php.", 'INFO');
    // Assuming footer.php is in the root, or include_partial handles it correctly
    include_partial('footer.php');
    ?>

    <script src="/version.js?v=<?php echo APP_VERSION; ?>"></script> <script src="<?php echo BASE_URL . JS_PATH; ?>script.js?v=<?php echo APP_VERSION; ?>"></script>
    <?php debug_log("JavaScript files linked.", 'DEBUG'); ?>

</body>
</html>
<?php
debug_log("MPSM Dashboard application finished rendering.", 'INFO');
// End of index.php


==== JS FILE: ./js/script.js ====
Size: 11184 bytes
Last Modified: Wed, Jun 11, 2025 12:37:58 PM
----------------------------------------
/**
 * MPSM Dashboard - Main JavaScript File
 *
 * This file contains all the client-side JavaScript for the MPSM Dashboard.
 * It handles interactive elements such as theme switching, the searchable customer dropdown,
 * and the functionality of the debug panel (toggle, clear, drag).
 *
 * Debugging Philosophy:
 * console.log statements are used extensively within this JS file to trace execution,
 * verify element selections, and debug interactive behaviors directly in the browser's
 * developer console. These logs should be comprehensive to aid troubleshooting.
 */

document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM Content Loaded. Initializing JavaScript components...');

    // --- Theme Toggle Functionality ---
    const themeToggleBtn = document.getElementById('theme-toggle');
    const body = document.body;

    if (themeToggleBtn && body) {
        console.log('Theme toggle button found. Initializing theme functionality.');

        // Function to set the theme based on local storage or system preference
        function applyTheme(theme) {
            console.log('Applying theme:', theme);
            if (theme === 'dark') {
                body.classList.remove('theme-light');
                body.classList.add('theme-dark');
            } else {
                body.classList.remove('theme-dark');
                body.classList.add('theme-light');
            }
            localStorage.setItem('mpsm_theme', theme); // Save preference
            console.log('Theme applied and saved to localStorage:', theme);
        }

        // Check for saved theme preference or system preference on load
        const savedTheme = localStorage.getItem('mpsm_theme');
        if (savedTheme) {
            applyTheme(savedTheme);
            console.log('Loaded theme from localStorage:', savedTheme);
        } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            // Check for system dark mode preference
            applyTheme('dark');
            console.log('Applying system dark mode preference.');
        } else {
            // Default to light theme if no preference found
            applyTheme('light'); // Explicitly set light as default if no dark preference
            console.log('Defaulting to light theme.');
        }

        // Add event listener for theme toggle button
        themeToggleBtn.addEventListener('click', function() {
            const currentTheme = body.classList.contains('theme-dark') ? 'dark' : 'light';
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            applyTheme(newTheme);
            console.log('Theme toggled from', currentTheme, 'to', newTheme);
        });
    } else {
        console.warn('Theme toggle button or body element not found. Theme functionality skipped.');
    }

    // --- Customer Selection Dropdown with Search Functionality ---
    const customerSelect = document.getElementById('customer-select');
    const customerSearchInput = document.getElementById('customer-search');
    const applyCustomerFilterBtn = document.getElementById('apply-customer-filter');

    if (customerSelect && customerSearchInput && applyCustomerFilterBtn) {
        console.log('Customer selection elements found. Initializing customer filter.');

        // Hide the dropdown and show the search input initially
        customerSelect.style.display = 'none';
        customerSearchInput.classList.add('active');
        console.log('Customer dropdown hidden, search input shown.');

        // Cache the original options for filtering
        const originalOptions = Array.from(customerSelect.options).map(option => ({
            value: option.value,
            text: option.textContent
        }));
        console.log('Original customer options cached:', originalOptions);

        customerSearchInput.addEventListener('input', function() {
            const searchTerm = customerSearchInput.value.toLowerCase();
            console.log('Customer search input changed. Search term:', searchTerm);

            // Clear current options
            customerSelect.innerHTML = '';
            customerSelect.style.display = 'block'; // Temporarily show to update options

            let matchFound = false;
            let firstMatchValue = null;

            // Add a default "Select Customer" option
            const defaultOption = document.createElement('option');
            defaultOption.value = '';
            defaultOption.textContent = '-- Select Customer --';
            customerSelect.appendChild(defaultOption);

            originalOptions.forEach(option => {
                if (option.value === '') return; // Skip the initial default option

                if (option.text.toLowerCase().includes(searchTerm)) {
                    const newOption = document.createElement('option');
                    newOption.value = option.value;
                    newOption.textContent = option.text;
                    customerSelect.appendChild(newOption);
                    if (!matchFound) {
                        firstMatchValue = option.value;
                        matchFound = true;
                    }
                    console.log('Found match for customer:', option.text);
                }
            });

            // If a single exact match or first fuzzy match is found, select it
            if (firstMatchValue) {
                customerSelect.value = firstMatchValue;
                console.log('Automatically selected first matching customer:', firstMatchValue);
            } else {
                customerSelect.value = ''; // No match, reset selection
                console.log('No customer match found for search term.');
            }

            customerSelect.style.display = 'none'; // Hide dropdown again after updating
        });

        // Event listener for the "Apply Filter" button
        applyCustomerFilterBtn.addEventListener('click', function() {
            const selectedCustomerId = customerSelect.value; // This will hold the value from the filtered dropdown
            const currentView = new URLSearchParams(window.location.search).get('view') || 'dashboard'; // Get current view

            console.log('Apply Filter button clicked. Selected Customer ID:', selectedCustomerId);

            if (selectedCustomerId) {
                // Redirect with the selected customer ID and current view
                window.location.href = `?view=${encodeURIComponent(currentView)}&customer_id=${encodeURIComponent(selectedCustomerId)}`;
                console.log('Redirecting to:', `?view=${encodeURIComponent(currentView)}&customer_id=${encodeURIComponent(selectedCustomerId)}`);
            } else {
                // If no customer is selected, remove customer_id from URL
                const url = new URL(window.location.href);
                url.searchParams.delete('customer_id');
                window.location.href = url.toString();
                console.log('No customer selected, redirecting to remove customer_id from URL:', url.toString());
            }
        });

        // Initialize search input value if customer_id is already in URL
        const initialCustomerId = new URLSearchParams(window.location.search).get('customer_id');
        if (initialCustomerId) {
            const selectedOption = originalOptions.find(option => option.value == initialCustomerId);
            if (selectedOption) {
                customerSearchInput.value = selectedOption.text;
                console.log('Pre-filled customer search input with:', selectedOption.text);
            }
        }
    } else {
        console.warn('Customer selection elements not fully found. Customer filter functionality skipped.');
    }

    // --- Debug Panel Functionality ---
    const debugPanel = document.getElementById('debug-panel');
    const debugToggleVisibilityBtn = document.getElementById('debug-toggle-visibility');
    const debugClearLogBtn = document.getElementById('debug-clear-log');
    const debugLogOutput = document.getElementById('debug-log-output');

    if (debugPanel && debugToggleVisibilityBtn && debugClearLogBtn && debugLogOutput) {
        console.log('Debug panel elements found. Initializing debug panel functionality.');

        // Toggle Visibility
        debugToggleVisibilityBtn.addEventListener('click', function() {
            debugPanel.classList.toggle('hidden');
            console.log('Debug panel visibility toggled. Hidden status:', debugPanel.classList.contains('hidden'));
        });

        // Clear Log
        debugClearLogBtn.addEventListener('click', function() {
            debugLogOutput.innerHTML = '[INFO] Log cleared by user.\n';
            console.log('Debug log cleared.');
        });

        // Drag Functionality (Basic)
        let isDragging = false;
        let offsetX, offsetY;

        const debugHeader = debugPanel.querySelector('.debug-header');
        if (debugHeader) {
            debugHeader.addEventListener('mousedown', (e) => {
                isDragging = true;
                offsetX = e.clientX - debugPanel.getBoundingClientRect().left;
                offsetY = e.clientY - debugPanel.getBoundingClientRect().top;
                debugPanel.style.cursor = 'grabbing';
                console.log('Debug panel dragging started.');
            });

            document.addEventListener('mousemove', (e) => {
                if (!isDragging) return;
                debugPanel.style.left = (e.clientX - offsetX) + 'px';
                debugPanel.style.top = (e.clientY - offsetY) + 'px';
                // Prevent panel from going off-screen (basic boundary check)
                const panelRect = debugPanel.getBoundingClientRect();
                if (panelRect.left < 0) debugPanel.style.left = '0px';
                if (panelRect.top < 0) debugPanel.style.top = '0px';
                if (panelRect.right > window.innerWidth) debugPanel.style.left = (window.innerWidth - panelRect.width) + 'px';
                if (panelRect.bottom > window.innerHeight) debugPanel.style.top = (window.innerHeight - panelRect.height) + 'px';
            });

            document.addEventListener('mouseup', () => {
                if (isDragging) {
                    isDragging = false;
                    debugPanel.style.cursor = 'grab';
                    console.log('Debug panel dragging ended.');
                }
            });
        } else {
            console.warn('Debug panel header not found. Drag functionality skipped.');
        }

        // Scroll debug log to bottom on load
        debugLogOutput.scrollTop = debugLogOutput.scrollHeight;
        console.log('Debug log scrolled to bottom on load.');

    } else {
        console.warn('Debug panel elements not fully found. Debug panel functionality skipped.');
    }

    console.log('JavaScript initialization complete.');
});


==== TEXT FILE: ./Refined Endpoint Groups JSON.json ====
Size: 5116 bytes
Last Modified: Tue, Jun 10, 2025 11:13:34 AM
----------------------------------------
{
  "Developer": {
    "WhiteLabel": {
      "endpoints": [
        "/WhiteLabel/GetWhiteLabel",
        "/WhiteLabel/Update",
        "/WhiteLabel/GetPlaceholders"
      ]
    },
    "Devices": {
      "endpoints": [
        "/Devices/SetFirmware",
        "/Devices/SetZebraSettings"
      ]
    }
  },
  "Admin": {
    "Account": {
      "Profile": {
        "endpoints": [
          "/Account/GetProfile",
          "/Account/UpdateProfile"
        ]
      },
      "Authentication": {
        "2FA": {
          "endpoints": [
            "/Account/GetPsk2faData",
            "/Account/GetPsk2faDataForProfile",
            "/Account/GetPsk2faDataForAccount",
            "/Account/Enable2faForAccount",
            "/Account/Enable2faForProfile",
            "/Account/Delete2fa",
            "/Account/DeleteProfile2fa"
          ]
        },
        "Session": {
          "endpoints": [
            "/Account/RefreshAuthCookie",
            "/Account/Logout",
            "/Account/SendOtpEmailForAccount"
          ]
        },
        "Password": {
          "endpoints": [
            "/Account/ChangePassword",
            "/Account/ResetPassword",
            "/Account/ResetPasswordVerifyToken"
          ]
        }
      },
      "AccountManagement": {
        "endpoints": [
          "/Account/SetPreferredDealer",
          "/Account/GetAccount",
          "/Account/GetAccounts",
          "/Account/Create",
          "/Account/Update",
          "/Account/Delete"
        ]
      },
      "Preferences": {
        "endpoints": [
          "/Account/ChangeLanguage"
        ]
      }
    }
  },
  "Dealer": {
    "AlertLimit2": {
      "Dealer": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Dealer/GetDefault",
            "/AlertLimit2/Dealer/CreateDefault",
            "/AlertLimit2/Dealer/UpdateDefault"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit2/Dealer/GetProductList",
            "/AlertLimit2/Dealer/GetProduct",
            "/AlertLimit2/Dealer/DeleteProduct",
            "/AlertLimit2/Dealer/CreateProduct",
            "/AlertLimit2/Dealer/UpdateProduct"
          ]
        }
      }
    },
    "AlertLimit": {
      "Dealer": {
        "endpoints": [
          "/AlertLimit/Dealer/Get",
          "/AlertLimit/Dealer/Update"
        ]
      }
    }
  },
  "Service": {
    "AlertLimit2": {
      "General": {
        "endpoints": [
          "/AlertLimit2/DisableAlertLimits",
          "/AlertLimit2/GetAllLimits"
        ]
      },
      "Customer": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Customer/GetDefault",
            "/AlertLimit2/Customer/CreateDefault",
            "/AlertLimit2/Customer/UpdateDefault",
            "/AlertLimit2/Customer/DeleteDefaultForConsumable"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit2/Customer/GetProductList",
            "/AlertLimit2/Customer/GetProduct",
            "/AlertLimit2/Customer/DeleteProduct",
            "/AlertLimit2/Customer/CreateProduct",
            "/AlertLimit2/Customer/UpdateProduct"
          ]
        }
      },
      "Device": {
        "Default": {
          "endpoints": [
            "/AlertLimit2/Device/GetDefault",
            "/AlertLimit2/Device/CreateDefault",
            "/AlertLimit2/Device/UpdateDefault",
            "/AlertLimit2/Device/DeleteDefaultForConsumable"
          ]
        }
      }
    },
    "AlertLimit": {
      "Customer": {
        "General": {
          "endpoints": [
            "/AlertLimit/Customer/Get",
            "/AlertLimit/Customer/Update"
          ]
        },
        "Product": {
          "endpoints": [
            "/AlertLimit/Customer/Product/List",
            "/AlertLimit/Customer/Product/Update"
          ]
        }
      },
      "Device": {
        "endpoints": [
          "/AlertLimit/Device/Get",
          "/AlertLimit/Device/Update"
        ]
      }
    },
    "Ticket": {
      "General": {
        "endpoints": [
          "/Ticket/GetByNumber",
          "/Ticket/GetTickets",
          "/Ticket/Create",
          "/Ticket/Update",
          "/Ticket/CreateChild"
        ]
      },
      "Metadata": {
        "endpoints": [
          "/Ticket/GetAttachment",
          "/Ticket/GetMedia",
          "/Ticket/GetCategoryLanguage",
          "/Ticket/GetSubTypesByCategory",
          "/Ticket/GetOperators",
          "/Ticket/GetCustomerTicketStatus"
        ]
      }
    },
    "TraceVolume": {
      "endpoints": [
        "/TraceVolume/GetList",
        "/TraceVolume/Get",
        "/TraceVolume/Create",
        "/TraceVolume/Update",
        "/TraceVolume/NewEvent"
      ]
    }
  },
  "Sales": {
    "TradingPartner": {
      "endpoints": [
        "/TradingPartner/Get",
        "/TradingPartner/GetList",
        "/TradingPartner/Update"
      ]
    }
  },
  "Accounting": {},
  "Guest": {
    "Account": {
      "Password": {
        "endpoints": [
          "/Account/ResetPassword",
          "/Account/ResetPasswordVerifyToken"
        ]
      }
    }
  }
}


==== TEXT FILE: ./Swagger.json ====
Size: 2109007 bytes
Last Modified: Tue, Jun 10, 2025 10:22:56 AM
----------------------------------------
{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Mps Monitor Api"
  },
  "host": "localhost:34287",
  "schemes": [
    "https"
  ],
  "paths": {
    "/Account/GetProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated user.",
        "operationId": "Account/GetProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/RefreshAuthCookie": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/RefreshAuthCookie",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Logout": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Logout",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/UpdateProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update profile of current authenticated user.",
        "operationId": "Account/UpdateProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faData": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faData",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForProfile": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForProfile",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetPsk2faDataForAccount": {
      "get": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/GetPsk2faDataForAccount",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "platform",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "MpsMonitor",
              "Katun",
              "Olivetti",
              "HpSds",
              "CloudConnected",
              "Ehawk",
              "MpsMonitorOld"
            ]
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "psk2fa",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[Psk2faDataDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Enable2faForProfile": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/Enable2faForProfile",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Enable2faForProfileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SendOtpEmailForAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "operationId": "Account/SendOtpEmailForAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SendOtpEmailForAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/SetPreferredDealer": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets profile of current authenticated account.",
        "operationId": "Account/SetPreferredDealer",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SetPreferredDealerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccount": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the account.",
        "description": "",
        "operationId": "Account/GetAccount",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/GetAccounts": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Gets the accounts.",
        "operationId": "Account/GetAccounts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Create": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an account",
        "operationId": "Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Update": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update an account",
        "operationId": "Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangePassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Changes the password of the connected account",
        "operationId": "Account/ChangePassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPassword": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Resets the password.",
        "operationId": "Account/ResetPassword",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ResetPasswordVerifyToken": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Verify the Resets password auth token.",
        "operationId": "Account/ResetPasswordVerifyToken",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordVerifyTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/ChangeLanguage": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Change language",
        "operationId": "Account/ChangeLanguage",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeLanguageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes an account",
        "operationId": "Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/Delete2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/Delete2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Account/DeleteProfile2fa": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "This operation deletes the two factor authentication for a user",
        "operationId": "Account/DeleteProfile2fa",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/DisableAlertLimits": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/DisableAlertLimits",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisableAlertLimitsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/GetAllLimits": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/GetAllLimits",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "alertLimitSource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Default",
              "Dealer",
              "DealerProduct",
              "Customer",
              "CustomerProduct",
              "InstalledProduct"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2SourceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DealerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the DealerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Dealer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Dealer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DealerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProductList": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProductList",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the dealer code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ProductBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/GetProduct": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/GetProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2CustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/DeleteProduct": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/DeleteProduct",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "customerCode",
            "in": "query",
            "description": "Gets or sets the CustomerCode.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/CreateProduct": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/CreateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Customer/UpdateProduct": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Customer/UpdateProduct",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2CustomerProductDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/GetDefault": {
      "get": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/GetDefault",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimit2DeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/CreateDefault": {
      "post": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/CreateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/UpdateDefault": {
      "put": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/UpdateDefault",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[IEnumerable[AlertLimit2DeviceDto]]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit2/Device/DeleteDefaultForConsumable": {
      "delete": {
        "tags": [
          "AlertLimit2Api"
        ],
        "operationId": "AlertLimit2/Device/DeleteDefaultForConsumable",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "supplyType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ManteinanceKit",
              "PhotoConductor",
              "Toner"
            ]
          },
          {
            "name": "colorType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NotAvailable",
              "Black",
              "Cyan",
              "Magenta",
              "Yellow",
              "Black1",
              "Black2",
              "Black3"
            ]
          },
          {
            "name": "maintenanceKitTypeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maintenanceKitColorId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Dealer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[UpdateAlertLimitDealerDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Dealer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified dealer",
        "operationId": "AlertLimit/Dealer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDealerDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get customer Alert Limit settings",
        "operationId": "AlertLimit/Customer/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer",
        "operationId": "AlertLimit/Customer/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/List": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get dealers Alert Limit settings",
        "operationId": "AlertLimit/Customer/Product/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AlertLimitCustomerProductDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Customer/Product/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitCustomerProductDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Get": {
      "get": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Get device Alert Limit settings",
        "operationId": "AlertLimit/Device/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AlertLimitBaseDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Update": {
      "put": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Set Alert limits for a specified Customer and Product",
        "operationId": "AlertLimit/Device/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[UpdateAlertLimitDeviceDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "summary": "Delete Alert limits",
        "operationId": "AlertLimit/Customer/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Customer/Product/Delete": {
      "post": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Customer/Product/Delete",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteRequest[KeyValue]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/AlertLimit/Device/Delete": {
      "delete": {
        "tags": [
          "AlertLimitApi"
        ],
        "operationId": "AlertLimit/Device/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result from a saved report.",
        "operationId": "Analytics/GetReportResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[TabularResultDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Analytics/GetReportFileResult": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "summary": "Get result as file (Excel, CSV) from a saved report.",
        "operationId": "Analytics/GetReportFileResult",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "idReport",
            "in": "query",
            "description": "The ID of a saved custom report.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "reportFormat",
            "in": "query",
            "description": "The export format of the result (Excel, CSV)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseHttpResponseMessage"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api Clients for Dealer.",
        "operationId": "ApiClient/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "dealerCode",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filterText",
            "in": "query",
            "description": "Gets or sets the filter text.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Gets or sets the page number.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageRows",
            "in": "query",
            "description": "Gets or sets the page rows.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sortColumn",
            "in": "query",
            "description": "Gets or sets the sort column.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Gets or sets the sort order.",
            "required": true,
            "type": "string",
            "enum": [
              "Asc",
              "Desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[ApiClientDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Delete Api Client",
        "operationId": "ApiClient/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/List": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "Get Api user list",
        "operationId": "ApiClient/Account/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Get": {
      "get": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Update": {
      "put": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[ApiClientAccountUpdateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Delete": {
      "delete": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/ApiClient/Account/Create": {
      "post": {
        "tags": [
          "ApiClientApi"
        ],
        "summary": "GEt Api Client Detail",
        "operationId": "ApiClient/Account/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[ApiClientAccountCreateRequest]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AccountApiDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetChallengeUrlRedirect": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Returns the login url based on the domain specified.",
        "operationId": "azuread/GetChallengeUrlRedirect",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Gets or sets the name.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetDealerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad configuration",
        "operationId": "azuread/GetDealerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/GetCustomerAzureSettings": {
      "get": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Get Azure Ad customer configuration",
        "operationId": "azuread/GetCustomerAzureSettings",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "description": "Gets or sets the code.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/CreateAzureDomain": {
      "post": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Create the azure domain configuration.",
        "operationId": "azuread/CreateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/azuread/UpdateAzureDomain": {
      "put": {
        "tags": [
          "AzureADApi"
        ],
        "summary": "Update the azure domain configuration.",
        "operationId": "azuread/UpdateAzureDomain",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[AzureADDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[AzureADDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersContracts": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers contracts.",
        "operationId": "Billing/GetCustomersContracts",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersContractsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerContractDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the dealer to dealer invoices.",
        "operationId": "Billing/GetDealerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetDealerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[DealerInvoicesListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomersInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customers invoices.",
        "operationId": "Billing/GetCustomersInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomersInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CustomerInvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoicesList": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoices.",
        "operationId": "Billing/GetCustomerInvoicesList",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCustomerInvoicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[InvoiceListDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetDealerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the invoice Header and Rows.",
        "operationId": "Billing/GetDealerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[DealerInvoiceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetCustomerInvoice": {
      "post": {
        "tags": [
          "Billing"
        ],
        "summary": "Gets the customer invoice Header and Rows",
        "operationId": "Billing/GetCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[InvoiceHeaderDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/GetInvoiceCategories": {
      "get": {
        "tags": [
          "Billing"
        ],
        "summary": "Get Invoice Categories",
        "operationId": "Billing/GetInvoiceCategories",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[InvoiceCategoryDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Billing/UpdateCustomerInvoice": {
      "patch": {
        "tags": [
          "Billing"
        ],
        "summary": "Update Customer Invoice",
        "operationId": "Billing/UpdateCustomerInvoice",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustomerInvoiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Communication/GetPortalReleaseNotes": {
      "get": {
        "tags": [
          "CommunicationApi"
        ],
        "summary": "Get Portal Release Notes",
        "operationId": "Communication/GetPortalReleaseNotes",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[PortalReleaseNoteDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Consumable/List": {
      "post": {
        "tags": [
          "ConsumableApi"
        ],
        "summary": "List all devices consumables",
        "operationId": "Consumable/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetConsumablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[ConsumablesDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/List": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the offices.",
        "operationId": "CostCenter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCostCentersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Get": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Gets the office.",
        "operationId": "CostCenter/Get",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetByIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CostCenterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Create": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Creates the office.",
        "operationId": "CostCenter/Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Update": {
      "post": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Updates the office.",
        "operationId": "CostCenter/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "The request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRequest[CostCenterDto]"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/CostCenter/Delete": {
      "delete": {
        "tags": [
          "CostCenter"
        ],
        "summary": "Delete  office.",
        "operationId": "CostCenter/Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns counters",
        "operationId": "Counter/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListDetailed": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/ListDetailed",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersDetailedRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersDetailedDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/ListBlended": {
      "post": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns blended counters",
        "operationId": "Counter/ListBlended",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CountersBlendDeviceDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Export": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Export",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[FileInfoDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/List": {
      "post": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/List",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedResultResponse[CounterCatalogItemDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Update": {
      "put": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveCountersCatalogRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Catalog/Suggestions": {
      "get": {
        "tags": [
          "Counter"
        ],
        "operationId": "Counter/Catalog/Suggestions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SingleResultResponse[CounterCatalogSuggestionsDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/List": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Returns detailed counters",
        "operationId": "Counter/Device/List",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml",
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
          "application/vnd.ms-excel"
        ],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Gets or sets the from date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Gets or sets the to date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Gets or sets the identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListResultResponse[CounterDto]"
            }
          }
        },
        "deprecated": false
      }
    },
    "/Counter/Device/Export": {
      "get": {
        "tags": [
          "Counter"
        ],
        "summary": "Export detailed counters",
        "operationId": "Counter/Device/Export",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "application/xml",
          "text/xml"
        ],
        "parameters": [
          {
            "name": "exportToCsv",
            "in": "query",
            "description": "Gets or sets a value indicating whether [export to CSV] or [export to XSLSX].",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Gets or sets the from date.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Gets or sets the to


==== PHP FILE: ./views/service.php ====
Size: 3554 bytes
Last Modified: Wed, Jun 11, 2025 12:39:56 PM
----------------------------------------
<?php
/**
 * MPSM Dashboard - Service View
 *
 * This file defines the content and layout for the "Service" view of the dashboard.
 * It's responsible for orchestrating which cards are displayed for this specific view.
 *
 * This file expects the following variables to be available:
 * - $selected_customer_id (int|null): The ID of the currently selected customer.
 *
 * Debugging Philosophy:
 * Log which cards are being attempted to be rendered and the data passed to them.
 * This helps diagnose why a specific card might not appear or displays incorrect data.
 */

// Ensure selected_customer_id is defined
$selected_customer_id = $selected_customer_id ?? null;

debug_log("Loading Service View. Selected Customer ID: " . ($selected_customer_id ?? 'None'), 'INFO');

// You can customize which cards appear on this view.
// This example hardcodes a few, but you could dynamically load them based on user preferences
// or customer type in a more advanced implementation.

// Data specific to this view that might be passed to cards.
// In a real application, this would involve fetching data from your DB or MPS Monitor API.
$service_data = [
    'customer_id' => $selected_customer_id,
    'today' => date('Y-m-d'),
    'current_time' => date('H:i:s'),
    // ... more data relevant to service view
];

debug_log("Rendering cards for Service View...", 'INFO');
?>

<?php
// Example: Printer Status Card
// This card might show a summary of printer statuses for the selected customer.
debug_log("Attempting to render 'printer_status_card' for Service View.", 'DEBUG');
render_card('printer_status_card', array_merge($service_data, [
    'card_title' => 'Overall Printer Status',
    'status_summary' => [
        'online' => 15,
        'offline' => 2,
        'warning' => 3,
        'error' => 1
    ]
]));
?>

<?php
// Example: Toner Levels Card
// This card could display average toner levels or warn about low toner.
debug_log("Attempting to render 'toner_levels_card' for Service View.", 'DEBUG');
render_card('toner_levels_card', array_merge($service_data, [
    'card_title' => 'Average Toner Levels',
    'toner_data' => [
        'black' => 75,
        'cyan' => 60,
        'magenta' => 40,
        'yellow' => 20
    ],
    'low_threshold' => 25
]));
?>

<?php
// Example: Service Tickets Card
// This card could list open service tickets.
debug_log("Attempting to render 'service_tickets_card' for Service View.", 'DEBUG');
render_card('service_tickets_card', array_merge($service_data, [
    'card_title' => 'Open Service Tickets',
    'tickets' => [
        ['id' => 'ST001', 'subject' => 'Printer Jam - Office A', 'status' => 'Open', 'priority' => 'High'],
        ['id' => 'ST002', 'subject' => 'Toner Replacement - Printer 5', 'status' => 'Pending', 'priority' => 'Medium'],
        ['id' => 'ST003', 'subject' => 'Connectivity Issue - Branch X', 'status' => 'Open', 'priority' => 'High'],
    ]
]));
?>

<?php
// Example: Performance Metrics Card (Placeholder)
// This card demonstrates how new cards can be added.
debug_log("Attempting to render 'performance_metrics_card' for Service View.", 'DEBUG');
render_card('performance_metrics_card', array_merge($service_data, [
    'card_title' => 'Device Performance Metrics',
    'metrics' => [
        'uptime_avg' => '99.8%',
        'pages_printed_total' => '1.2M',
        'error_rate' => '0.5%'
    ]
]));
?>

<?php debug_log("Finished rendering cards for Service View.", 'INFO'); ?>


