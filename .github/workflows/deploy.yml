name: FTP Deploy - Robust

on:
  push:
    branches: ["main"] # Trigger on pushes to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest # Run the job on a fresh Ubuntu environment
    timeout-minutes: 15 # Increased overall job timeout to 15 minutes

    steps:
      - name: 🔍 Checkout Code
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: 📦 Install lftp (if not present)
        run: sudo apt-get update && sudo apt-get install lftp -y
        # Ensures lftp is installed, as it's used for initial path discovery/verification

      - name: 🛡️ Verify FTP Credentials (using curl for basic check)
        # This step uses curl to perform a basic login test with the FTP server.
        # It's good for quickly verifying if the credentials themselves are valid.
        # Errors here mean a credential or immediate connection problem.
        run: |
          echo "Testing FTP login with provided credentials..."
          # WARNING: These credentials are hardcoded for debugging.
          # Please switch to GitHub Secrets (e.g., ${{ secrets.FTP_USERNAME }}) for production!
          curl -v --disable-epsv -u "mpsm@resolutionsbydesign.us:Mpsm1234!!!" \
            ftp://ftp.resolutionsbydesign.us/ > auth_test.log 2>&1 || true # `|| true` prevents step failure if curl fails
          
          echo "=== FTP LOGIN TEST RESULTS ==="
          if grep "230 Login successful" auth_test.log; then
            echo "✅ Credentials WORKED. Proceeding..."
          else
            echo "❌ Credentials FAILED or connection issue. See logs below:"
            cat auth_test.log
            exit 1 # Fail the workflow step if login was not successful
          fi
          cat auth_test.log

      - name: 🗺️ Discover Server Paths (using lftp for directory listing)
        # This step uses lftp to list directories on the FTP server.
        # It helps confirm the remote path structure and if `public_html` is accessible.
        # Errors here might indicate incorrect remote paths or permissions.
        run: |
          # WARNING: These credentials are hardcoded for debugging.
          # Please switch to GitHub Secrets (e.g., ${{ secrets.FTP_USERNAME }}) for production!
          lftp -e "
            set ftp:ssl-allow no; # Disable SSL for compatibility if your server doesn't enforce it (consider sftp for security)
            set net:timeout 30;   # Set a timeout for network operations
            open -u mpsm@resolutionsbydesign.us,Mpsm1234 ftp.resolutionsbydesign.us;
            echo '=== SERVER ROOT STRUCTURE ===';
            ls -la; # List contents of the root FTP directory
            echo '=== PUBLIC_HTML STRUCTURE (if applicable) ===';
            ls -la public_html/; # List contents of public_html
            echo '=== USER HOME DIRECTORY STRUCTURE (if applicable) ===';
            ls -la /home/resolut7/; # List contents of the specific home directory you found
            bye;
          " > path_discovery.log 2>&1
          
          echo "=== PATH DISCOVERY LOG ==="
          cat path_discovery.log

      - name: 🚀 Deploy with FTP-Deploy-Action
        uses: SamKirkland/FTP-Deploy-Action@v4.3.0 # Using a dedicated action for robust deployment
        # This action is highly recommended as it's designed for FTP deployments.
        # It handles file syncing, retries, and provides clearer output than raw lftp.
        with:
          server: ftp.resolutionsbydesign.us # Your FTP server hostname
          username: mpsm@resolutionsbydesign.us # Your FTP username (hardcoded for debugging)
          password: Mpsm1234!!! # Your FTP password (hardcoded for debugging)
          local-dir: ./ # Directory to deploy from (current repository root)
          server-directory: /home/resolut7/public_html/resolutionsbydesign.us/ # Target directory on your FTP server
          # Ensure this path is correct based on your path discovery step!
          # If this path is wrong, files won't appear on your website.
          protocol: ftp # Or 'ftps' if your server supports and requires explicit FTPS
          # port: 21 # Default FTP port. Specify if different.
          exclude: .git/ # Exclude the .git directory from being uploaded
          log-level: verbose # Increased logging level for better debugging
          delete: true # Delete files on the server that are not in the local repository
          timeout: 120 # Timeout for the deploy operation in seconds (120s = 2 minutes)

      - name: 📜 Final Report
        # This step provides a summary of the deployment outcome.
        # It's a good final check to ensure everything ran as expected.
        run: |
          echo "### DEPLOYMENT SUMMARY ###" > report.md
          echo "- Credentials: ✅ Validated (hardcoded for debugging)" >> report.md
          echo "- Deployment Method: SamKirkland/FTP-Deploy-Action" >> report.md
          echo "- Deployed to: /home/resolut7/public_html/resolutionsbydesign.us/" >> report.md
          echo "- Files should now be live at: https://resolutionsbydesign.us" >> report.md
          echo "" >> report.md
          echo "---" >> report.md
          echo "**Troubleshooting Tips:**" >> report.md
          echo "1. **Check Action Logs:** Review the 'Deploy with FTP-Deploy-Action' step logs for detailed transfer information and any errors." >> report.md
          echo "2. **Verify Server Path:** Confirm the `server-directory` in the 'Deploy' step matches the actual web root path on your GreenGeeks cPanel." >> report.md
          echo "3. **File Permissions:** Ensure correct file/directory permissions on the server if files are not accessible (often a cPanel setting)." >> report.md
          echo "4. **Clear Cache:** Sometimes, browser or server-side caching might prevent immediate display of new files." >> report.md
          echo "5. **Contact GreenGeeks Support:** Provide them with the full GitHub Actions workflow run link for detailed assistance if issues persist." >> report.md
          
          cat report.md
